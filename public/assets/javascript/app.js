if(!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function n(e){var t=e.length,n=re.type(e);return"function"===n||re.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e}function i(e,t,n){if(re.isFunction(t))return re.grep(e,function(e,i){return!!t.call(e,i,e)!==n});if(t.nodeType)return re.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(de.test(t))return re.filter(t,e,n);t=re.filter(t,e)}return re.grep(e,function(e){return re.inArray(e,t)>=0!==n})}function r(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}function o(e){var t=ye[e]={};return re.each(e.match($e)||[],function(e,n){t[n]=!0}),t}function a(){he.addEventListener?(he.removeEventListener("DOMContentLoaded",s,!1),e.removeEventListener("load",s,!1)):(he.detachEvent("onreadystatechange",s),e.detachEvent("onload",s))}function s(){(he.addEventListener||"load"===event.type||"complete"===he.readyState)&&(a(),re.ready())}function l(e,t,n){if(void 0===n&&1===e.nodeType){var i="data-"+t.replace(ke,"-$1").toLowerCase();if(n=e.getAttribute(i),"string"==typeof n){try{n="true"===n?!0:"false"===n?!1:"null"===n?null:+n+""===n?+n:Ce.test(n)?re.parseJSON(n):n}catch(r){}re.data(e,t,n)}else n=void 0}return n}function u(e){var t;for(t in e)if(("data"!==t||!re.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}function c(e,t,n,i){if(re.acceptData(e)){var r,o,a=re.expando,s=e.nodeType,l=s?re.cache:e,u=s?e[a]:e[a]&&a;if(u&&l[u]&&(i||l[u].data)||void 0!==n||"string"!=typeof t)return u||(u=s?e[a]=X.pop()||re.guid++:a),l[u]||(l[u]=s?{}:{toJSON:re.noop}),("object"==typeof t||"function"==typeof t)&&(i?l[u]=re.extend(l[u],t):l[u].data=re.extend(l[u].data,t)),o=l[u],i||(o.data||(o.data={}),o=o.data),void 0!==n&&(o[re.camelCase(t)]=n),"string"==typeof t?(r=o[t],null==r&&(r=o[re.camelCase(t)])):r=o,r}}function p(e,t,n){if(re.acceptData(e)){var i,r,o=e.nodeType,a=o?re.cache:e,s=o?e[re.expando]:re.expando;if(a[s]){if(t&&(i=n?a[s]:a[s].data)){re.isArray(t)?t=t.concat(re.map(t,re.camelCase)):t in i?t=[t]:(t=re.camelCase(t),t=t in i?[t]:t.split(" ")),r=t.length;for(;r--;)delete i[t[r]];if(n?!u(i):!re.isEmptyObject(i))return}(n||(delete a[s].data,u(a[s])))&&(o?re.cleanData([e],!0):ne.deleteExpando||a!=a.window?delete a[s]:a[s]=null)}}}function d(){return!0}function f(){return!1}function h(){try{return he.activeElement}catch(e){}}function m(e){var t=Le.split("|"),n=e.createDocumentFragment();if(n.createElement)for(;t.length;)n.createElement(t.pop());return n}function g(e,t){var n,i,r=0,o=typeof e.getElementsByTagName!==Se?e.getElementsByTagName(t||"*"):typeof e.querySelectorAll!==Se?e.querySelectorAll(t||"*"):void 0;if(!o)for(o=[],n=e.childNodes||e;null!=(i=n[r]);r++)!t||re.nodeName(i,t)?o.push(i):re.merge(o,g(i,t));return void 0===t||t&&re.nodeName(e,t)?re.merge([e],o):o}function v(e){Ae.test(e.type)&&(e.defaultChecked=e.checked)}function b(e,t){return re.nodeName(e,"table")&&re.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function $(e){return e.type=(null!==re.find.attr(e,"type"))+"/"+e.type,e}function y(e){var t=Ge.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function w(e,t){for(var n,i=0;null!=(n=e[i]);i++)re._data(n,"globalEval",!t||re._data(t[i],"globalEval"))}function x(e,t){if(1===t.nodeType&&re.hasData(e)){var n,i,r,o=re._data(e),a=re._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(i=0,r=s[n].length;r>i;i++)re.event.add(t,n,s[n][i])}a.data&&(a.data=re.extend({},a.data))}}function S(e,t){var n,i,r;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!ne.noCloneEvent&&t[re.expando]){r=re._data(t);for(i in r.events)re.removeEvent(t,i,r.handle);t.removeAttribute(re.expando)}"script"===n&&t.text!==e.text?($(t).text=e.text,y(t)):"object"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),ne.html5Clone&&e.innerHTML&&!re.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===n&&Ae.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===n?t.defaultSelected=t.selected=e.defaultSelected:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}}function C(t,n){var i,r=re(n.createElement(t)).appendTo(n.body),o=e.getDefaultComputedStyle&&(i=e.getDefaultComputedStyle(r[0]))?i.display:re.css(r[0],"display");return r.detach(),o}function k(e){var t=he,n=Ze[e];return n||(n=C(e,t),"none"!==n&&n||(Qe=(Qe||re("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=(Qe[0].contentWindow||Qe[0].contentDocument).document,t.write(),t.close(),n=C(e,t),Qe.detach()),Ze[e]=n),n}function E(e,t){return{get:function(){var n=e();return null!=n?n?void delete this.get:(this.get=t).apply(this,arguments):void 0}}}function T(e,t){if(t in e)return t;for(var n=t.charAt(0).toUpperCase()+t.slice(1),i=t,r=dt.length;r--;)if(t=dt[r]+n,t in e)return t;return i}function P(e,t){for(var n,i,r,o=[],a=0,s=e.length;s>a;a++)i=e[a],i.style&&(o[a]=re._data(i,"olddisplay"),n=i.style.display,t?(o[a]||"none"!==n||(i.style.display=""),""===i.style.display&&Pe(i)&&(o[a]=re._data(i,"olddisplay",k(i.nodeName)))):(r=Pe(i),(n&&"none"!==n||!r)&&re._data(i,"olddisplay",r?n:re.css(i,"display"))));for(a=0;s>a;a++)i=e[a],i.style&&(t&&"none"!==i.style.display&&""!==i.style.display||(i.style.display=t?o[a]||"":"none"));return e}function D(e,t,n){var i=lt.exec(t);return i?Math.max(0,i[1]-(n||0))+(i[2]||"px"):t}function A(e,t,n,i,r){for(var o=n===(i?"border":"content")?4:"width"===t?1:0,a=0;4>o;o+=2)"margin"===n&&(a+=re.css(e,n+Te[o],!0,r)),i?("content"===n&&(a-=re.css(e,"padding"+Te[o],!0,r)),"margin"!==n&&(a-=re.css(e,"border"+Te[o]+"Width",!0,r))):(a+=re.css(e,"padding"+Te[o],!0,r),"padding"!==n&&(a+=re.css(e,"border"+Te[o]+"Width",!0,r)));return a}function M(e,t,n){var i=!0,r="width"===t?e.offsetWidth:e.offsetHeight,o=et(e),a=ne.boxSizing&&"border-box"===re.css(e,"boxSizing",!1,o);if(0>=r||null==r){if(r=tt(e,t,o),(0>r||null==r)&&(r=e.style[t]),it.test(r))return r;i=a&&(ne.boxSizingReliable()||r===e.style[t]),r=parseFloat(r)||0}return r+A(e,t,n||(a?"border":"content"),i,o)+"px"}function O(e,t,n,i,r){return new O.prototype.init(e,t,n,i,r)}function R(){return setTimeout(function(){ft=void 0}),ft=re.now()}function I(e,t){var n,i={height:e},r=0;for(t=t?1:0;4>r;r+=2-t)n=Te[r],i["margin"+n]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function N(e,t,n){for(var i,r=($t[t]||[]).concat($t["*"]),o=0,a=r.length;a>o;o++)if(i=r[o].call(n,t,e))return i}function L(e,t,n){var i,r,o,a,s,l,u,c,p=this,d={},f=e.style,h=e.nodeType&&Pe(e),m=re._data(e,"fxshow");n.queue||(s=re._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,p.always(function(){p.always(function(){s.unqueued--,re.queue(e,"fx").length||s.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],u=re.css(e,"display"),c="none"===u?re._data(e,"olddisplay")||k(e.nodeName):u,"inline"===c&&"none"===re.css(e,"float")&&(ne.inlineBlockNeedsLayout&&"inline"!==k(e.nodeName)?f.zoom=1:f.display="inline-block")),n.overflow&&(f.overflow="hidden",ne.shrinkWrapBlocks()||p.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]}));for(i in t)if(r=t[i],mt.exec(r)){if(delete t[i],o=o||"toggle"===r,r===(h?"hide":"show")){if("show"!==r||!m||void 0===m[i])continue;h=!0}d[i]=m&&m[i]||re.style(e,i)}else u=void 0;if(re.isEmptyObject(d))"inline"===("none"===u?k(e.nodeName):u)&&(f.display=u);else{m?"hidden"in m&&(h=m.hidden):m=re._data(e,"fxshow",{}),o&&(m.hidden=!h),h?re(e).show():p.done(function(){re(e).hide()}),p.done(function(){var t;re._removeData(e,"fxshow");for(t in d)re.style(e,t,d[t])});for(i in d)a=N(h?m[i]:0,i,p),i in m||(m[i]=a.start,h&&(a.end=a.start,a.start="width"===i||"height"===i?1:0))}}function U(e,t){var n,i,r,o,a;for(n in e)if(i=re.camelCase(n),r=t[i],o=e[n],re.isArray(o)&&(r=o[1],o=e[n]=o[0]),n!==i&&(e[i]=o,delete e[n]),a=re.cssHooks[i],a&&"expand"in a){o=a.expand(o),delete e[i];for(n in o)n in e||(e[n]=o[n],t[n]=r)}else t[i]=r}function F(e,t,n){var i,r,o=0,a=bt.length,s=re.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var t=ft||R(),n=Math.max(0,u.startTime+u.duration-t),i=n/u.duration||0,o=1-i,a=0,l=u.tweens.length;l>a;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),1>o&&l?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:re.extend({},t),opts:re.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:ft||R(),duration:n.duration,tweens:[],createTween:function(t,n){var i=re.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(i),i},stop:function(t){var n=0,i=t?u.tweens.length:0;if(r)return this;for(r=!0;i>n;n++)u.tweens[n].run(1);return t?s.resolveWith(e,[u,t]):s.rejectWith(e,[u,t]),this}}),c=u.props;for(U(c,u.opts.specialEasing);a>o;o++)if(i=bt[o].call(u,e,c,u.opts))return i;return re.map(c,N,u),re.isFunction(u.opts.start)&&u.opts.start.call(e,u),re.fx.timer(re.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function j(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,r=0,o=t.toLowerCase().match($e)||[];if(re.isFunction(n))for(;i=o[r++];)"+"===i.charAt(0)?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function _(e,t,n,i){function r(s){var l;return o[s]=!0,re.each(e[s]||[],function(e,s){var u=s(t,n,i);return"string"!=typeof u||a||o[u]?a?!(l=u):void 0:(t.dataTypes.unshift(u),r(u),!1)}),l}var o={},a=e===zt;return r(t.dataTypes[0])||!o["*"]&&r("*")}function q(e,t){var n,i,r=re.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((r[i]?e:n||(n={}))[i]=t[i]);return n&&re.extend(!0,e,n),e}function H(e,t,n){for(var i,r,o,a,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(a in s)if(s[a]&&s[a].test(r)){l.unshift(a);break}if(l[0]in n)o=l[0];else{for(a in n){if(!l[0]||e.converters[a+" "+l[0]]){o=a;break}i||(i=a)}o=o||i}return o?(o!==l[0]&&l.unshift(o),n[o]):void 0}function z(e,t,n,i){var r,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=u[l+" "+o]||u["* "+o],!a)for(r in u)if(s=r.split(" "),s[1]===o&&(a=u[l+" "+s[0]]||u["* "+s[0]])){a===!0?a=u[r]:u[r]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(p){return{state:"parsererror",error:a?p:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}function V(e,t,n,i){var r;if(re.isArray(t))re.each(t,function(t,r){n||Gt.test(e)?i(e,r):V(e+"["+("object"==typeof r?t:"")+"]",r,n,i)});else if(n||"object"!==re.type(t))i(e,t);else for(r in t)V(e+"["+r+"]",t[r],n,i)}function B(){try{return new e.XMLHttpRequest}catch(t){}}function W(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function G(e){return re.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}var X=[],Y=X.slice,K=X.concat,J=X.push,Q=X.indexOf,Z={},ee=Z.toString,te=Z.hasOwnProperty,ne={},ie="1.11.1",re=function(e,t){return new re.fn.init(e,t)},oe=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ae=/^-ms-/,se=/-([\da-z])/gi,le=function(e,t){return t.toUpperCase()};re.fn=re.prototype={jquery:ie,constructor:re,selector:"",length:0,toArray:function(){return Y.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:Y.call(this)},pushStack:function(e){var t=re.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return re.each(this,e,t)},map:function(e){return this.pushStack(re.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(Y.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:J,sort:X.sort,splice:X.splice},re.extend=re.fn.extend=function(){var e,t,n,i,r,o,a=arguments[0]||{},s=1,l=arguments.length,u=!1;for("boolean"==typeof a&&(u=a,a=arguments[s]||{},s++),"object"==typeof a||re.isFunction(a)||(a={}),s===l&&(a=this,s--);l>s;s++)if(null!=(r=arguments[s]))for(i in r)e=a[i],n=r[i],a!==n&&(u&&n&&(re.isPlainObject(n)||(t=re.isArray(n)))?(t?(t=!1,o=e&&re.isArray(e)?e:[]):o=e&&re.isPlainObject(e)?e:{},a[i]=re.extend(u,o,n)):void 0!==n&&(a[i]=n));return a},re.extend({expando:"jQuery"+(ie+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===re.type(e)},isArray:Array.isArray||function(e){return"array"===re.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!re.isArray(e)&&e-parseFloat(e)>=0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},isPlainObject:function(e){var t;if(!e||"object"!==re.type(e)||e.nodeType||re.isWindow(e))return!1;try{if(e.constructor&&!te.call(e,"constructor")&&!te.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}if(ne.ownLast)for(t in e)return te.call(e,t);for(t in e);return void 0===t||te.call(e,t)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?Z[ee.call(e)]||"object":typeof e},globalEval:function(t){t&&re.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(ae,"ms-").replace(se,le)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,i){var r,o=0,a=e.length,s=n(e);if(i){if(s)for(;a>o&&(r=t.apply(e[o],i),r!==!1);o++);else for(o in e)if(r=t.apply(e[o],i),r===!1)break}else if(s)for(;a>o&&(r=t.call(e[o],o,e[o]),r!==!1);o++);else for(o in e)if(r=t.call(e[o],o,e[o]),r===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(oe,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(n(Object(e))?re.merge(i,"string"==typeof e?[e]:e):J.call(i,e)),i},inArray:function(e,t,n){var i;if(t){if(Q)return Q.call(t,e,n);for(i=t.length,n=n?0>n?Math.max(0,i+n):n:0;i>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,t){for(var n=+t.length,i=0,r=e.length;n>i;)e[r++]=t[i++];if(n!==n)for(;void 0!==t[i];)e[r++]=t[i++];return e.length=r,e},grep:function(e,t,n){for(var i,r=[],o=0,a=e.length,s=!n;a>o;o++)i=!t(e[o],o),i!==s&&r.push(e[o]);return r},map:function(e,t,i){var r,o=0,a=e.length,s=n(e),l=[];if(s)for(;a>o;o++)r=t(e[o],o,i),null!=r&&l.push(r);else for(o in e)r=t(e[o],o,i),null!=r&&l.push(r);return K.apply([],l)},guid:1,proxy:function(e,t){var n,i,r;return"string"==typeof t&&(r=e[t],t=e,e=r),re.isFunction(e)?(n=Y.call(arguments,2),i=function(){return e.apply(t||this,n.concat(Y.call(arguments)))},i.guid=e.guid=e.guid||re.guid++,i):void 0},now:function(){return+new Date},support:ne}),re.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){Z["[object "+t+"]"]=t.toLowerCase()});var ue=function(e){function t(e,t,n,i){var r,o,a,s,l,u,p,f,h,m;if((t?t.ownerDocument||t:_)!==O&&M(t),t=t||O,n=n||[],!e||"string"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(I&&!i){if(r=be.exec(e))if(a=r[1]){if(9===s){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&F(t,o)&&o.id===a)return n.push(o),n}else{if(r[2])return Z.apply(n,t.getElementsByTagName(e)),n;if((a=r[3])&&w.getElementsByClassName&&t.getElementsByClassName)return Z.apply(n,t.getElementsByClassName(a)),n}if(w.qsa&&(!N||!N.test(e))){if(f=p=j,h=t,m=9===s&&e,1===s&&"object"!==t.nodeName.toLowerCase()){for(u=k(e),(p=t.getAttribute("id"))?f=p.replace(ye,"\\$&"):t.setAttribute("id",f),f="[id='"+f+"'] ",l=u.length;l--;)u[l]=f+d(u[l]);h=$e.test(e)&&c(t.parentNode)||t,m=u.join(",")}if(m)try{return Z.apply(n,h.querySelectorAll(m)),n}catch(g){}finally{p||t.removeAttribute("id")}}}return T(e.replace(le,"$1"),t,n,i)}function n(){function e(n,i){return t.push(n+" ")>x.cacheLength&&delete e[t.shift()],e[n+" "]=i}var t=[];return e}function i(e){return e[j]=!0,e}function r(e){var t=O.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split("|"),i=e.length;i--;)x.attrHandle[n[i]]=t}function a(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||X)-(~e.sourceIndex||X);if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function u(e){return i(function(t){return t=+t,i(function(n,i){for(var r,o=e([],n.length,t),a=o.length;a--;)n[r=o[a]]&&(n[r]=!(i[r]=n[r]))})})}function c(e){return e&&typeof e.getElementsByTagName!==G&&e}function p(){}function d(e){for(var t=0,n=e.length,i="";n>t;t++)i+=e[t].value;return i}function f(e,t,n){var i=t.dir,r=n&&"parentNode"===i,o=H++;return t.first?function(t,n,o){for(;t=t[i];)if(1===t.nodeType||r)return e(t,n,o)}:function(t,n,a){var s,l,u=[q,o];if(a){for(;t=t[i];)if((1===t.nodeType||r)&&e(t,n,a))return!0}else for(;t=t[i];)if(1===t.nodeType||r){if(l=t[j]||(t[j]={}),(s=l[i])&&s[0]===q&&s[1]===o)return u[2]=s[2];if(l[i]=u,u[2]=e(t,n,a))return!0}}}function h(e){return e.length>1?function(t,n,i){for(var r=e.length;r--;)if(!e[r](t,n,i))return!1;return!0}:e[0]}function m(e,n,i){for(var r=0,o=n.length;o>r;r++)t(e,n[r],i);return i}function g(e,t,n,i,r){for(var o,a=[],s=0,l=e.length,u=null!=t;l>s;s++)(o=e[s])&&(!n||n(o,i,r))&&(a.push(o),u&&t.push(s));return a}function v(e,t,n,r,o,a){return r&&!r[j]&&(r=v(r)),o&&!o[j]&&(o=v(o,a)),i(function(i,a,s,l){var u,c,p,d=[],f=[],h=a.length,v=i||m(t||"*",s.nodeType?[s]:s,[]),b=!e||!i&&t?v:g(v,d,e,s,l),$=n?o||(i?e:h||r)?[]:a:b;if(n&&n(b,$,s,l),r)for(u=g($,f),r(u,[],s,l),c=u.length;c--;)(p=u[c])&&($[f[c]]=!(b[f[c]]=p));if(i){if(o||e){if(o){for(u=[],c=$.length;c--;)(p=$[c])&&u.push(b[c]=p);o(null,$=[],u,l)}for(c=$.length;c--;)(p=$[c])&&(u=o?te.call(i,p):d[c])>-1&&(i[u]=!(a[u]=p))}}else $=g($===a?$.splice(h,$.length):$),o?o(null,a,$,l):Z.apply(a,$)})}function b(e){for(var t,n,i,r=e.length,o=x.relative[e[0].type],a=o||x.relative[" "],s=o?1:0,l=f(function(e){return e===t},a,!0),u=f(function(e){return te.call(t,e)>-1},a,!0),c=[function(e,n,i){return!o&&(i||n!==P)||((t=n).nodeType?l(e,n,i):u(e,n,i))}];r>s;s++)if(n=x.relative[e[s].type])c=[f(h(c),n)];else{if(n=x.filter[e[s].type].apply(null,e[s].matches),n[j]){for(i=++s;r>i&&!x.relative[e[i].type];i++);return v(s>1&&h(c),s>1&&d(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(le,"$1"),n,i>s&&b(e.slice(s,i)),r>i&&b(e=e.slice(i)),r>i&&d(e))}c.push(n)}return h(c)}function $(e,n){var r=n.length>0,o=e.length>0,a=function(i,a,s,l,u){var c,p,d,f=0,h="0",m=i&&[],v=[],b=P,$=i||o&&x.find.TAG("*",u),y=q+=null==b?1:Math.random()||.1,w=$.length;for(u&&(P=a!==O&&a);h!==w&&null!=(c=$[h]);h++){if(o&&c){for(p=0;d=e[p++];)if(d(c,a,s)){l.push(c);break}u&&(q=y)}r&&((c=!d&&c)&&f--,i&&m.push(c))}if(f+=h,r&&h!==f){for(p=0;d=n[p++];)d(m,v,a,s);if(i){if(f>0)for(;h--;)m[h]||v[h]||(v[h]=J.call(l));v=g(v)}Z.apply(l,v),u&&!i&&v.length>0&&f+n.length>1&&t.uniqueSort(l)}return u&&(q=y,P=b),m};return r?i(a):a}var y,w,x,S,C,k,E,T,P,D,A,M,O,R,I,N,L,U,F,j="sizzle"+-new Date,_=e.document,q=0,H=0,z=n(),V=n(),B=n(),W=function(e,t){return e===t&&(A=!0),0},G="undefined",X=1<<31,Y={}.hasOwnProperty,K=[],J=K.pop,Q=K.push,Z=K.push,ee=K.slice,te=K.indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(this[t]===e)return t;return-1},ne="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ie="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",oe=re.replace("w","w#"),ae="\\["+ie+"*("+re+")(?:"+ie+"*([*^$|!~]?=)"+ie+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+oe+"))|)"+ie+"*\\]",se=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+ae+")*)|.*)\\)|)",le=new RegExp("^"+ie+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ie+"+$","g"),ue=new RegExp("^"+ie+"*,"+ie+"*"),ce=new RegExp("^"+ie+"*([>+~]|"+ie+")"+ie+"*"),pe=new RegExp("="+ie+"*([^\\]'\"]*?)"+ie+"*\\]","g"),de=new RegExp(se),fe=new RegExp("^"+oe+"$"),he={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re.replace("w","w*")+")"),ATTR:new RegExp("^"+ae),PSEUDO:new RegExp("^"+se),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ie+"*(even|odd|(([+-]|)(\\d*)n|)"+ie+"*(?:([+-]|)"+ie+"*(\\d+)|))"+ie+"*\\)|)","i"),bool:new RegExp("^(?:"+ne+")$","i"),needsContext:new RegExp("^"+ie+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ie+"*((?:-\\d)?\\d*)"+ie+"*\\)|)(?=[^-]|$)","i")},me=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,ve=/^[^{]+\{\s*\[native \w/,be=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$e=/[+~]/,ye=/'|\\/g,we=new RegExp("\\\\([\\da-f]{1,6}"+ie+"?|("+ie+")|.)","ig"),xe=function(e,t,n){var i="0x"+t-65536;return i!==i||n?t:0>i?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)};try{Z.apply(K=ee.call(_.childNodes),_.childNodes),K[_.childNodes.length].nodeType}catch(Se){Z={apply:K.length?function(e,t){Q.apply(e,ee.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}w=t.support={},C=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},M=t.setDocument=function(e){var t,n=e?e.ownerDocument||e:_,i=n.defaultView;return n!==O&&9===n.nodeType&&n.documentElement?(O=n,R=n.documentElement,I=!C(n),i&&i!==i.top&&(i.addEventListener?i.addEventListener("unload",function(){M()},!1):i.attachEvent&&i.attachEvent("onunload",function(){M()})),w.attributes=r(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=r(function(e){return e.appendChild(n.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=ve.test(n.getElementsByClassName)&&r(function(e){return e.innerHTML="<div class='a'></div><div class='a i'></div>",e.firstChild.className="i",2===e.getElementsByClassName("i").length}),w.getById=r(function(e){return R.appendChild(e).id=j,!n.getElementsByName||!n.getElementsByName(j).length}),w.getById?(x.find.ID=function(e,t){if(typeof t.getElementById!==G&&I){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},x.filter.ID=function(e){var t=e.replace(we,xe);return function(e){return e.getAttribute("id")===t}}):(delete x.find.ID,x.filter.ID=function(e){var t=e.replace(we,xe);return function(e){var n=typeof e.getAttributeNode!==G&&e.getAttributeNode("id");return n&&n.value===t}}),x.find.TAG=w.getElementsByTagName?function(e,t){return typeof t.getElementsByTagName!==G?t.getElementsByTagName(e):void 0}:function(e,t){var n,i=[],r=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},x.find.CLASS=w.getElementsByClassName&&function(e,t){return typeof t.getElementsByClassName!==G&&I?t.getElementsByClassName(e):void 0},L=[],N=[],(w.qsa=ve.test(n.querySelectorAll))&&(r(function(e){e.innerHTML="<select msallowclip=''><option selected=''></option></select>",e.querySelectorAll("[msallowclip^='']").length&&N.push("[*^$]="+ie+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||N.push("\\["+ie+"*(?:value|"+ne+")"),e.querySelectorAll(":checked").length||N.push(":checked")}),r(function(e){var t=n.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&N.push("name"+ie+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||N.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),N.push(",.*:")})),(w.matchesSelector=ve.test(U=R.matches||R.webkitMatchesSelector||R.mozMatchesSelector||R.oMatchesSelector||R.msMatchesSelector))&&r(function(e){w.disconnectedMatch=U.call(e,"div"),U.call(e,"[s!='']:x"),L.push("!=",se)}),N=N.length&&new RegExp(N.join("|")),L=L.length&&new RegExp(L.join("|")),t=ve.test(R.compareDocumentPosition),F=t||ve.test(R.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},W=t?function(e,t){if(e===t)return A=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i?i:(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&i||!w.sortDetached&&t.compareDocumentPosition(e)===i?e===n||e.ownerDocument===_&&F(_,e)?-1:t===n||t.ownerDocument===_&&F(_,t)?1:D?te.call(D,e)-te.call(D,t):0:4&i?-1:1)}:function(e,t){if(e===t)return A=!0,0;var i,r=0,o=e.parentNode,s=t.parentNode,l=[e],u=[t];if(!o||!s)return e===n?-1:t===n?1:o?-1:s?1:D?te.call(D,e)-te.call(D,t):0;if(o===s)return a(e,t);for(i=e;i=i.parentNode;)l.unshift(i);for(i=t;i=i.parentNode;)u.unshift(i);for(;l[r]===u[r];)r++;return r?a(l[r],u[r]):l[r]===_?-1:u[r]===_?1:0},n):O},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==O&&M(e),n=n.replace(pe,"='$1']"),!(!w.matchesSelector||!I||L&&L.test(n)||N&&N.test(n)))try{var i=U.call(e,n);if(i||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(r){}return t(n,O,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==O&&M(e),F(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==O&&M(e);var n=x.attrHandle[t.toLowerCase()],i=n&&Y.call(x.attrHandle,t.toLowerCase())?n(e,t,!I):void 0;return void 0!==i?i:w.attributes||!I?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],i=0,r=0;if(A=!w.detectDuplicates,D=!w.sortStable&&e.slice(0),e.sort(W),A){for(;t=e[r++];)t===e[r]&&(i=n.push(r));for(;i--;)e.splice(n[i],1)}return D=null,e},S=t.getText=function(e){var t,n="",i=0,r=e.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=S(e)}else if(3===r||4===r)return e.nodeValue}else for(;t=e[i++];)n+=S(t);return n},x=t.selectors={cacheLength:50,createPseudo:i,match:he,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(we,xe),e[3]=(e[3]||e[4]||e[5]||"").replace(we,xe),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return he.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&de.test(n)&&(t=k(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(we,xe).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=z[e+" "];return t||(t=new RegExp("(^|"+ie+")"+e+"("+ie+"|$)"))&&z(e,function(e){return t.test("string"==typeof e.className&&e.className||typeof e.getAttribute!==G&&e.getAttribute("class")||"")})},ATTR:function(e,n,i){return function(r){var o=t.attr(r,e);return null==o?"!="===n:n?(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o+" ").indexOf(i)>-1:"|="===n?o===i||o.slice(0,i.length+1)===i+"-":!1):!0}},CHILD:function(e,t,n,i,r){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===i&&0===r?function(e){return!!e.parentNode}:function(t,n,l){var u,c,p,d,f,h,m=o!==a?"nextSibling":"previousSibling",g=t.parentNode,v=s&&t.nodeName.toLowerCase(),b=!l&&!s;if(g){if(o){for(;m;){for(p=t;p=p[m];)if(s?p.nodeName.toLowerCase()===v:1===p.nodeType)return!1;h=m="only"===e&&!h&&"nextSibling"}return!0}if(h=[a?g.firstChild:g.lastChild],a&&b){for(c=g[j]||(g[j]={}),u=c[e]||[],f=u[0]===q&&u[1],d=u[0]===q&&u[2],p=f&&g.childNodes[f];p=++f&&p&&p[m]||(d=f=0)||h.pop();)if(1===p.nodeType&&++d&&p===t){c[e]=[q,f,d];break}}else if(b&&(u=(t[j]||(t[j]={}))[e])&&u[0]===q)d=u[1];else for(;(p=++f&&p&&p[m]||(d=f=0)||h.pop())&&((s?p.nodeName.toLowerCase()!==v:1!==p.nodeType)||!++d||(b&&((p[j]||(p[j]={}))[e]=[q,d]),p!==t)););return d-=r,d===i||d%i===0&&d/i>=0}}},PSEUDO:function(e,n){var r,o=x.pseudos[e]||x.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[j]?o(n):o.length>1?(r=[e,e,"",n],x.setFilters.hasOwnProperty(e.toLowerCase())?i(function(e,t){for(var i,r=o(e,n),a=r.length;a--;)i=te.call(e,r[a]),e[i]=!(t[i]=r[a])}):function(e){return o(e,0,r)}):o}},pseudos:{not:i(function(e){var t=[],n=[],r=E(e.replace(le,"$1"));return r[j]?i(function(e,t,n,i){for(var o,a=r(e,null,i,[]),s=e.length;s--;)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:i(function(e){return function(n){return t(e,n).length>0}}),contains:i(function(e){return function(t){return(t.textContent||t.innerText||S(t)).indexOf(e)>-1}}),lang:i(function(e){return fe.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(we,xe).toLowerCase(),function(t){var n;do if(n=I?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===R},focus:function(e){return e===O.activeElement&&(!O.hasFocus||O.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return me.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:u(function(){return[0]}),last:u(function(e,t){return[t-1]}),eq:u(function(e,t,n){return[0>n?n+t:n]}),even:u(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:u(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:u(function(e,t,n){for(var i=0>n?n+t:n;--i>=0;)e.push(i);return e}),gt:u(function(e,t,n){for(var i=0>n?n+t:n;++i<t;)e.push(i);return e})}},x.pseudos.nth=x.pseudos.eq;for(y in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[y]=s(y);for(y in{submit:!0,reset:!0})x.pseudos[y]=l(y);return p.prototype=x.filters=x.pseudos,x.setFilters=new p,k=t.tokenize=function(e,n){var i,r,o,a,s,l,u,c=V[e+" "];if(c)return n?0:c.slice(0);for(s=e,l=[],u=x.preFilter;s;){(!i||(r=ue.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),l.push(o=[])),i=!1,(r=ce.exec(s))&&(i=r.shift(),o.push({value:i,type:r[0].replace(le," ")}),s=s.slice(i.length));for(a in x.filter)!(r=he[a].exec(s))||u[a]&&!(r=u[a](r))||(i=r.shift(),o.push({value:i,type:a,
matches:r}),s=s.slice(i.length));if(!i)break}return n?s.length:s?t.error(e):V(e,l).slice(0)},E=t.compile=function(e,t){var n,i=[],r=[],o=B[e+" "];if(!o){for(t||(t=k(e)),n=t.length;n--;)o=b(t[n]),o[j]?i.push(o):r.push(o);o=B(e,$(r,i)),o.selector=e}return o},T=t.select=function(e,t,n,i){var r,o,a,s,l,u="function"==typeof e&&e,p=!i&&k(e=u.selector||e);if(n=n||[],1===p.length){if(o=p[0]=p[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&w.getById&&9===t.nodeType&&I&&x.relative[o[1].type]){if(t=(x.find.ID(a.matches[0].replace(we,xe),t)||[])[0],!t)return n;u&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(r=he.needsContext.test(e)?0:o.length;r--&&(a=o[r],!x.relative[s=a.type]);)if((l=x.find[s])&&(i=l(a.matches[0].replace(we,xe),$e.test(o[0].type)&&c(t.parentNode)||t))){if(o.splice(r,1),e=i.length&&d(o),!e)return Z.apply(n,i),n;break}}return(u||E(e,p))(i,t,!I,n,$e.test(e)&&c(t.parentNode)||t),n},w.sortStable=j.split("").sort(W).join("")===j,w.detectDuplicates=!!A,M(),w.sortDetached=r(function(e){return 1&e.compareDocumentPosition(O.createElement("div"))}),r(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&r(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),r(function(e){return null==e.getAttribute("disabled")})||o(ne,function(e,t,n){var i;return n?void 0:e[t]===!0?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),t}(e);re.find=ue,re.expr=ue.selectors,re.expr[":"]=re.expr.pseudos,re.unique=ue.uniqueSort,re.text=ue.getText,re.isXMLDoc=ue.isXML,re.contains=ue.contains;var ce=re.expr.match.needsContext,pe=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,de=/^.[^:#\[\.,]*$/;re.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?re.find.matchesSelector(i,e)?[i]:[]:re.find.matches(e,re.grep(t,function(e){return 1===e.nodeType}))},re.fn.extend({find:function(e){var t,n=[],i=this,r=i.length;if("string"!=typeof e)return this.pushStack(re(e).filter(function(){for(t=0;r>t;t++)if(re.contains(i[t],this))return!0}));for(t=0;r>t;t++)re.find(e,i[t],n);return n=this.pushStack(r>1?re.unique(n):n),n.selector=this.selector?this.selector+" "+e:e,n},filter:function(e){return this.pushStack(i(this,e||[],!1))},not:function(e){return this.pushStack(i(this,e||[],!0))},is:function(e){return!!i(this,"string"==typeof e&&ce.test(e)?re(e):e||[],!1).length}});var fe,he=e.document,me=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ge=re.fn.init=function(e,t){var n,i;if(!e)return this;if("string"==typeof e){if(n="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:me.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||fe).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof re?t[0]:t,re.merge(this,re.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:he,!0)),pe.test(n[1])&&re.isPlainObject(t))for(n in t)re.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}if(i=he.getElementById(n[2]),i&&i.parentNode){if(i.id!==n[2])return fe.find(e);this.length=1,this[0]=i}return this.context=he,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):re.isFunction(e)?"undefined"!=typeof fe.ready?fe.ready(e):e(re):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),re.makeArray(e,this))};ge.prototype=re.fn,fe=re(he);var ve=/^(?:parents|prev(?:Until|All))/,be={children:!0,contents:!0,next:!0,prev:!0};re.extend({dir:function(e,t,n){for(var i=[],r=e[t];r&&9!==r.nodeType&&(void 0===n||1!==r.nodeType||!re(r).is(n));)1===r.nodeType&&i.push(r),r=r[t];return i},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}}),re.fn.extend({has:function(e){var t,n=re(e,this),i=n.length;return this.filter(function(){for(t=0;i>t;t++)if(re.contains(this,n[t]))return!0})},closest:function(e,t){for(var n,i=0,r=this.length,o=[],a=ce.test(e)||"string"!=typeof e?re(e,t||this.context):0;r>i;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&re.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?re.unique(o):o)},index:function(e){return e?"string"==typeof e?re.inArray(this[0],re(e)):re.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(re.unique(re.merge(this.get(),re(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),re.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return re.dir(e,"parentNode")},parentsUntil:function(e,t,n){return re.dir(e,"parentNode",n)},next:function(e){return r(e,"nextSibling")},prev:function(e){return r(e,"previousSibling")},nextAll:function(e){return re.dir(e,"nextSibling")},prevAll:function(e){return re.dir(e,"previousSibling")},nextUntil:function(e,t,n){return re.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return re.dir(e,"previousSibling",n)},siblings:function(e){return re.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return re.sibling(e.firstChild)},contents:function(e){return re.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:re.merge([],e.childNodes)}},function(e,t){re.fn[e]=function(n,i){var r=re.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=re.filter(i,r)),this.length>1&&(be[e]||(r=re.unique(r)),ve.test(e)&&(r=r.reverse())),this.pushStack(r)}});var $e=/\S+/g,ye={};re.Callbacks=function(e){e="string"==typeof e?ye[e]||o(e):re.extend({},e);var t,n,i,r,a,s,l=[],u=!e.once&&[],c=function(o){for(n=e.memory&&o,i=!0,a=s||0,s=0,r=l.length,t=!0;l&&r>a;a++)if(l[a].apply(o[0],o[1])===!1&&e.stopOnFalse){n=!1;break}t=!1,l&&(u?u.length&&c(u.shift()):n?l=[]:p.disable())},p={add:function(){if(l){var i=l.length;!function o(t){re.each(t,function(t,n){var i=re.type(n);"function"===i?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==i&&o(n)})}(arguments),t?r=l.length:n&&(s=i,c(n))}return this},remove:function(){return l&&re.each(arguments,function(e,n){for(var i;(i=re.inArray(n,l,i))>-1;)l.splice(i,1),t&&(r>=i&&r--,a>=i&&a--)}),this},has:function(e){return e?re.inArray(e,l)>-1:!(!l||!l.length)},empty:function(){return l=[],r=0,this},disable:function(){return l=u=n=void 0,this},disabled:function(){return!l},lock:function(){return u=void 0,n||p.disable(),this},locked:function(){return!u},fireWith:function(e,n){return!l||i&&!u||(n=n||[],n=[e,n.slice?n.slice():n],t?u.push(n):c(n)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},re.extend({Deferred:function(e){var t=[["resolve","done",re.Callbacks("once memory"),"resolved"],["reject","fail",re.Callbacks("once memory"),"rejected"],["notify","progress",re.Callbacks("memory")]],n="pending",i={state:function(){return n},always:function(){return r.done(arguments).fail(arguments),this},then:function(){var e=arguments;return re.Deferred(function(n){re.each(t,function(t,o){var a=re.isFunction(e[t])&&e[t];r[o[1]](function(){var e=a&&a.apply(this,arguments);e&&re.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[o[0]+"With"](this===i?n.promise():this,a?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?re.extend(e,i):i}},r={};return i.pipe=i.then,re.each(t,function(e,o){var a=o[2],s=o[3];i[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),r[o[0]]=function(){return r[o[0]+"With"](this===r?i:this,arguments),this},r[o[0]+"With"]=a.fireWith}),i.promise(r),e&&e.call(r,r),r},when:function(e){var t,n,i,r=0,o=Y.call(arguments),a=o.length,s=1!==a||e&&re.isFunction(e.promise)?a:0,l=1===s?e:re.Deferred(),u=function(e,n,i){return function(r){n[e]=this,i[e]=arguments.length>1?Y.call(arguments):r,i===t?l.notifyWith(n,i):--s||l.resolveWith(n,i)}};if(a>1)for(t=new Array(a),n=new Array(a),i=new Array(a);a>r;r++)o[r]&&re.isFunction(o[r].promise)?o[r].promise().done(u(r,i,o)).fail(l.reject).progress(u(r,n,t)):--s;return s||l.resolveWith(i,o),l.promise()}});var we;re.fn.ready=function(e){return re.ready.promise().done(e),this},re.extend({isReady:!1,readyWait:1,holdReady:function(e){e?re.readyWait++:re.ready(!0)},ready:function(e){if(e===!0?!--re.readyWait:!re.isReady){if(!he.body)return setTimeout(re.ready);re.isReady=!0,e!==!0&&--re.readyWait>0||(we.resolveWith(he,[re]),re.fn.triggerHandler&&(re(he).triggerHandler("ready"),re(he).off("ready")))}}}),re.ready.promise=function(t){if(!we)if(we=re.Deferred(),"complete"===he.readyState)setTimeout(re.ready);else if(he.addEventListener)he.addEventListener("DOMContentLoaded",s,!1),e.addEventListener("load",s,!1);else{he.attachEvent("onreadystatechange",s),e.attachEvent("onload",s);var n=!1;try{n=null==e.frameElement&&he.documentElement}catch(i){}n&&n.doScroll&&!function r(){if(!re.isReady){try{n.doScroll("left")}catch(e){return setTimeout(r,50)}a(),re.ready()}}()}return we.promise(t)};var xe,Se="undefined";for(xe in re(ne))break;ne.ownLast="0"!==xe,ne.inlineBlockNeedsLayout=!1,re(function(){var e,t,n,i;n=he.getElementsByTagName("body")[0],n&&n.style&&(t=he.createElement("div"),i=he.createElement("div"),i.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",n.appendChild(i).appendChild(t),typeof t.style.zoom!==Se&&(t.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",ne.inlineBlockNeedsLayout=e=3===t.offsetWidth,e&&(n.style.zoom=1)),n.removeChild(i))}),function(){var e=he.createElement("div");if(null==ne.deleteExpando){ne.deleteExpando=!0;try{delete e.test}catch(t){ne.deleteExpando=!1}}e=null}(),re.acceptData=function(e){var t=re.noData[(e.nodeName+" ").toLowerCase()],n=+e.nodeType||1;return 1!==n&&9!==n?!1:!t||t!==!0&&e.getAttribute("classid")===t};var Ce=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,ke=/([A-Z])/g;re.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(e){return e=e.nodeType?re.cache[e[re.expando]]:e[re.expando],!!e&&!u(e)},data:function(e,t,n){return c(e,t,n)},removeData:function(e,t){return p(e,t)},_data:function(e,t,n){return c(e,t,n,!0)},_removeData:function(e,t){return p(e,t,!0)}}),re.fn.extend({data:function(e,t){var n,i,r,o=this[0],a=o&&o.attributes;if(void 0===e){if(this.length&&(r=re.data(o),1===o.nodeType&&!re._data(o,"parsedAttrs"))){for(n=a.length;n--;)a[n]&&(i=a[n].name,0===i.indexOf("data-")&&(i=re.camelCase(i.slice(5)),l(o,i,r[i])));re._data(o,"parsedAttrs",!0)}return r}return"object"==typeof e?this.each(function(){re.data(this,e)}):arguments.length>1?this.each(function(){re.data(this,e,t)}):o?l(o,e,re.data(o,e)):void 0},removeData:function(e){return this.each(function(){re.removeData(this,e)})}}),re.extend({queue:function(e,t,n){var i;return e?(t=(t||"fx")+"queue",i=re._data(e,t),n&&(!i||re.isArray(n)?i=re._data(e,t,re.makeArray(n)):i.push(n)),i||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=re.queue(e,t),i=n.length,r=n.shift(),o=re._queueHooks(e,t),a=function(){re.dequeue(e,t)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===t&&n.unshift("inprogress"),delete o.stop,r.call(e,a,o)),!i&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return re._data(e,n)||re._data(e,n,{empty:re.Callbacks("once memory").add(function(){re._removeData(e,t+"queue"),re._removeData(e,n)})})}}),re.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?re.queue(this[0],e):void 0===t?this:this.each(function(){var n=re.queue(this,e,t);re._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&re.dequeue(this,e)})},dequeue:function(e){return this.each(function(){re.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,r=re.Deferred(),o=this,a=this.length,s=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)n=re._data(o[a],e+"queueHooks"),n&&n.empty&&(i++,n.empty.add(s));return s(),r.promise(t)}});var Ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Te=["Top","Right","Bottom","Left"],Pe=function(e,t){return e=t||e,"none"===re.css(e,"display")||!re.contains(e.ownerDocument,e)},De=re.access=function(e,t,n,i,r,o,a){var s=0,l=e.length,u=null==n;if("object"===re.type(n)){r=!0;for(s in n)re.access(e,t,s,n[s],!0,o,a)}else if(void 0!==i&&(r=!0,re.isFunction(i)||(a=!0),u&&(a?(t.call(e,i),t=null):(u=t,t=function(e,t,n){return u.call(re(e),n)})),t))for(;l>s;s++)t(e[s],n,a?i:i.call(e[s],s,t(e[s],n)));return r?e:u?t.call(e):l?t(e[0],n):o},Ae=/^(?:checkbox|radio)$/i;!function(){var e=he.createElement("input"),t=he.createElement("div"),n=he.createDocumentFragment();if(t.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",ne.leadingWhitespace=3===t.firstChild.nodeType,ne.tbody=!t.getElementsByTagName("tbody").length,ne.htmlSerialize=!!t.getElementsByTagName("link").length,ne.html5Clone="<:nav></:nav>"!==he.createElement("nav").cloneNode(!0).outerHTML,e.type="checkbox",e.checked=!0,n.appendChild(e),ne.appendChecked=e.checked,t.innerHTML="<textarea>x</textarea>",ne.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue,n.appendChild(t),t.innerHTML="<input type='radio' checked='checked' name='t'/>",ne.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,ne.noCloneEvent=!0,t.attachEvent&&(t.attachEvent("onclick",function(){ne.noCloneEvent=!1}),t.cloneNode(!0).click()),null==ne.deleteExpando){ne.deleteExpando=!0;try{delete t.test}catch(i){ne.deleteExpando=!1}}}(),function(){var t,n,i=he.createElement("div");for(t in{submit:!0,change:!0,focusin:!0})n="on"+t,(ne[t+"Bubbles"]=n in e)||(i.setAttribute(n,"t"),ne[t+"Bubbles"]=i.attributes[n].expando===!1);i=null}();var Me=/^(?:input|select|textarea)$/i,Oe=/^key/,Re=/^(?:mouse|pointer|contextmenu)|click/,Ie=/^(?:focusinfocus|focusoutblur)$/,Ne=/^([^.]*)(?:\.(.+)|)$/;re.event={global:{},add:function(e,t,n,i,r){var o,a,s,l,u,c,p,d,f,h,m,g=re._data(e);if(g){for(n.handler&&(l=n,n=l.handler,r=l.selector),n.guid||(n.guid=re.guid++),(a=g.events)||(a=g.events={}),(c=g.handle)||(c=g.handle=function(e){return typeof re===Se||e&&re.event.triggered===e.type?void 0:re.event.dispatch.apply(c.elem,arguments)},c.elem=e),t=(t||"").match($e)||[""],s=t.length;s--;)o=Ne.exec(t[s])||[],f=m=o[1],h=(o[2]||"").split(".").sort(),f&&(u=re.event.special[f]||{},f=(r?u.delegateType:u.bindType)||f,u=re.event.special[f]||{},p=re.extend({type:f,origType:m,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&re.expr.match.needsContext.test(r),namespace:h.join(".")},l),(d=a[f])||(d=a[f]=[],d.delegateCount=0,u.setup&&u.setup.call(e,i,h,c)!==!1||(e.addEventListener?e.addEventListener(f,c,!1):e.attachEvent&&e.attachEvent("on"+f,c))),u.add&&(u.add.call(e,p),p.handler.guid||(p.handler.guid=n.guid)),r?d.splice(d.delegateCount++,0,p):d.push(p),re.event.global[f]=!0);e=null}},remove:function(e,t,n,i,r){var o,a,s,l,u,c,p,d,f,h,m,g=re.hasData(e)&&re._data(e);if(g&&(c=g.events)){for(t=(t||"").match($e)||[""],u=t.length;u--;)if(s=Ne.exec(t[u])||[],f=m=s[1],h=(s[2]||"").split(".").sort(),f){for(p=re.event.special[f]||{},f=(i?p.delegateType:p.bindType)||f,d=c[f]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=o=d.length;o--;)a=d[o],!r&&m!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||i&&i!==a.selector&&("**"!==i||!a.selector)||(d.splice(o,1),a.selector&&d.delegateCount--,p.remove&&p.remove.call(e,a));l&&!d.length&&(p.teardown&&p.teardown.call(e,h,g.handle)!==!1||re.removeEvent(e,f,g.handle),delete c[f])}else for(f in c)re.event.remove(e,f+t[u],n,i,!0);re.isEmptyObject(c)&&(delete g.handle,re._removeData(e,"events"))}},trigger:function(t,n,i,r){var o,a,s,l,u,c,p,d=[i||he],f=te.call(t,"type")?t.type:t,h=te.call(t,"namespace")?t.namespace.split("."):[];if(s=c=i=i||he,3!==i.nodeType&&8!==i.nodeType&&!Ie.test(f+re.event.triggered)&&(f.indexOf(".")>=0&&(h=f.split("."),f=h.shift(),h.sort()),a=f.indexOf(":")<0&&"on"+f,t=t[re.expando]?t:new re.Event(f,"object"==typeof t&&t),t.isTrigger=r?2:3,t.namespace=h.join("."),t.namespace_re=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),n=null==n?[t]:re.makeArray(n,[t]),u=re.event.special[f]||{},r||!u.trigger||u.trigger.apply(i,n)!==!1)){if(!r&&!u.noBubble&&!re.isWindow(i)){for(l=u.delegateType||f,Ie.test(l+f)||(s=s.parentNode);s;s=s.parentNode)d.push(s),c=s;c===(i.ownerDocument||he)&&d.push(c.defaultView||c.parentWindow||e)}for(p=0;(s=d[p++])&&!t.isPropagationStopped();)t.type=p>1?l:u.bindType||f,o=(re._data(s,"events")||{})[t.type]&&re._data(s,"handle"),o&&o.apply(s,n),o=a&&s[a],o&&o.apply&&re.acceptData(s)&&(t.result=o.apply(s,n),t.result===!1&&t.preventDefault());if(t.type=f,!r&&!t.isDefaultPrevented()&&(!u._default||u._default.apply(d.pop(),n)===!1)&&re.acceptData(i)&&a&&i[f]&&!re.isWindow(i)){c=i[a],c&&(i[a]=null),re.event.triggered=f;try{i[f]()}catch(m){}re.event.triggered=void 0,c&&(i[a]=c)}return t.result}},dispatch:function(e){e=re.event.fix(e);var t,n,i,r,o,a=[],s=Y.call(arguments),l=(re._data(this,"events")||{})[e.type]||[],u=re.event.special[e.type]||{};if(s[0]=e,e.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,e)!==!1){for(a=re.event.handlers.call(this,e,l),t=0;(r=a[t++])&&!e.isPropagationStopped();)for(e.currentTarget=r.elem,o=0;(i=r.handlers[o++])&&!e.isImmediatePropagationStopped();)(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,n=((re.event.special[i.origType]||{}).handle||i.handler).apply(r.elem,s),void 0!==n&&(e.result=n)===!1&&(e.preventDefault(),e.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,i,r,o,a=[],s=t.delegateCount,l=e.target;if(s&&l.nodeType&&(!e.button||"click"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(r=[],o=0;s>o;o++)i=t[o],n=i.selector+" ",void 0===r[n]&&(r[n]=i.needsContext?re(n,this).index(l)>=0:re.find(n,this,null,[l]).length),r[n]&&r.push(i);r.length&&a.push({elem:l,handlers:r})}return s<t.length&&a.push({elem:this,handlers:t.slice(s)}),a},fix:function(e){if(e[re.expando])return e;var t,n,i,r=e.type,o=e,a=this.fixHooks[r];for(a||(this.fixHooks[r]=a=Re.test(r)?this.mouseHooks:Oe.test(r)?this.keyHooks:{}),i=a.props?this.props.concat(a.props):this.props,e=new re.Event(o),t=i.length;t--;)n=i[t],e[n]=o[n];return e.target||(e.target=o.srcElement||he),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,a.filter?a.filter(e,o):e},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,i,r,o=t.button,a=t.fromElement;return null==e.pageX&&null!=t.clientX&&(i=e.target.ownerDocument||he,r=i.documentElement,n=i.body,e.pageX=t.clientX+(r&&r.scrollLeft||n&&n.scrollLeft||0)-(r&&r.clientLeft||n&&n.clientLeft||0),e.pageY=t.clientY+(r&&r.scrollTop||n&&n.scrollTop||0)-(r&&r.clientTop||n&&n.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?t.toElement:a),e.which||void 0===o||(e.which=1&o?1:2&o?3:4&o?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==h()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){return this===h()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return re.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(e){return re.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,i){var r=re.extend(new re.Event,n,{type:e,isSimulated:!0,originalEvent:{}});i?re.event.trigger(r,null,t):re.event.dispatch.call(t,r),r.isDefaultPrevented()&&n.preventDefault()}},re.removeEvent=he.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var i="on"+t;e.detachEvent&&(typeof e[i]===Se&&(e[i]=null),e.detachEvent(i,n))},re.Event=function(e,t){return this instanceof re.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?d:f):this.type=e,t&&re.extend(this,t),this.timeStamp=e&&e.timeStamp||re.now(),void(this[re.expando]=!0)):new re.Event(e,t)},re.Event.prototype={isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=d,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=d,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=d,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},re.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){re.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=this,r=e.relatedTarget,o=e.handleObj;return(!r||r!==i&&!re.contains(i,r))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),ne.submitBubbles||(re.event.special.submit={setup:function(){return re.nodeName(this,"form")?!1:void re.event.add(this,"click._submit keypress._submit",function(e){var t=e.target,n=re.nodeName(t,"input")||re.nodeName(t,"button")?t.form:void 0;n&&!re._data(n,"submitBubbles")&&(re.event.add(n,"submit._submit",function(e){e._submit_bubble=!0}),re._data(n,"submitBubbles",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&re.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){return re.nodeName(this,"form")?!1:void re.event.remove(this,"._submit")}}),ne.changeBubbles||(re.event.special.change={setup:function(){return Me.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(re.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._just_changed=!0)}),re.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),re.event.simulate("change",this,e,!0)})),!1):void re.event.add(this,"beforeactivate._change",function(e){var t=e.target;Me.test(t.nodeName)&&!re._data(t,"changeBubbles")&&(re.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||re.event.simulate("change",this.parentNode,e,!0)}),re._data(t,"changeBubbles",!0))})},handle:function(e){var t=e.target;return this!==t||e.isSimulated||e.isTrigger||"radio"!==t.type&&"checkbox"!==t.type?e.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return re.event.remove(this,"._change"),!Me.test(this.nodeName)}}),ne.focusinBubbles||re.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){re.event.simulate(t,e.target,re.event.fix(e),!0)};re.event.special[t]={setup:function(){var i=this.ownerDocument||this,r=re._data(i,t);r||i.addEventListener(e,n,!0),re._data(i,t,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=re._data(i,t)-1;r?re._data(i,t,r):(i.removeEventListener(e,n,!0),re._removeData(i,t))}}}),re.fn.extend({on:function(e,t,n,i,r){var o,a;if("object"==typeof e){"string"!=typeof t&&(n=n||t,t=void 0);for(o in e)this.on(o,t,n,e[o],r);return this}if(null==n&&null==i?(i=t,n=t=void 0):null==i&&("string"==typeof t?(i=n,n=void 0):(i=n,n=t,t=void 0)),i===!1)i=f;else if(!i)return this;return 1===r&&(a=i,i=function(e){return re().off(e),a.apply(this,arguments)},i.guid=a.guid||(a.guid=re.guid++)),this.each(function(){re.event.add(this,e,i,n,t)})},one:function(e,t,n,i){return this.on(e,t,n,i,1)},off:function(e,t,n){var i,r;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,re(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return(t===!1||"function"==typeof t)&&(n=t,t=void 0),n===!1&&(n=f),this.each(function(){re.event.remove(this,e,n,t)})},trigger:function(e,t){return this.each(function(){re.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?re.event.trigger(e,t,n,!0):void 0}});var Le="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",Ue=/ jQuery\d+="(?:null|\d+)"/g,Fe=new RegExp("<(?:"+Le+")[\\s/>]","i"),je=/^\s+/,_e=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,qe=/<([\w:]+)/,He=/<tbody/i,ze=/<|&#?\w+;/,Ve=/<(?:script|style|link)/i,Be=/checked\s*(?:[^=]|=\s*.checked.)/i,We=/^$|\/(?:java|ecma)script/i,Ge=/^true\/(.*)/,Xe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Ye={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:ne.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},Ke=m(he),Je=Ke.appendChild(he.createElement("div"));Ye.optgroup=Ye.option,Ye.tbody=Ye.tfoot=Ye.colgroup=Ye.caption=Ye.thead,Ye.th=Ye.td,re.extend({clone:function(e,t,n){var i,r,o,a,s,l=re.contains(e.ownerDocument,e);if(ne.html5Clone||re.isXMLDoc(e)||!Fe.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(Je.innerHTML=e.outerHTML,Je.removeChild(o=Je.firstChild)),!(ne.noCloneEvent&&ne.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||re.isXMLDoc(e)))for(i=g(o),s=g(e),a=0;null!=(r=s[a]);++a)i[a]&&S(r,i[a]);if(t)if(n)for(s=s||g(e),i=i||g(o),a=0;null!=(r=s[a]);a++)x(r,i[a]);else x(e,o);return i=g(o,"script"),i.length>0&&w(i,!l&&g(e,"script")),i=s=r=null,o},buildFragment:function(e,t,n,i){for(var r,o,a,s,l,u,c,p=e.length,d=m(t),f=[],h=0;p>h;h++)if(o=e[h],o||0===o)if("object"===re.type(o))re.merge(f,o.nodeType?[o]:o);else if(ze.test(o)){for(s=s||d.appendChild(t.createElement("div")),l=(qe.exec(o)||["",""])[1].toLowerCase(),c=Ye[l]||Ye._default,s.innerHTML=c[1]+o.replace(_e,"<$1></$2>")+c[2],r=c[0];r--;)s=s.lastChild;if(!ne.leadingWhitespace&&je.test(o)&&f.push(t.createTextNode(je.exec(o)[0])),!ne.tbody)for(o="table"!==l||He.test(o)?"<table>"!==c[1]||He.test(o)?0:s:s.firstChild,r=o&&o.childNodes.length;r--;)re.nodeName(u=o.childNodes[r],"tbody")&&!u.childNodes.length&&o.removeChild(u);for(re.merge(f,s.childNodes),s.textContent="";s.firstChild;)s.removeChild(s.firstChild);s=d.lastChild}else f.push(t.createTextNode(o));for(s&&d.removeChild(s),ne.appendChecked||re.grep(g(f,"input"),v),h=0;o=f[h++];)if((!i||-1===re.inArray(o,i))&&(a=re.contains(o.ownerDocument,o),s=g(d.appendChild(o),"script"),a&&w(s),n))for(r=0;o=s[r++];)We.test(o.type||"")&&n.push(o);return s=null,d},cleanData:function(e,t){for(var n,i,r,o,a=0,s=re.expando,l=re.cache,u=ne.deleteExpando,c=re.event.special;null!=(n=e[a]);a++)if((t||re.acceptData(n))&&(r=n[s],o=r&&l[r])){if(o.events)for(i in o.events)c[i]?re.event.remove(n,i):re.removeEvent(n,i,o.handle);l[r]&&(delete l[r],u?delete n[s]:typeof n.removeAttribute!==Se?n.removeAttribute(s):n[s]=null,X.push(r))}}}),re.fn.extend({text:function(e){return De(this,function(e){return void 0===e?re.text(this):this.empty().append((this[0]&&this[0].ownerDocument||he).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=b(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=b(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var n,i=e?re.filter(e,this):this,r=0;null!=(n=i[r]);r++)t||1!==n.nodeType||re.cleanData(g(n)),n.parentNode&&(t&&re.contains(n.ownerDocument,n)&&w(g(n,"script")),n.parentNode.removeChild(n));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++){for(1===e.nodeType&&re.cleanData(g(e,!1));e.firstChild;)e.removeChild(e.firstChild);e.options&&re.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return re.clone(this,e,t)})},html:function(e){return De(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e)return 1===t.nodeType?t.innerHTML.replace(Ue,""):void 0;if(!("string"!=typeof e||Ve.test(e)||!ne.htmlSerialize&&Fe.test(e)||!ne.leadingWhitespace&&je.test(e)||Ye[(qe.exec(e)||["",""])[1].toLowerCase()])){e=e.replace(_e,"<$1></$2>");try{for(;i>n;n++)t=this[n]||{},1===t.nodeType&&(re.cleanData(g(t,!1)),t.innerHTML=e);t=0}catch(r){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=arguments[0];return this.domManip(arguments,function(t){e=this.parentNode,re.cleanData(g(this)),e&&e.replaceChild(t,this)}),e&&(e.length||e.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t){e=K.apply([],e);var n,i,r,o,a,s,l=0,u=this.length,c=this,p=u-1,d=e[0],f=re.isFunction(d);if(f||u>1&&"string"==typeof d&&!ne.checkClone&&Be.test(d))return this.each(function(n){var i=c.eq(n);f&&(e[0]=d.call(this,n,i.html())),i.domManip(e,t)});if(u&&(s=re.buildFragment(e,this[0].ownerDocument,!1,this),n=s.firstChild,1===s.childNodes.length&&(s=n),n)){for(o=re.map(g(s,"script"),$),r=o.length;u>l;l++)i=s,l!==p&&(i=re.clone(i,!0,!0),r&&re.merge(o,g(i,"script"))),t.call(this[l],i,l);if(r)for(a=o[o.length-1].ownerDocument,re.map(o,y),l=0;r>l;l++)i=o[l],We.test(i.type||"")&&!re._data(i,"globalEval")&&re.contains(a,i)&&(i.src?re._evalUrl&&re._evalUrl(i.src):re.globalEval((i.text||i.textContent||i.innerHTML||"").replace(Xe,"")));s=n=null}return this}}),re.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){re.fn[e]=function(e){for(var n,i=0,r=[],o=re(e),a=o.length-1;a>=i;i++)n=i===a?this:this.clone(!0),re(o[i])[t](n),J.apply(r,n.get());return this.pushStack(r)}});var Qe,Ze={};!function(){var e;ne.shrinkWrapBlocks=function(){if(null!=e)return e;e=!1;var t,n,i;return n=he.getElementsByTagName("body")[0],n&&n.style?(t=he.createElement("div"),i=he.createElement("div"),i.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",n.appendChild(i).appendChild(t),typeof t.style.zoom!==Se&&(t.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",t.appendChild(he.createElement("div")).style.width="5px",e=3!==t.offsetWidth),n.removeChild(i),e):void 0}}();var et,tt,nt=/^margin/,it=new RegExp("^("+Ee+")(?!px)[a-z%]+$","i"),rt=/^(top|right|bottom|left)$/;e.getComputedStyle?(et=function(e){return e.ownerDocument.defaultView.getComputedStyle(e,null)},tt=function(e,t,n){var i,r,o,a,s=e.style;return n=n||et(e),a=n?n.getPropertyValue(t)||n[t]:void 0,n&&(""!==a||re.contains(e.ownerDocument,e)||(a=re.style(e,t)),it.test(a)&&nt.test(t)&&(i=s.width,r=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=i,s.minWidth=r,
s.maxWidth=o)),void 0===a?a:a+""}):he.documentElement.currentStyle&&(et=function(e){return e.currentStyle},tt=function(e,t,n){var i,r,o,a,s=e.style;return n=n||et(e),a=n?n[t]:void 0,null==a&&s&&s[t]&&(a=s[t]),it.test(a)&&!rt.test(t)&&(i=s.left,r=e.runtimeStyle,o=r&&r.left,o&&(r.left=e.currentStyle.left),s.left="fontSize"===t?"1em":a,a=s.pixelLeft+"px",s.left=i,o&&(r.left=o)),void 0===a?a:a+""||"auto"}),!function(){function t(){var t,n,i,r;n=he.getElementsByTagName("body")[0],n&&n.style&&(t=he.createElement("div"),i=he.createElement("div"),i.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",n.appendChild(i).appendChild(t),t.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",o=a=!1,l=!0,e.getComputedStyle&&(o="1%"!==(e.getComputedStyle(t,null)||{}).top,a="4px"===(e.getComputedStyle(t,null)||{width:"4px"}).width,r=t.appendChild(he.createElement("div")),r.style.cssText=t.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",r.style.marginRight=r.style.width="0",t.style.width="1px",l=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),t.innerHTML="<table><tr><td></td><td>t</td></tr></table>",r=t.getElementsByTagName("td"),r[0].style.cssText="margin:0;border:0;padding:0;display:none",s=0===r[0].offsetHeight,s&&(r[0].style.display="",r[1].style.display="none",s=0===r[0].offsetHeight),n.removeChild(i))}var n,i,r,o,a,s,l;n=he.createElement("div"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",r=n.getElementsByTagName("a")[0],(i=r&&r.style)&&(i.cssText="float:left;opacity:.5",ne.opacity="0.5"===i.opacity,ne.cssFloat=!!i.cssFloat,n.style.backgroundClip="content-box",n.cloneNode(!0).style.backgroundClip="",ne.clearCloneStyle="content-box"===n.style.backgroundClip,ne.boxSizing=""===i.boxSizing||""===i.MozBoxSizing||""===i.WebkitBoxSizing,re.extend(ne,{reliableHiddenOffsets:function(){return null==s&&t(),s},boxSizingReliable:function(){return null==a&&t(),a},pixelPosition:function(){return null==o&&t(),o},reliableMarginRight:function(){return null==l&&t(),l}}))}(),re.swap=function(e,t,n,i){var r,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];r=n.apply(e,i||[]);for(o in t)e.style[o]=a[o];return r};var ot=/alpha\([^)]*\)/i,at=/opacity\s*=\s*([^)]*)/,st=/^(none|table(?!-c[ea]).+)/,lt=new RegExp("^("+Ee+")(.*)$","i"),ut=new RegExp("^([+-])=("+Ee+")","i"),ct={position:"absolute",visibility:"hidden",display:"block"},pt={letterSpacing:"0",fontWeight:"400"},dt=["Webkit","O","Moz","ms"];re.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=tt(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":ne.cssFloat?"cssFloat":"styleFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,o,a,s=re.camelCase(t),l=e.style;if(t=re.cssProps[s]||(re.cssProps[s]=T(l,s)),a=re.cssHooks[t]||re.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(r=a.get(e,!1,i))?r:l[t];if(o=typeof n,"string"===o&&(r=ut.exec(n))&&(n=(r[1]+1)*r[2]+parseFloat(re.css(e,t)),o="number"),null!=n&&n===n&&("number"!==o||re.cssNumber[s]||(n+="px"),ne.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),!(a&&"set"in a&&void 0===(n=a.set(e,n,i)))))try{l[t]=n}catch(u){}}},css:function(e,t,n,i){var r,o,a,s=re.camelCase(t);return t=re.cssProps[s]||(re.cssProps[s]=T(e.style,s)),a=re.cssHooks[t]||re.cssHooks[s],a&&"get"in a&&(o=a.get(e,!0,n)),void 0===o&&(o=tt(e,t,i)),"normal"===o&&t in pt&&(o=pt[t]),""===n||n?(r=parseFloat(o),n===!0||re.isNumeric(r)?r||0:o):o}}),re.each(["height","width"],function(e,t){re.cssHooks[t]={get:function(e,n,i){return n?st.test(re.css(e,"display"))&&0===e.offsetWidth?re.swap(e,ct,function(){return M(e,t,i)}):M(e,t,i):void 0},set:function(e,n,i){var r=i&&et(e);return D(e,n,i?A(e,t,i,ne.boxSizing&&"border-box"===re.css(e,"boxSizing",!1,r),r):0)}}}),ne.opacity||(re.cssHooks.opacity={get:function(e,t){return at.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,i=e.currentStyle,r=re.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=i&&i.filter||n.filter||"";n.zoom=1,(t>=1||""===t)&&""===re.trim(o.replace(ot,""))&&n.removeAttribute&&(n.removeAttribute("filter"),""===t||i&&!i.filter)||(n.filter=ot.test(o)?o.replace(ot,r):o+" "+r)}}),re.cssHooks.marginRight=E(ne.reliableMarginRight,function(e,t){return t?re.swap(e,{display:"inline-block"},tt,[e,"marginRight"]):void 0}),re.each({margin:"",padding:"",border:"Width"},function(e,t){re.cssHooks[e+t]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];4>i;i++)r[e+Te[i]+t]=o[i]||o[i-2]||o[0];return r}},nt.test(e)||(re.cssHooks[e+t].set=D)}),re.fn.extend({css:function(e,t){return De(this,function(e,t,n){var i,r,o={},a=0;if(re.isArray(t)){for(i=et(e),r=t.length;r>a;a++)o[t[a]]=re.css(e,t[a],!1,i);return o}return void 0!==n?re.style(e,t,n):re.css(e,t)},e,t,arguments.length>1)},show:function(){return P(this,!0)},hide:function(){return P(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Pe(this)?re(this).show():re(this).hide()})}}),re.Tween=O,O.prototype={constructor:O,init:function(e,t,n,i,r,o){this.elem=e,this.prop=n,this.easing=r||"swing",this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=o||(re.cssNumber[n]?"":"px")},cur:function(){var e=O.propHooks[this.prop];return e&&e.get?e.get(this):O.propHooks._default.get(this)},run:function(e){var t,n=O.propHooks[this.prop];return this.pos=t=this.options.duration?re.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):O.propHooks._default.set(this),this}},O.prototype.init.prototype=O.prototype,O.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=re.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){re.fx.step[e.prop]?re.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[re.cssProps[e.prop]]||re.cssHooks[e.prop])?re.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},O.propHooks.scrollTop=O.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},re.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},re.fx=O.prototype.init,re.fx.step={};var ft,ht,mt=/^(?:toggle|show|hide)$/,gt=new RegExp("^(?:([+-])=|)("+Ee+")([a-z%]*)$","i"),vt=/queueHooks$/,bt=[L],$t={"*":[function(e,t){var n=this.createTween(e,t),i=n.cur(),r=gt.exec(t),o=r&&r[3]||(re.cssNumber[e]?"":"px"),a=(re.cssNumber[e]||"px"!==o&&+i)&&gt.exec(re.css(n.elem,e)),s=1,l=20;if(a&&a[3]!==o){o=o||a[3],r=r||[],a=+i||1;do s=s||".5",a/=s,re.style(n.elem,e,a+o);while(s!==(s=n.cur()/i)&&1!==s&&--l)}return r&&(a=n.start=+a||+i||0,n.unit=o,n.end=r[1]?a+(r[1]+1)*r[2]:+r[2]),n}]};re.Animation=re.extend(F,{tweener:function(e,t){re.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var n,i=0,r=e.length;r>i;i++)n=e[i],$t[n]=$t[n]||[],$t[n].unshift(t)},prefilter:function(e,t){t?bt.unshift(e):bt.push(e)}}),re.speed=function(e,t,n){var i=e&&"object"==typeof e?re.extend({},e):{complete:n||!n&&t||re.isFunction(e)&&e,duration:e,easing:n&&t||t&&!re.isFunction(t)&&t};return i.duration=re.fx.off?0:"number"==typeof i.duration?i.duration:i.duration in re.fx.speeds?re.fx.speeds[i.duration]:re.fx.speeds._default,(null==i.queue||i.queue===!0)&&(i.queue="fx"),i.old=i.complete,i.complete=function(){re.isFunction(i.old)&&i.old.call(this),i.queue&&re.dequeue(this,i.queue)},i},re.fn.extend({fadeTo:function(e,t,n,i){return this.filter(Pe).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var r=re.isEmptyObject(e),o=re.speed(t,n,i),a=function(){var t=F(this,re.extend({},e),o);(r||re._data(this,"finish"))&&t.stop(!0)};return a.finish=a,r||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,r=null!=e&&e+"queueHooks",o=re.timers,a=re._data(this);if(r)a[r]&&a[r].stop&&i(a[r]);else for(r in a)a[r]&&a[r].stop&&vt.test(r)&&i(a[r]);for(r=o.length;r--;)o[r].elem!==this||null!=e&&o[r].queue!==e||(o[r].anim.stop(n),t=!1,o.splice(r,1));(t||!n)&&re.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=re._data(this),i=n[e+"queue"],r=n[e+"queueHooks"],o=re.timers,a=i?i.length:0;for(n.finish=!0,re.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete n.finish})}}),re.each(["toggle","show","hide"],function(e,t){var n=re.fn[t];re.fn[t]=function(e,i,r){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(I(t,!0),e,i,r)}}),re.each({slideDown:I("show"),slideUp:I("hide"),slideToggle:I("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){re.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}}),re.timers=[],re.fx.tick=function(){var e,t=re.timers,n=0;for(ft=re.now();n<t.length;n++)e=t[n],e()||t[n]!==e||t.splice(n--,1);t.length||re.fx.stop(),ft=void 0},re.fx.timer=function(e){re.timers.push(e),e()?re.fx.start():re.timers.pop()},re.fx.interval=13,re.fx.start=function(){ht||(ht=setInterval(re.fx.tick,re.fx.interval))},re.fx.stop=function(){clearInterval(ht),ht=null},re.fx.speeds={slow:600,fast:200,_default:400},re.fn.delay=function(e,t){return e=re.fx?re.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var i=setTimeout(t,e);n.stop=function(){clearTimeout(i)}})},function(){var e,t,n,i,r;t=he.createElement("div"),t.setAttribute("className","t"),t.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",i=t.getElementsByTagName("a")[0],n=he.createElement("select"),r=n.appendChild(he.createElement("option")),e=t.getElementsByTagName("input")[0],i.style.cssText="top:1px",ne.getSetAttribute="t"!==t.className,ne.style=/top/.test(i.getAttribute("style")),ne.hrefNormalized="/a"===i.getAttribute("href"),ne.checkOn=!!e.value,ne.optSelected=r.selected,ne.enctype=!!he.createElement("form").enctype,n.disabled=!0,ne.optDisabled=!r.disabled,e=he.createElement("input"),e.setAttribute("value",""),ne.input=""===e.getAttribute("value"),e.value="t",e.setAttribute("type","radio"),ne.radioValue="t"===e.value}();var yt=/\r/g;re.fn.extend({val:function(e){var t,n,i,r=this[0];return arguments.length?(i=re.isFunction(e),this.each(function(n){var r;1===this.nodeType&&(r=i?e.call(this,n,re(this).val()):e,null==r?r="":"number"==typeof r?r+="":re.isArray(r)&&(r=re.map(r,function(e){return null==e?"":e+""})),t=re.valHooks[this.type]||re.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))})):r?(t=re.valHooks[r.type]||re.valHooks[r.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(yt,""):null==n?"":n)):void 0}}),re.extend({valHooks:{option:{get:function(e){var t=re.find.attr(e,"value");return null!=t?t:re.trim(re.text(e))}},select:{get:function(e){for(var t,n,i=e.options,r=e.selectedIndex,o="select-one"===e.type||0>r,a=o?null:[],s=o?r+1:i.length,l=0>r?s:o?r:0;s>l;l++)if(n=i[l],!(!n.selected&&l!==r||(ne.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&re.nodeName(n.parentNode,"optgroup"))){if(t=re(n).val(),o)return t;a.push(t)}return a},set:function(e,t){for(var n,i,r=e.options,o=re.makeArray(t),a=r.length;a--;)if(i=r[a],re.inArray(re.valHooks.option.get(i),o)>=0)try{i.selected=n=!0}catch(s){i.scrollHeight}else i.selected=!1;return n||(e.selectedIndex=-1),r}}}}),re.each(["radio","checkbox"],function(){re.valHooks[this]={set:function(e,t){return re.isArray(t)?e.checked=re.inArray(re(e).val(),t)>=0:void 0}},ne.checkOn||(re.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var wt,xt,St=re.expr.attrHandle,Ct=/^(?:checked|selected)$/i,kt=ne.getSetAttribute,Et=ne.input;re.fn.extend({attr:function(e,t){return De(this,re.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){re.removeAttr(this,e)})}}),re.extend({attr:function(e,t,n){var i,r,o=e.nodeType;return e&&3!==o&&8!==o&&2!==o?typeof e.getAttribute===Se?re.prop(e,t,n):(1===o&&re.isXMLDoc(e)||(t=t.toLowerCase(),i=re.attrHooks[t]||(re.expr.match.bool.test(t)?xt:wt)),void 0===n?i&&"get"in i&&null!==(r=i.get(e,t))?r:(r=re.find.attr(e,t),null==r?void 0:r):null!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):void re.removeAttr(e,t)):void 0},removeAttr:function(e,t){var n,i,r=0,o=t&&t.match($e);if(o&&1===e.nodeType)for(;n=o[r++];)i=re.propFix[n]||n,re.expr.match.bool.test(n)?Et&&kt||!Ct.test(n)?e[i]=!1:e[re.camelCase("default-"+n)]=e[i]=!1:re.attr(e,n,""),e.removeAttribute(kt?n:i)},attrHooks:{type:{set:function(e,t){if(!ne.radioValue&&"radio"===t&&re.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}}}),xt={set:function(e,t,n){return t===!1?re.removeAttr(e,n):Et&&kt||!Ct.test(n)?e.setAttribute(!kt&&re.propFix[n]||n,n):e[re.camelCase("default-"+n)]=e[n]=!0,n}},re.each(re.expr.match.bool.source.match(/\w+/g),function(e,t){var n=St[t]||re.find.attr;St[t]=Et&&kt||!Ct.test(t)?function(e,t,i){var r,o;return i||(o=St[t],St[t]=r,r=null!=n(e,t,i)?t.toLowerCase():null,St[t]=o),r}:function(e,t,n){return n?void 0:e[re.camelCase("default-"+t)]?t.toLowerCase():null}}),Et&&kt||(re.attrHooks.value={set:function(e,t,n){return re.nodeName(e,"input")?void(e.defaultValue=t):wt&&wt.set(e,t,n)}}),kt||(wt={set:function(e,t,n){var i=e.getAttributeNode(n);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(n)),i.value=t+="","value"===n||t===e.getAttribute(n)?t:void 0}},St.id=St.name=St.coords=function(e,t,n){var i;return n?void 0:(i=e.getAttributeNode(t))&&""!==i.value?i.value:null},re.valHooks.button={get:function(e,t){var n=e.getAttributeNode(t);return n&&n.specified?n.value:void 0},set:wt.set},re.attrHooks.contenteditable={set:function(e,t,n){wt.set(e,""===t?!1:t,n)}},re.each(["width","height"],function(e,t){re.attrHooks[t]={set:function(e,n){return""===n?(e.setAttribute(t,"auto"),n):void 0}}})),ne.style||(re.attrHooks.style={get:function(e){return e.style.cssText||void 0},set:function(e,t){return e.style.cssText=t+""}});var Tt=/^(?:input|select|textarea|button|object)$/i,Pt=/^(?:a|area)$/i;re.fn.extend({prop:function(e,t){return De(this,re.prop,e,t,arguments.length>1)},removeProp:function(e){return e=re.propFix[e]||e,this.each(function(){try{this[e]=void 0,delete this[e]}catch(t){}})}}),re.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(e,t,n){var i,r,o,a=e.nodeType;return e&&3!==a&&8!==a&&2!==a?(o=1!==a||!re.isXMLDoc(e),o&&(t=re.propFix[t]||t,r=re.propHooks[t]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:e[t]=n:r&&"get"in r&&null!==(i=r.get(e,t))?i:e[t]):void 0},propHooks:{tabIndex:{get:function(e){var t=re.find.attr(e,"tabindex");return t?parseInt(t,10):Tt.test(e.nodeName)||Pt.test(e.nodeName)&&e.href?0:-1}}}}),ne.hrefNormalized||re.each(["href","src"],function(e,t){re.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),ne.optSelected||(re.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}}),re.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){re.propFix[this.toLowerCase()]=this}),ne.enctype||(re.propFix.enctype="encoding");var Dt=/[\t\r\n\f]/g;re.fn.extend({addClass:function(e){var t,n,i,r,o,a,s=0,l=this.length,u="string"==typeof e&&e;if(re.isFunction(e))return this.each(function(t){re(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match($e)||[];l>s;s++)if(n=this[s],i=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(Dt," "):" ")){for(o=0;r=t[o++];)i.indexOf(" "+r+" ")<0&&(i+=r+" ");a=re.trim(i),n.className!==a&&(n.className=a)}return this},removeClass:function(e){var t,n,i,r,o,a,s=0,l=this.length,u=0===arguments.length||"string"==typeof e&&e;if(re.isFunction(e))return this.each(function(t){re(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match($e)||[];l>s;s++)if(n=this[s],i=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(Dt," "):"")){for(o=0;r=t[o++];)for(;i.indexOf(" "+r+" ")>=0;)i=i.replace(" "+r+" "," ");a=e?re.trim(i):"",n.className!==a&&(n.className=a)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):this.each(re.isFunction(e)?function(n){re(this).toggleClass(e.call(this,n,this.className,t),t)}:function(){if("string"===n)for(var t,i=0,r=re(this),o=e.match($e)||[];t=o[i++];)r.hasClass(t)?r.removeClass(t):r.addClass(t);else(n===Se||"boolean"===n)&&(this.className&&re._data(this,"__className__",this.className),this.className=this.className||e===!1?"":re._data(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,i=this.length;i>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(Dt," ").indexOf(t)>=0)return!0;return!1}}),re.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){re.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),re.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var At=re.now(),Mt=/\?/,Ot=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;re.parseJSON=function(t){if(e.JSON&&e.JSON.parse)return e.JSON.parse(t+"");var n,i=null,r=re.trim(t+"");return r&&!re.trim(r.replace(Ot,function(e,t,r,o){return n&&t&&(i=0),0===i?e:(n=r||t,i+=!o-!r,"")}))?Function("return "+r)():re.error("Invalid JSON: "+t)},re.parseXML=function(t){var n,i;if(!t||"string"!=typeof t)return null;try{e.DOMParser?(i=new DOMParser,n=i.parseFromString(t,"text/xml")):(n=new ActiveXObject("Microsoft.XMLDOM"),n.async="false",n.loadXML(t))}catch(r){n=void 0}return n&&n.documentElement&&!n.getElementsByTagName("parsererror").length||re.error("Invalid XML: "+t),n};var Rt,It,Nt=/#.*$/,Lt=/([?&])_=[^&]*/,Ut=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Ft=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,jt=/^(?:GET|HEAD)$/,_t=/^\/\//,qt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Ht={},zt={},Vt="*/".concat("*");try{It=location.href}catch(Bt){It=he.createElement("a"),It.href="",It=It.href}Rt=qt.exec(It.toLowerCase())||[],re.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:It,type:"GET",isLocal:Ft.test(Rt[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Vt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":re.parseJSON,"text xml":re.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?q(q(e,re.ajaxSettings),t):q(re.ajaxSettings,e)},ajaxPrefilter:j(Ht),ajaxTransport:j(zt),ajax:function(e,t){function n(e,t,n,i){var r,c,v,b,y,x=t;2!==$&&($=2,s&&clearTimeout(s),u=void 0,a=i||"",w.readyState=e>0?4:0,r=e>=200&&300>e||304===e,n&&(b=H(p,w,n)),b=z(p,b,w,r),r?(p.ifModified&&(y=w.getResponseHeader("Last-Modified"),y&&(re.lastModified[o]=y),y=w.getResponseHeader("etag"),y&&(re.etag[o]=y)),204===e||"HEAD"===p.type?x="nocontent":304===e?x="notmodified":(x=b.state,c=b.data,v=b.error,r=!v)):(v=x,(e||!x)&&(x="error",0>e&&(e=0))),w.status=e,w.statusText=(t||x)+"",r?h.resolveWith(d,[c,x,w]):h.rejectWith(d,[w,x,v]),w.statusCode(g),g=void 0,l&&f.trigger(r?"ajaxSuccess":"ajaxError",[w,p,r?c:v]),m.fireWith(d,[w,x]),l&&(f.trigger("ajaxComplete",[w,p]),--re.active||re.event.trigger("ajaxStop")))}"object"==typeof e&&(t=e,e=void 0),t=t||{};var i,r,o,a,s,l,u,c,p=re.ajaxSetup({},t),d=p.context||p,f=p.context&&(d.nodeType||d.jquery)?re(d):re.event,h=re.Deferred(),m=re.Callbacks("once memory"),g=p.statusCode||{},v={},b={},$=0,y="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(2===$){if(!c)for(c={};t=Ut.exec(a);)c[t[1].toLowerCase()]=t[2];t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===$?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return $||(e=b[n]=b[n]||e,v[e]=t),this},overrideMimeType:function(e){return $||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>$)for(t in e)g[t]=[g[t],e[t]];else w.always(e[w.status]);return this},abort:function(e){var t=e||y;return u&&u.abort(t),n(0,t),this}};if(h.promise(w).complete=m.add,w.success=w.done,w.error=w.fail,p.url=((e||p.url||It)+"").replace(Nt,"").replace(_t,Rt[1]+"//"),p.type=t.method||t.type||p.method||p.type,p.dataTypes=re.trim(p.dataType||"*").toLowerCase().match($e)||[""],null==p.crossDomain&&(i=qt.exec(p.url.toLowerCase()),p.crossDomain=!(!i||i[1]===Rt[1]&&i[2]===Rt[2]&&(i[3]||("http:"===i[1]?"80":"443"))===(Rt[3]||("http:"===Rt[1]?"80":"443")))),p.data&&p.processData&&"string"!=typeof p.data&&(p.data=re.param(p.data,p.traditional)),_(Ht,p,t,w),2===$)return w;l=p.global,l&&0===re.active++&&re.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!jt.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(Mt.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(p.url=Lt.test(o)?o.replace(Lt,"$1_="+At++):o+(Mt.test(o)?"&":"?")+"_="+At++)),p.ifModified&&(re.lastModified[o]&&w.setRequestHeader("If-Modified-Since",re.lastModified[o]),re.etag[o]&&w.setRequestHeader("If-None-Match",re.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||t.contentType)&&w.setRequestHeader("Content-Type",p.contentType),w.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Vt+"; q=0.01":""):p.accepts["*"]);for(r in p.headers)w.setRequestHeader(r,p.headers[r]);if(p.beforeSend&&(p.beforeSend.call(d,w,p)===!1||2===$))return w.abort();y="abort";for(r in{success:1,error:1,complete:1})w[r](p[r]);if(u=_(zt,p,t,w)){w.readyState=1,l&&f.trigger("ajaxSend",[w,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){w.abort("timeout")},p.timeout));try{$=1,u.send(v,n)}catch(x){if(!(2>$))throw x;n(-1,x)}}else n(-1,"No Transport");return w},getJSON:function(e,t,n){return re.get(e,t,n,"json")},getScript:function(e,t){return re.get(e,void 0,t,"script")}}),re.each(["get","post"],function(e,t){re[t]=function(e,n,i,r){return re.isFunction(n)&&(r=r||i,i=n,n=void 0),re.ajax({url:e,type:t,dataType:r,data:n,success:i})}}),re.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){re.fn[t]=function(e){return this.on(t,e)}}),re._evalUrl=function(e){return re.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},re.fn.extend({wrapAll:function(e){if(re.isFunction(e))return this.each(function(t){re(this).wrapAll(e.call(this,t))});if(this[0]){var t=re(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstChild&&1===e.firstChild.nodeType;)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return this.each(re.isFunction(e)?function(t){re(this).wrapInner(e.call(this,t))}:function(){var t=re(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=re.isFunction(e);return this.each(function(n){re(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){re.nodeName(this,"body")||re(this).replaceWith(this.childNodes)}).end()}}),re.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0||!ne.reliableHiddenOffsets()&&"none"===(e.style&&e.style.display||re.css(e,"display"))},re.expr.filters.visible=function(e){return!re.expr.filters.hidden(e)};var Wt=/%20/g,Gt=/\[\]$/,Xt=/\r?\n/g,Yt=/^(?:submit|button|image|reset|file)$/i,Kt=/^(?:input|select|textarea|keygen)/i;re.param=function(e,t){var n,i=[],r=function(e,t){t=re.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=re.ajaxSettings&&re.ajaxSettings.traditional),re.isArray(e)||e.jquery&&!re.isPlainObject(e))re.each(e,function(){r(this.name,this.value)});else for(n in e)V(n,e[n],t,r);return i.join("&").replace(Wt,"+")},re.fn.extend({serialize:function(){return re.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=re.prop(this,"elements");return e?re.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!re(this).is(":disabled")&&Kt.test(this.nodeName)&&!Yt.test(e)&&(this.checked||!Ae.test(e))}).map(function(e,t){var n=re(this).val();return null==n?null:re.isArray(n)?re.map(n,function(e){return{name:t.name,value:e.replace(Xt,"\r\n")}}):{name:t.name,value:n.replace(Xt,"\r\n")}}).get()}}),re.ajaxSettings.xhr=void 0!==e.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&B()||W()}:B;var Jt=0,Qt={},Zt=re.ajaxSettings.xhr();e.ActiveXObject&&re(e).on("unload",function(){for(var e in Qt)Qt[e](void 0,!0)}),ne.cors=!!Zt&&"withCredentials"in Zt,Zt=ne.ajax=!!Zt,Zt&&re.ajaxTransport(function(e){if(!e.crossDomain||ne.cors){var t;return{send:function(n,i){var r,o=e.xhr(),a=++Jt;if(o.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)o[r]=e.xhrFields[r];e.mimeType&&o.overrideMimeType&&o.overrideMimeType(e.mimeType),e.crossDomain||n["X-Requested-With"]||(n["X-Requested-With"]="XMLHttpRequest");for(r in n)void 0!==n[r]&&o.setRequestHeader(r,n[r]+"");o.send(e.hasContent&&e.data||null),t=function(n,r){var s,l,u;if(t&&(r||4===o.readyState))if(delete Qt[a],t=void 0,o.onreadystatechange=re.noop,r)4!==o.readyState&&o.abort();else{u={},s=o.status,"string"==typeof o.responseText&&(u.text=o.responseText);try{l=o.statusText}catch(c){l=""}s||!e.isLocal||e.crossDomain?1223===s&&(s=204):s=u.text?200:404}u&&i(s,l,u,o.getAllResponseHeaders())},e.async?4===o.readyState?setTimeout(t):o.onreadystatechange=Qt[a]=t:t()},abort:function(){t&&t(void 0,!0)}}}}),re.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return re.globalEval(e),e}}}),re.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),re.ajaxTransport("script",function(e){if(e.crossDomain){var t,n=he.head||re("head")[0]||he.documentElement;return{send:function(i,r){t=he.createElement("script"),t.async=!0,e.scriptCharset&&(t.charset=e.scriptCharset),t.src=e.url,t.onload=t.onreadystatechange=function(e,n){(n||!t.readyState||/loaded|complete/.test(t.readyState))&&(t.onload=t.onreadystatechange=null,t.parentNode&&t.parentNode.removeChild(t),t=null,n||r(200,"success"))},n.insertBefore(t,n.firstChild)},abort:function(){t&&t.onload(void 0,!0)}}}});var en=[],tn=/(=)\?(?=&|$)|\?\?/;re.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=en.pop()||re.expando+"_"+At++;return this[e]=!0,e}}),re.ajaxPrefilter("json jsonp",function(t,n,i){var r,o,a,s=t.jsonp!==!1&&(tn.test(t.url)?"url":"string"==typeof t.data&&!(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&tn.test(t.data)&&"data");return s||"jsonp"===t.dataTypes[0]?(r=t.jsonpCallback=re.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(tn,"$1"+r):t.jsonp!==!1&&(t.url+=(Mt.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return a||re.error(r+" was not called"),a[0]},t.dataTypes[0]="json",o=e[r],e[r]=function(){a=arguments},i.always(function(){e[r]=o,t[r]&&(t.jsonpCallback=n.jsonpCallback,en.push(r)),a&&re.isFunction(o)&&o(a[0]),a=o=void 0}),"script"):void 0}),re.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||he;var i=pe.exec(e),r=!n&&[];return i?[t.createElement(i[1])]:(i=re.buildFragment([e],t,r),r&&r.length&&re(r).remove(),re.merge([],i.childNodes))};var nn=re.fn.load;re.fn.load=function(e,t,n){if("string"!=typeof e&&nn)return nn.apply(this,arguments);var i,r,o,a=this,s=e.indexOf(" ");return s>=0&&(i=re.trim(e.slice(s,e.length)),e=e.slice(0,s)),re.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(o="POST"),a.length>0&&re.ajax({url:e,type:o,dataType:"html",data:t}).done(function(e){r=arguments,a.html(i?re("<div>").append(re.parseHTML(e)).find(i):e)}).complete(n&&function(e,t){a.each(n,r||[e.responseText,t,e])}),this},re.expr.filters.animated=function(e){return re.grep(re.timers,function(t){return e===t.elem}).length};var rn=e.document.documentElement;re.offset={setOffset:function(e,t,n){var i,r,o,a,s,l,u,c=re.css(e,"position"),p=re(e),d={};"static"===c&&(e.style.position="relative"),s=p.offset(),o=re.css(e,"top"),l=re.css(e,"left"),u=("absolute"===c||"fixed"===c)&&re.inArray("auto",[o,l])>-1,u?(i=p.position(),a=i.top,r=i.left):(a=parseFloat(o)||0,r=parseFloat(l)||0),re.isFunction(t)&&(t=t.call(e,n,s)),null!=t.top&&(d.top=t.top-s.top+a),null!=t.left&&(d.left=t.left-s.left+r),"using"in t?t.using.call(e,d):p.css(d)}},re.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){re.offset.setOffset(this,e,t)});var t,n,i={top:0,left:0},r=this[0],o=r&&r.ownerDocument;return o?(t=o.documentElement,re.contains(t,r)?(typeof r.getBoundingClientRect!==Se&&(i=r.getBoundingClientRect()),n=G(o),{top:i.top+(n.pageYOffset||t.scrollTop)-(t.clientTop||0),left:i.left+(n.pageXOffset||t.scrollLeft)-(t.clientLeft||0)}):i):void 0},position:function(){if(this[0]){var e,t,n={top:0,left:0},i=this[0];return"fixed"===re.css(i,"position")?t=i.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),re.nodeName(e[0],"html")||(n=e.offset()),n.top+=re.css(e[0],"borderTopWidth",!0),n.left+=re.css(e[0],"borderLeftWidth",!0)),{top:t.top-n.top-re.css(i,"marginTop",!0),left:t.left-n.left-re.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||rn;e&&!re.nodeName(e,"html")&&"static"===re.css(e,"position");)e=e.offsetParent;return e||rn})}}),re.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n=/Y/.test(t);re.fn[e]=function(i){return De(this,function(e,i,r){var o=G(e);return void 0===r?o?t in o?o[t]:o.document.documentElement[i]:e[i]:void(o?o.scrollTo(n?re(o).scrollLeft():r,n?r:re(o).scrollTop()):e[i]=r)},e,i,arguments.length,null)}}),re.each(["top","left"],function(e,t){re.cssHooks[t]=E(ne.pixelPosition,function(e,n){return n?(n=tt(e,t),it.test(n)?re(e).position()[t]+"px":n):void 0})}),re.each({Height:"height",Width:"width"},function(e,t){re.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,i){re.fn[i]=function(i,r){var o=arguments.length&&(n||"boolean"!=typeof i),a=n||(i===!0||r===!0?"margin":"border");return De(this,function(t,n,i){var r;return re.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(r=t.documentElement,
Math.max(t.body["scroll"+e],r["scroll"+e],t.body["offset"+e],r["offset"+e],r["client"+e])):void 0===i?re.css(t,n,a):re.style(t,n,i,a)},t,o?i:void 0,o,null)}})}),re.fn.size=function(){return this.length},re.fn.andSelf=re.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return re});var on=e.jQuery,an=e.$;return re.noConflict=function(t){return e.$===re&&(e.$=an),t&&e.jQuery===re&&(e.jQuery=on),re},typeof t===Se&&(e.jQuery=e.$=re),re}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(e){"use strict";var t=e.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||t[0]>2)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3")}(jQuery),+function(e){"use strict";function t(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var n in t)if(void 0!==e.style[n])return{end:t[n]};return!1}e.fn.emulateTransitionEnd=function(t){var n=!1,i=this;e(this).one("bsTransitionEnd",function(){n=!0});var r=function(){n||e(i).trigger(e.support.transition.end)};return setTimeout(r,t),this},e(function(){e.support.transition=t(),e.support.transition&&(e.event.special.bsTransitionEnd={bindType:e.support.transition.end,delegateType:e.support.transition.end,handle:function(t){return e(t.target).is(this)?t.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),r=n.data("bs.alert");r||n.data("bs.alert",r=new i(this)),"string"==typeof t&&r[t].call(n)})}var n='[data-dismiss="alert"]',i=function(t){e(t).on("click",n,this.close)};i.VERSION="3.3.6",i.TRANSITION_DURATION=150,i.prototype.close=function(t){function n(){a.detach().trigger("closed.bs.alert").remove()}var r=e(this),o=r.attr("data-target");o||(o=r.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,""));var a=e(o);t&&t.preventDefault(),a.length||(a=r.closest(".alert")),a.trigger(t=e.Event("close.bs.alert")),t.isDefaultPrevented()||(a.removeClass("in"),e.support.transition&&a.hasClass("fade")?a.one("bsTransitionEnd",n).emulateTransitionEnd(i.TRANSITION_DURATION):n())};var r=e.fn.alert;e.fn.alert=t,e.fn.alert.Constructor=i,e.fn.alert.noConflict=function(){return e.fn.alert=r,this},e(document).on("click.bs.alert.data-api",n,i.prototype.close)}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),r=i.data("bs.button"),o="object"==typeof t&&t;r||i.data("bs.button",r=new n(this,o)),"toggle"==t?r.toggle():t&&r.setState(t)})}var n=function(t,i){this.$element=e(t),this.options=e.extend({},n.DEFAULTS,i),this.isLoading=!1};n.VERSION="3.3.6",n.DEFAULTS={loadingText:"loading..."},n.prototype.setState=function(t){var n="disabled",i=this.$element,r=i.is("input")?"val":"html",o=i.data();t+="Text",null==o.resetText&&i.data("resetText",i[r]()),setTimeout(e.proxy(function(){i[r](null==o[t]?this.options[t]:o[t]),"loadingText"==t?(this.isLoading=!0,i.addClass(n).attr(n,n)):this.isLoading&&(this.isLoading=!1,i.removeClass(n).removeAttr(n))},this),0)},n.prototype.toggle=function(){var e=!0,t=this.$element.closest('[data-toggle="buttons"]');if(t.length){var n=this.$element.find("input");"radio"==n.prop("type")?(n.prop("checked")&&(e=!1),t.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==n.prop("type")&&(n.prop("checked")!==this.$element.hasClass("active")&&(e=!1),this.$element.toggleClass("active")),n.prop("checked",this.$element.hasClass("active")),e&&n.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var i=e.fn.button;e.fn.button=t,e.fn.button.Constructor=n,e.fn.button.noConflict=function(){return e.fn.button=i,this},e(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(n){var i=e(n.target);i.hasClass("btn")||(i=i.closest(".btn")),t.call(i,"toggle"),e(n.target).is('input[type="radio"]')||e(n.target).is('input[type="checkbox"]')||n.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){e(t.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(t.type))})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),r=i.data("bs.carousel"),o=e.extend({},n.DEFAULTS,i.data(),"object"==typeof t&&t),a="string"==typeof t?t:o.slide;r||i.data("bs.carousel",r=new n(this,o)),"number"==typeof t?r.to(t):a?r[a]():o.interval&&r.pause().cycle()})}var n=function(t,n){this.$element=e(t),this.$indicators=this.$element.find(".carousel-indicators"),this.options=n,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",e.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",e.proxy(this.pause,this)).on("mouseleave.bs.carousel",e.proxy(this.cycle,this))};n.VERSION="3.3.6",n.TRANSITION_DURATION=600,n.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},n.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()}},n.prototype.cycle=function(t){return t||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},n.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},n.prototype.getItemForDirection=function(e,t){var n=this.getItemIndex(t),i="prev"==e&&0===n||"next"==e&&n==this.$items.length-1;if(i&&!this.options.wrap)return t;var r="prev"==e?-1:1,o=(n+r)%this.$items.length;return this.$items.eq(o)},n.prototype.to=function(e){var t=this,n=this.getItemIndex(this.$active=this.$element.find(".item.active"));return e>this.$items.length-1||0>e?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(e)}):n==e?this.pause().cycle():this.slide(e>n?"next":"prev",this.$items.eq(e))},n.prototype.pause=function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition&&(this.$element.trigger(e.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},n.prototype.next=function(){return this.sliding?void 0:this.slide("next")},n.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},n.prototype.slide=function(t,i){var r=this.$element.find(".item.active"),o=i||this.getItemForDirection(t,r),a=this.interval,s="next"==t?"left":"right",l=this;if(o.hasClass("active"))return this.sliding=!1;var u=o[0],c=e.Event("slide.bs.carousel",{relatedTarget:u,direction:s});if(this.$element.trigger(c),!c.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var p=e(this.$indicators.children()[this.getItemIndex(o)]);p&&p.addClass("active")}var d=e.Event("slid.bs.carousel",{relatedTarget:u,direction:s});return e.support.transition&&this.$element.hasClass("slide")?(o.addClass(t),o[0].offsetWidth,r.addClass(s),o.addClass(s),r.one("bsTransitionEnd",function(){o.removeClass([t,s].join(" ")).addClass("active"),r.removeClass(["active",s].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(d)},0)}).emulateTransitionEnd(n.TRANSITION_DURATION)):(r.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(d)),a&&this.cycle(),this}};var i=e.fn.carousel;e.fn.carousel=t,e.fn.carousel.Constructor=n,e.fn.carousel.noConflict=function(){return e.fn.carousel=i,this};var r=function(n){var i,r=e(this),o=e(r.attr("data-target")||(i=r.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,""));if(o.hasClass("carousel")){var a=e.extend({},o.data(),r.data()),s=r.attr("data-slide-to");s&&(a.interval=!1),t.call(o,a),s&&o.data("bs.carousel").to(s),n.preventDefault()}};e(document).on("click.bs.carousel.data-api","[data-slide]",r).on("click.bs.carousel.data-api","[data-slide-to]",r),e(window).on("load",function(){e('[data-ride="carousel"]').each(function(){var n=e(this);t.call(n,n.data())})})}(jQuery),+function(e){"use strict";function t(t){var n,i=t.attr("data-target")||(n=t.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,"");return e(i)}function n(t){return this.each(function(){var n=e(this),r=n.data("bs.collapse"),o=e.extend({},i.DEFAULTS,n.data(),"object"==typeof t&&t);!r&&o.toggle&&/show|hide/.test(t)&&(o.toggle=!1),r||n.data("bs.collapse",r=new i(this,o)),"string"==typeof t&&r[t]()})}var i=function(t,n){this.$element=e(t),this.options=e.extend({},i.DEFAULTS,n),this.$trigger=e('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};i.VERSION="3.3.6",i.TRANSITION_DURATION=350,i.DEFAULTS={toggle:!0},i.prototype.dimension=function(){var e=this.$element.hasClass("width");return e?"width":"height"},i.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t,r=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(r&&r.length&&(t=r.data("bs.collapse"),t&&t.transitioning))){var o=e.Event("show.bs.collapse");if(this.$element.trigger(o),!o.isDefaultPrevented()){r&&r.length&&(n.call(r,"hide"),t||r.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var s=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!e.support.transition)return s.call(this);var l=e.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",e.proxy(s,this)).emulateTransitionEnd(i.TRANSITION_DURATION)[a](this.$element[0][l])}}}},i.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var t=e.Event("hide.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var n=this.dimension();this.$element[n](this.$element[n]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var r=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return e.support.transition?void this.$element[n](0).one("bsTransitionEnd",e.proxy(r,this)).emulateTransitionEnd(i.TRANSITION_DURATION):r.call(this)}}},i.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},i.prototype.getParent=function(){return e(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(e.proxy(function(n,i){var r=e(i);this.addAriaAndCollapsedClass(t(r),r)},this)).end()},i.prototype.addAriaAndCollapsedClass=function(e,t){var n=e.hasClass("in");e.attr("aria-expanded",n),t.toggleClass("collapsed",!n).attr("aria-expanded",n)};var r=e.fn.collapse;e.fn.collapse=n,e.fn.collapse.Constructor=i,e.fn.collapse.noConflict=function(){return e.fn.collapse=r,this},e(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(i){var r=e(this);r.attr("data-target")||i.preventDefault();var o=t(r),a=o.data("bs.collapse"),s=a?"toggle":r.data();n.call(o,s)})}(jQuery),+function(e){"use strict";function t(t){var n=t.attr("data-target");n||(n=t.attr("href"),n=n&&/#[A-Za-z]/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,""));var i=n&&e(n);return i&&i.length?i:t.parent()}function n(n){n&&3===n.which||(e(r).remove(),e(o).each(function(){var i=e(this),r=t(i),o={relatedTarget:this};r.hasClass("open")&&(n&&"click"==n.type&&/input|textarea/i.test(n.target.tagName)&&e.contains(r[0],n.target)||(r.trigger(n=e.Event("hide.bs.dropdown",o)),n.isDefaultPrevented()||(i.attr("aria-expanded","false"),r.removeClass("open").trigger(e.Event("hidden.bs.dropdown",o)))))}))}function i(t){return this.each(function(){var n=e(this),i=n.data("bs.dropdown");i||n.data("bs.dropdown",i=new a(this)),"string"==typeof t&&i[t].call(n)})}var r=".dropdown-backdrop",o='[data-toggle="dropdown"]',a=function(t){e(t).on("click.bs.dropdown",this.toggle)};a.VERSION="3.3.6",a.prototype.toggle=function(i){var r=e(this);if(!r.is(".disabled, :disabled")){var o=t(r),a=o.hasClass("open");if(n(),!a){"ontouchstart"in document.documentElement&&!o.closest(".navbar-nav").length&&e(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(e(this)).on("click",n);var s={relatedTarget:this};if(o.trigger(i=e.Event("show.bs.dropdown",s)),i.isDefaultPrevented())return;r.trigger("focus").attr("aria-expanded","true"),o.toggleClass("open").trigger(e.Event("shown.bs.dropdown",s))}return!1}},a.prototype.keydown=function(n){if(/(38|40|27|32)/.test(n.which)&&!/input|textarea/i.test(n.target.tagName)){var i=e(this);if(n.preventDefault(),n.stopPropagation(),!i.is(".disabled, :disabled")){var r=t(i),a=r.hasClass("open");if(!a&&27!=n.which||a&&27==n.which)return 27==n.which&&r.find(o).trigger("focus"),i.trigger("click");var s=" li:not(.disabled):visible a",l=r.find(".dropdown-menu"+s);if(l.length){var u=l.index(n.target);38==n.which&&u>0&&u--,40==n.which&&u<l.length-1&&u++,~u||(u=0),l.eq(u).trigger("focus")}}}};var s=e.fn.dropdown;e.fn.dropdown=i,e.fn.dropdown.Constructor=a,e.fn.dropdown.noConflict=function(){return e.fn.dropdown=s,this},e(document).on("click.bs.dropdown.data-api",n).on("click.bs.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.bs.dropdown.data-api",o,a.prototype.toggle).on("keydown.bs.dropdown.data-api",o,a.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",a.prototype.keydown)}(jQuery),+function(e){"use strict";function t(t,i){return this.each(function(){var r=e(this),o=r.data("bs.modal"),a=e.extend({},n.DEFAULTS,r.data(),"object"==typeof t&&t);o||r.data("bs.modal",o=new n(this,a)),"string"==typeof t?o[t](i):a.show&&o.show(i)})}var n=function(t,n){this.options=n,this.$body=e(document.body),this.$element=e(t),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};n.VERSION="3.3.6",n.TRANSITION_DURATION=300,n.BACKDROP_TRANSITION_DURATION=150,n.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},n.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},n.prototype.show=function(t){var i=this,r=e.Event("show.bs.modal",{relatedTarget:t});this.$element.trigger(r),this.isShown||r.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){i.$element.one("mouseup.dismiss.bs.modal",function(t){e(t.target).is(i.$element)&&(i.ignoreBackdropClick=!0)})}),this.backdrop(function(){var r=e.support.transition&&i.$element.hasClass("fade");i.$element.parent().length||i.$element.appendTo(i.$body),i.$element.show().scrollTop(0),i.adjustDialog(),r&&i.$element[0].offsetWidth,i.$element.addClass("in"),i.enforceFocus();var o=e.Event("shown.bs.modal",{relatedTarget:t});r?i.$dialog.one("bsTransitionEnd",function(){i.$element.trigger("focus").trigger(o)}).emulateTransitionEnd(n.TRANSITION_DURATION):i.$element.trigger("focus").trigger(o)}))},n.prototype.hide=function(t){t&&t.preventDefault(),t=e.Event("hide.bs.modal"),this.$element.trigger(t),this.isShown&&!t.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(n.TRANSITION_DURATION):this.hideModal())},n.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},n.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},n.prototype.resize=function(){this.isShown?e(window).on("resize.bs.modal",e.proxy(this.handleUpdate,this)):e(window).off("resize.bs.modal")},n.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$body.removeClass("modal-open"),e.resetAdjustments(),e.resetScrollbar(),e.$element.trigger("hidden.bs.modal")})},n.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},n.prototype.backdrop=function(t){var i=this,r=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var o=e.support.transition&&r;if(this.$backdrop=e(document.createElement("div")).addClass("modal-backdrop "+r).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",e.proxy(function(e){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),o&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!t)return;o?this.$backdrop.one("bsTransitionEnd",t).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION):t()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){i.removeBackdrop(),t&&t()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION):a()}else t&&t()},n.prototype.handleUpdate=function(){this.adjustDialog()},n.prototype.adjustDialog=function(){var e=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&e?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!e?this.scrollbarWidth:""})},n.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},n.prototype.checkScrollbar=function(){var e=window.innerWidth;if(!e){var t=document.documentElement.getBoundingClientRect();e=t.right-Math.abs(t.left)}this.bodyIsOverflowing=document.body.clientWidth<e,this.scrollbarWidth=this.measureScrollbar()},n.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",e+this.scrollbarWidth)},n.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},n.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var t=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),t};var i=e.fn.modal;e.fn.modal=t,e.fn.modal.Constructor=n,e.fn.modal.noConflict=function(){return e.fn.modal=i,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(n){var i=e(this),r=i.attr("href"),o=e(i.attr("data-target")||r&&r.replace(/.*(?=#[^\s]+$)/,"")),a=o.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(r)&&r},o.data(),i.data());i.is("a")&&n.preventDefault(),o.one("show.bs.modal",function(e){e.isDefaultPrevented()||o.one("hidden.bs.modal",function(){i.is(":visible")&&i.trigger("focus")})}),t.call(o,a,this)})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),r=i.data("bs.tooltip"),o="object"==typeof t&&t;(r||!/destroy|hide/.test(t))&&(r||i.data("bs.tooltip",r=new n(this,o)),"string"==typeof t&&r[t]())})}var n=function(e,t){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",e,t)};n.VERSION="3.3.6",n.TRANSITION_DURATION=150,n.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},n.prototype.init=function(t,n,i){if(this.enabled=!0,this.type=t,this.$element=e(n),this.options=this.getOptions(i),this.$viewport=this.options.viewport&&e(e.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var r=this.options.trigger.split(" "),o=r.length;o--;){var a=r[o];if("click"==a)this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this));else if("manual"!=a){var s="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,e.proxy(this.leave,this))}}this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},n.prototype.getDefaults=function(){return n.DEFAULTS},n.prototype.getOptions=function(t){return t=e.extend({},this.getDefaults(),this.$element.data(),t),t.delay&&"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t},n.prototype.getDelegateOptions=function(){var t={},n=this.getDefaults();return this._options&&e.each(this._options,function(e,i){n[e]!=i&&(t[e]=i)}),t},n.prototype.enter=function(t){var n=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);return n||(n=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,n)),t instanceof e.Event&&(n.inState["focusin"==t.type?"focus":"hover"]=!0),n.tip().hasClass("in")||"in"==n.hoverState?void(n.hoverState="in"):(clearTimeout(n.timeout),n.hoverState="in",n.options.delay&&n.options.delay.show?void(n.timeout=setTimeout(function(){"in"==n.hoverState&&n.show()},n.options.delay.show)):n.show())},n.prototype.isInStateTrue=function(){for(var e in this.inState)if(this.inState[e])return!0;return!1},n.prototype.leave=function(t){var n=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);return n||(n=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,n)),t instanceof e.Event&&(n.inState["focusout"==t.type?"focus":"hover"]=!1),n.isInStateTrue()?void 0:(clearTimeout(n.timeout),n.hoverState="out",n.options.delay&&n.options.delay.hide?void(n.timeout=setTimeout(function(){"out"==n.hoverState&&n.hide()},n.options.delay.hide)):n.hide())},n.prototype.show=function(){var t=e.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(t);var i=e.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(t.isDefaultPrevented()||!i)return;var r=this,o=this.tip(),a=this.getUID(this.type);this.setContent(),o.attr("id",a),this.$element.attr("aria-describedby",a),this.options.animation&&o.addClass("fade");var s="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,u=l.test(s);u&&(s=s.replace(l,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(s).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var c=this.getPosition(),p=o[0].offsetWidth,d=o[0].offsetHeight;if(u){var f=s,h=this.getPosition(this.$viewport);s="bottom"==s&&c.bottom+d>h.bottom?"top":"top"==s&&c.top-d<h.top?"bottom":"right"==s&&c.right+p>h.width?"left":"left"==s&&c.left-p<h.left?"right":s,o.removeClass(f).addClass(s)}var m=this.getCalculatedOffset(s,c,p,d);this.applyPlacement(m,s);var g=function(){var e=r.hoverState;r.$element.trigger("shown.bs."+r.type),r.hoverState=null,"out"==e&&r.leave(r)};e.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",g).emulateTransitionEnd(n.TRANSITION_DURATION):g()}},n.prototype.applyPlacement=function(t,n){var i=this.tip(),r=i[0].offsetWidth,o=i[0].offsetHeight,a=parseInt(i.css("margin-top"),10),s=parseInt(i.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(s)&&(s=0),t.top+=a,t.left+=s,e.offset.setOffset(i[0],e.extend({using:function(e){i.css({top:Math.round(e.top),left:Math.round(e.left)})}},t),0),i.addClass("in");var l=i[0].offsetWidth,u=i[0].offsetHeight;"top"==n&&u!=o&&(t.top=t.top+o-u);var c=this.getViewportAdjustedDelta(n,t,l,u);c.left?t.left+=c.left:t.top+=c.top;var p=/top|bottom/.test(n),d=p?2*c.left-r+l:2*c.top-o+u,f=p?"offsetWidth":"offsetHeight";i.offset(t),this.replaceArrow(d,i[0][f],p)},n.prototype.replaceArrow=function(e,t,n){this.arrow().css(n?"left":"top",50*(1-e/t)+"%").css(n?"top":"left","")},n.prototype.setContent=function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},n.prototype.hide=function(t){function i(){"in"!=r.hoverState&&o.detach(),r.$element.removeAttr("aria-describedby").trigger("hidden.bs."+r.type),t&&t()}var r=this,o=e(this.$tip),a=e.Event("hide.bs."+this.type);return this.$element.trigger(a),a.isDefaultPrevented()?void 0:(o.removeClass("in"),e.support.transition&&o.hasClass("fade")?o.one("bsTransitionEnd",i).emulateTransitionEnd(n.TRANSITION_DURATION):i(),this.hoverState=null,this)},n.prototype.fixTitle=function(){var e=this.$element;(e.attr("title")||"string"!=typeof e.attr("data-original-title"))&&e.attr("data-original-title",e.attr("title")||"").attr("title","")},n.prototype.hasContent=function(){return this.getTitle()},n.prototype.getPosition=function(t){t=t||this.$element;var n=t[0],i="BODY"==n.tagName,r=n.getBoundingClientRect();null==r.width&&(r=e.extend({},r,{width:r.right-r.left,height:r.bottom-r.top}));var o=i?{top:0,left:0}:t.offset(),a={scroll:i?document.documentElement.scrollTop||document.body.scrollTop:t.scrollTop()},s=i?{width:e(window).width(),height:e(window).height()}:null;return e.extend({},r,a,s,o)},n.prototype.getCalculatedOffset=function(e,t,n,i){return"bottom"==e?{top:t.top+t.height,left:t.left+t.width/2-n/2}:"top"==e?{top:t.top-i,left:t.left+t.width/2-n/2}:"left"==e?{top:t.top+t.height/2-i/2,left:t.left-n}:{top:t.top+t.height/2-i/2,left:t.left+t.width}},n.prototype.getViewportAdjustedDelta=function(e,t,n,i){var r={top:0,left:0};if(!this.$viewport)return r;var o=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(e)){var s=t.top-o-a.scroll,l=t.top+o-a.scroll+i;s<a.top?r.top=a.top-s:l>a.top+a.height&&(r.top=a.top+a.height-l)}else{var u=t.left-o,c=t.left+o+n;u<a.left?r.left=a.left-u:c>a.right&&(r.left=a.left+a.width-c)}return r},n.prototype.getTitle=function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||("function"==typeof n.title?n.title.call(t[0]):n.title)},n.prototype.getUID=function(e){do e+=~~(1e6*Math.random());while(document.getElementById(e));return e},n.prototype.tip=function(){if(!this.$tip&&(this.$tip=e(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},n.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},n.prototype.enable=function(){this.enabled=!0},n.prototype.disable=function(){this.enabled=!1},n.prototype.toggleEnabled=function(){this.enabled=!this.enabled},n.prototype.toggle=function(t){var n=this;t&&(n=e(t.currentTarget).data("bs."+this.type),n||(n=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,n))),t?(n.inState.click=!n.inState.click,n.isInStateTrue()?n.enter(n):n.leave(n)):n.tip().hasClass("in")?n.leave(n):n.enter(n)},n.prototype.destroy=function(){var e=this;clearTimeout(this.timeout),this.hide(function(){e.$element.off("."+e.type).removeData("bs."+e.type),e.$tip&&e.$tip.detach(),e.$tip=null,e.$arrow=null,e.$viewport=null})};var i=e.fn.tooltip;e.fn.tooltip=t,e.fn.tooltip.Constructor=n,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=i,this}}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),r=i.data("bs.popover"),o="object"==typeof t&&t;(r||!/destroy|hide/.test(t))&&(r||i.data("bs.popover",r=new n(this,o)),"string"==typeof t&&r[t]())})}var n=function(e,t){this.init("popover",e,t)};if(!e.fn.tooltip)throw new Error("Popover requires tooltip.js");n.VERSION="3.3.6",n.DEFAULTS=e.extend({},e.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),n.prototype=e.extend({},e.fn.tooltip.Constructor.prototype),n.prototype.constructor=n,n.prototype.getDefaults=function(){return n.DEFAULTS},n.prototype.setContent=function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof n?"html":"append":"text"](n),e.removeClass("fade top bottom left right in"),e.find(".popover-title").html()||e.find(".popover-title").hide()},n.prototype.hasContent=function(){return this.getTitle()||this.getContent()},n.prototype.getContent=function(){var e=this.$element,t=this.options;return e.attr("data-content")||("function"==typeof t.content?t.content.call(e[0]):t.content)},n.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var i=e.fn.popover;e.fn.popover=t,e.fn.popover.Constructor=n,e.fn.popover.noConflict=function(){return e.fn.popover=i,this}}(jQuery),+function(e){"use strict";function t(n,i){this.$body=e(document.body),this.$scrollElement=e(e(n).is(document.body)?window:n),this.options=e.extend({},t.DEFAULTS,i),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",e.proxy(this.process,this)),this.refresh(),this.process()}function n(n){return this.each(function(){var i=e(this),r=i.data("bs.scrollspy"),o="object"==typeof n&&n;r||i.data("bs.scrollspy",r=new t(this,o)),"string"==typeof n&&r[n]()})}t.VERSION="3.3.6",t.DEFAULTS={offset:10},t.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},t.prototype.refresh=function(){var t=this,n="offset",i=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),e.isWindow(this.$scrollElement[0])||(n="position",i=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var t=e(this),r=t.data("target")||t.attr("href"),o=/^#./.test(r)&&e(r);return o&&o.length&&o.is(":visible")&&[[o[n]().top+i,r]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},t.prototype.process=function(){var e,t=this.$scrollElement.scrollTop()+this.options.offset,n=this.getScrollHeight(),i=this.options.offset+n-this.$scrollElement.height(),r=this.offsets,o=this.targets,a=this.activeTarget;
if(this.scrollHeight!=n&&this.refresh(),t>=i)return a!=(e=o[o.length-1])&&this.activate(e);if(a&&t<r[0])return this.activeTarget=null,this.clear();for(e=r.length;e--;)a!=o[e]&&t>=r[e]&&(void 0===r[e+1]||t<r[e+1])&&this.activate(o[e])},t.prototype.activate=function(t){this.activeTarget=t,this.clear();var n=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',i=e(n).parents("li").addClass("active");i.parent(".dropdown-menu").length&&(i=i.closest("li.dropdown").addClass("active")),i.trigger("activate.bs.scrollspy")},t.prototype.clear=function(){e(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var i=e.fn.scrollspy;e.fn.scrollspy=n,e.fn.scrollspy.Constructor=t,e.fn.scrollspy.noConflict=function(){return e.fn.scrollspy=i,this},e(window).on("load.bs.scrollspy.data-api",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);n.call(t,t.data())})})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),r=i.data("bs.tab");r||i.data("bs.tab",r=new n(this)),"string"==typeof t&&r[t]()})}var n=function(t){this.element=e(t)};n.VERSION="3.3.6",n.TRANSITION_DURATION=150,n.prototype.show=function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),i=t.data("target");if(i||(i=t.attr("href"),i=i&&i.replace(/.*(?=#[^\s]*$)/,"")),!t.parent("li").hasClass("active")){var r=n.find(".active:last a"),o=e.Event("hide.bs.tab",{relatedTarget:t[0]}),a=e.Event("show.bs.tab",{relatedTarget:r[0]});if(r.trigger(o),t.trigger(a),!a.isDefaultPrevented()&&!o.isDefaultPrevented()){var s=e(i);this.activate(t.closest("li"),n),this.activate(s,s.parent(),function(){r.trigger({type:"hidden.bs.tab",relatedTarget:t[0]}),t.trigger({type:"shown.bs.tab",relatedTarget:r[0]})})}}},n.prototype.activate=function(t,i,r){function o(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),t.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu").length&&t.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),r&&r()}var a=i.find("> .active"),s=r&&e.support.transition&&(a.length&&a.hasClass("fade")||!!i.find("> .fade").length);a.length&&s?a.one("bsTransitionEnd",o).emulateTransitionEnd(n.TRANSITION_DURATION):o(),a.removeClass("in")};var i=e.fn.tab;e.fn.tab=t,e.fn.tab.Constructor=n,e.fn.tab.noConflict=function(){return e.fn.tab=i,this};var r=function(n){n.preventDefault(),t.call(e(this),"show")};e(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',r).on("click.bs.tab.data-api",'[data-toggle="pill"]',r)}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),r=i.data("bs.affix"),o="object"==typeof t&&t;r||i.data("bs.affix",r=new n(this,o)),"string"==typeof t&&r[t]()})}var n=function(t,i){this.options=e.extend({},n.DEFAULTS,i),this.$target=e(this.options.target).on("scroll.bs.affix.data-api",e.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",e.proxy(this.checkPositionWithEventLoop,this)),this.$element=e(t),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};n.VERSION="3.3.6",n.RESET="affix affix-top affix-bottom",n.DEFAULTS={offset:0,target:window},n.prototype.getState=function(e,t,n,i){var r=this.$target.scrollTop(),o=this.$element.offset(),a=this.$target.height();if(null!=n&&"top"==this.affixed)return n>r?"top":!1;if("bottom"==this.affixed)return null!=n?r+this.unpin<=o.top?!1:"bottom":e-i>=r+a?!1:"bottom";var s=null==this.affixed,l=s?r:o.top,u=s?a:t;return null!=n&&n>=r?"top":null!=i&&l+u>=e-i?"bottom":!1},n.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(n.RESET).addClass("affix");var e=this.$target.scrollTop(),t=this.$element.offset();return this.pinnedOffset=t.top-e},n.prototype.checkPositionWithEventLoop=function(){setTimeout(e.proxy(this.checkPosition,this),1)},n.prototype.checkPosition=function(){if(this.$element.is(":visible")){var t=this.$element.height(),i=this.options.offset,r=i.top,o=i.bottom,a=Math.max(e(document).height(),e(document.body).height());"object"!=typeof i&&(o=r=i),"function"==typeof r&&(r=i.top(this.$element)),"function"==typeof o&&(o=i.bottom(this.$element));var s=this.getState(a,t,r,o);if(this.affixed!=s){null!=this.unpin&&this.$element.css("top","");var l="affix"+(s?"-"+s:""),u=e.Event(l+".bs.affix");if(this.$element.trigger(u),u.isDefaultPrevented())return;this.affixed=s,this.unpin="bottom"==s?this.getPinnedOffset():null,this.$element.removeClass(n.RESET).addClass(l).trigger(l.replace("affix","affixed")+".bs.affix")}"bottom"==s&&this.$element.offset({top:a-t-o})}};var i=e.fn.affix;e.fn.affix=t,e.fn.affix.Constructor=n,e.fn.affix.noConflict=function(){return e.fn.affix=i,this},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var n=e(this),i=n.data();i.offset=i.offset||{},null!=i.offsetBottom&&(i.offset.bottom=i.offsetBottom),null!=i.offsetTop&&(i.offset.top=i.offsetTop),t.call(n,i)})})}(jQuery),function(e){"use strict";function t(e){return function(){var t,n=arguments[0];for(t="["+(e?e+":":"")+n+"] http://errors.angularjs.org/1.5.6/"+(e?e+"/":"")+n,n=1;n<arguments.length;n++){t=t+(1==n?"?":"&")+"p"+(n-1)+"=";var i,r=encodeURIComponent;i=arguments[n],i="function"==typeof i?i.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof i?"undefined":"string"!=typeof i?JSON.stringify(i):i,t+=r(i)}return Error(t)}}function n(e){if(null==e||k(e))return!1;if(oi(e)||y(e)||Vn&&e instanceof Vn)return!0;var t="length"in Object(e)&&e.length;return w(t)&&(t>=0&&(t-1 in e||e instanceof Array)||"function"==typeof e.item)}function i(e,t,r){var o,a;if(e)if(S(e))for(o in e)"prototype"==o||"length"==o||"name"==o||e.hasOwnProperty&&!e.hasOwnProperty(o)||t.call(r,e[o],o,e);else if(oi(e)||n(e)){var s="object"!=typeof e;for(o=0,a=e.length;a>o;o++)(s||o in e)&&t.call(r,e[o],o,e)}else if(e.forEach&&e.forEach!==i)e.forEach(t,r,e);else if($(e))for(o in e)t.call(r,e[o],o,e);else if("function"==typeof e.hasOwnProperty)for(o in e)e.hasOwnProperty(o)&&t.call(r,e[o],o,e);else for(o in e)Xn.call(e,o)&&t.call(r,e[o],o,e);return e}function r(e,t,n){for(var i=Object.keys(e).sort(),r=0;r<i.length;r++)t.call(n,e[i[r]],i[r]);return i}function o(e){return function(t,n){e(n,t)}}function a(){return++ri}function s(e,t,n){for(var i=e.$$hashKey,r=0,o=t.length;o>r;++r){var a=t[r];if(b(a)||S(a))for(var l=Object.keys(a),u=0,c=l.length;c>u;u++){var p=l[u],d=a[p];n&&b(d)?x(d)?e[p]=new Date(d.valueOf()):C(d)?e[p]=new RegExp(d):d.nodeName?e[p]=d.cloneNode(!0):D(d)?e[p]=d.clone():(b(e[p])||(e[p]=oi(d)?[]:{}),s(e[p],[d],!0)):e[p]=d}}return i?e.$$hashKey=i:delete e.$$hashKey,e}function l(e){return s(e,Jn.call(arguments,1),!1)}function u(e){return s(e,Jn.call(arguments,1),!0)}function c(e){return parseInt(e,10)}function p(e,t){return l(Object.create(e),t)}function d(){}function f(e){return e}function h(e){return function(){return e}}function m(e){return S(e.toString)&&e.toString!==ei}function g(e){return"undefined"==typeof e}function v(e){return"undefined"!=typeof e}function b(e){return null!==e&&"object"==typeof e}function $(e){return null!==e&&"object"==typeof e&&!ti(e)}function y(e){return"string"==typeof e}function w(e){return"number"==typeof e}function x(e){return"[object Date]"===ei.call(e)}function S(e){return"function"==typeof e}function C(e){return"[object RegExp]"===ei.call(e)}function k(e){return e&&e.window===e}function E(e){return e&&e.$evalAsync&&e.$watch}function T(e){return"boolean"==typeof e}function P(e){return e&&w(e.length)&&ai.test(ei.call(e))}function D(e){return!(!e||!(e.nodeName||e.prop&&e.attr&&e.find))}function A(e){var t={};e=e.split(",");var n;for(n=0;n<e.length;n++)t[e[n]]=!0;return t}function M(e){return Yn(e.nodeName||e[0]&&e[0].nodeName)}function O(e,t){var n=e.indexOf(t);return n>=0&&e.splice(n,1),n}function R(e,t){function n(e,t){var n,i=t.$$hashKey;if(oi(e)){n=0;for(var o=e.length;o>n;n++)t.push(r(e[n]))}else if($(e))for(n in e)t[n]=r(e[n]);else if(e&&"function"==typeof e.hasOwnProperty)for(n in e)e.hasOwnProperty(n)&&(t[n]=r(e[n]));else for(n in e)Xn.call(e,n)&&(t[n]=r(e[n]));return i?t.$$hashKey=i:delete t.$$hashKey,t}function r(e){if(!b(e))return e;var t=a.indexOf(e);if(-1!==t)return s[t];if(k(e)||E(e))throw ni("cpws");var t=!1,i=o(e);return void 0===i&&(i=oi(e)?[]:Object.create(ti(e)),t=!0),a.push(e),s.push(i),t?n(e,i):i}function o(e){switch(ei.call(e)){case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Float32Array]":case"[object Float64Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return new e.constructor(r(e.buffer));case"[object ArrayBuffer]":if(!e.slice){var t=new ArrayBuffer(e.byteLength);return new Uint8Array(t).set(new Uint8Array(e)),t}return e.slice(0);case"[object Boolean]":case"[object Number]":case"[object String]":case"[object Date]":return new e.constructor(e.valueOf());case"[object RegExp]":return t=new RegExp(e.source,e.toString().match(/[^\/]*$/)[0]),t.lastIndex=e.lastIndex,t;case"[object Blob]":return new e.constructor([e],{type:e.type})}return S(e.cloneNode)?e.cloneNode(!0):void 0}var a=[],s=[];if(t){if(P(t)||"[object ArrayBuffer]"===ei.call(t))throw ni("cpta");if(e===t)throw ni("cpi");return oi(t)?t.length=0:i(t,function(e,n){"$$hashKey"!==n&&delete t[n]}),a.push(e),s.push(t),n(e,t)}return r(e)}function I(e,t){if(oi(e)){t=t||[];for(var n=0,i=e.length;i>n;n++)t[n]=e[n]}else if(b(e))for(n in t=t||{},e)"$"===n.charAt(0)&&"$"===n.charAt(1)||(t[n]=e[n]);return t||e}function N(e,t){if(e===t)return!0;if(null===e||null===t)return!1;if(e!==e&&t!==t)return!0;var n,i=typeof e;if(i==typeof t&&"object"==i){if(!oi(e)){if(x(e))return x(t)?N(e.getTime(),t.getTime()):!1;if(C(e))return C(t)?e.toString()==t.toString():!1;if(E(e)||E(t)||k(e)||k(t)||oi(t)||x(t)||C(t))return!1;i=se();for(n in e)if("$"!==n.charAt(0)&&!S(e[n])){if(!N(e[n],t[n]))return!1;i[n]=!0}for(n in t)if(!(n in i)&&"$"!==n.charAt(0)&&v(t[n])&&!S(t[n]))return!1;return!0}if(!oi(t))return!1;if((i=e.length)==t.length){for(n=0;i>n;n++)if(!N(e[n],t[n]))return!1;return!0}}return!1}function L(e,t,n){return e.concat(Jn.call(t,n))}function U(e,t){var n=2<arguments.length?Jn.call(arguments,2):[];return!S(t)||t instanceof RegExp?t:n.length?function(){return arguments.length?t.apply(e,L(n,arguments,0)):t.apply(e,n)}:function(){return arguments.length?t.apply(e,arguments):t.call(e)}}function F(t,n){var i=n;return"string"==typeof t&&"$"===t.charAt(0)&&"$"===t.charAt(1)?i=void 0:k(n)?i="$WINDOW":n&&e.document===n?i="$DOCUMENT":E(n)&&(i="$SCOPE"),i}function j(e,t){return g(e)?void 0:(w(t)||(t=t?2:null),JSON.stringify(e,F,t))}function _(e){return y(e)?JSON.parse(e):e}function q(e,t){e=e.replace(pi,"");var n=Date.parse("Jan 01, 1970 00:00:00 "+e)/6e4;return isNaN(n)?t:n}function H(e,t,n){n=n?-1:1;var i=e.getTimezoneOffset();return t=q(t,i),n*=t-i,e=new Date(e.getTime()),e.setMinutes(e.getMinutes()+n),e}function z(e){e=Vn(e).clone();try{e.empty()}catch(t){}var n=Vn("<div>").append(e).html();try{return e[0].nodeType===mi?Yn(n):n.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(e,t){return"<"+Yn(t)})}catch(i){return Yn(n)}}function V(e){try{return decodeURIComponent(e)}catch(t){}}function B(e){var t={};return i((e||"").split("&"),function(e){var n,i,r;e&&(i=e=e.replace(/\+/g,"%20"),n=e.indexOf("="),-1!==n&&(i=e.substring(0,n),r=e.substring(n+1)),i=V(i),v(i)&&(r=v(r)?V(r):!0,Xn.call(t,i)?oi(t[i])?t[i].push(r):t[i]=[t[i],r]:t[i]=r))}),t}function W(e){var t=[];return i(e,function(e,n){oi(e)?i(e,function(e){t.push(X(n,!0)+(!0===e?"":"="+X(e,!0)))}):t.push(X(n,!0)+(!0===e?"":"="+X(e,!0)))}),t.length?t.join("&"):""}function G(e){return X(e,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function X(e,t){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,t?"%20":"+")}function Y(e,t){var n,i,r=di.length;for(i=0;r>i;++i)if(n=di[i]+t,y(n=e.getAttribute(n)))return n;return null}function K(e,t){var n,r,o={};i(di,function(t){t+="app",!n&&e.hasAttribute&&e.hasAttribute(t)&&(n=e,r=e.getAttribute(t))}),i(di,function(t){t+="app";var i;!n&&(i=e.querySelector("["+t.replace(":","\\:")+"]"))&&(n=i,r=i.getAttribute(t))}),n&&(o.strictDi=null!==Y(n,"strict-di"),t(n,r?[r]:[],o))}function J(t,n,r){b(r)||(r={}),r=l({strictDi:!1},r);var o=function(){if(t=Vn(t),t.injector()){var i=t[0]===e.document?"document":z(t);throw ni("btstrpd",i.replace(/</,"&lt;").replace(/>/,"&gt;"))}return n=n||[],n.unshift(["$provide",function(e){e.value("$rootElement",t)}]),r.debugInfoEnabled&&n.push(["$compileProvider",function(e){e.debugInfoEnabled(!0)}]),n.unshift("ng"),i=je(n,r.strictDi),i.invoke(["$rootScope","$rootElement","$compile","$injector",function(e,t,n,i){e.$apply(function(){t.data("$injector",i),n(t)(e)})}]),i},a=/^NG_ENABLE_DEBUG_INFO!/,s=/^NG_DEFER_BOOTSTRAP!/;return e&&a.test(e.name)&&(r.debugInfoEnabled=!0,e.name=e.name.replace(a,"")),e&&!s.test(e.name)?o():(e.name=e.name.replace(s,""),ii.resumeBootstrap=function(e){return i(e,function(e){n.push(e)}),o()},void(S(ii.resumeDeferredBootstrap)&&ii.resumeDeferredBootstrap()))}function Q(){e.name="NG_ENABLE_DEBUG_INFO!"+e.name,e.location.reload()}function Z(e){if(e=ii.element(e).injector(),!e)throw ni("test");return e.get("$$testability")}function ee(e,t){return t=t||"_",e.replace(fi,function(e,n){return(n?t:"")+e.toLowerCase()})}function te(){var t;if(!hi){var n=ci();(Bn=g(n)?e.jQuery:n?e[n]:void 0)&&Bn.fn.on?(Vn=Bn,l(Bn.fn,{scope:Di.scope,isolateScope:Di.isolateScope,controller:Di.controller,injector:Di.injector,inheritedData:Di.inheritedData}),t=Bn.cleanData,Bn.cleanData=function(e){for(var n,i,r=0;null!=(i=e[r]);r++)(n=Bn._data(i,"events"))&&n.$destroy&&Bn(i).triggerHandler("$destroy");t(e)}):Vn=he,ii.element=Vn,hi=!0}}function ne(e,t,n){if(!e)throw ni("areq",t||"?",n||"required");return e}function ie(e,t,n){return n&&oi(e)&&(e=e[e.length-1]),ne(S(e),t,"not a function, got "+(e&&"object"==typeof e?e.constructor.name||"Object":typeof e)),e}function re(e,t){if("hasOwnProperty"===e)throw ni("badname",t)}function oe(e,t,n){if(!t)return e;t=t.split(".");for(var i,r=e,o=t.length,a=0;o>a;a++)i=t[a],e&&(e=(r=e)[i]);return!n&&S(e)?U(r,e):e}function ae(e){for(var t,n=e[0],i=e[e.length-1],r=1;n!==i&&(n=n.nextSibling);r++)(t||e[r]!==n)&&(t||(t=Vn(Jn.call(e,0,r))),t.push(n));return t||e}function se(){return Object.create(null)}function le(e){function n(e,t,n){return e[t]||(e[t]=n())}var i=t("$injector"),r=t("ng");return e=n(e,"angular",Object),e.$$minErr=e.$$minErr||t,n(e,"module",function(){var e={};return function(t,o,a){if("hasOwnProperty"===t)throw r("badname","module");return o&&e.hasOwnProperty(t)&&(e[t]=null),n(e,t,function(){function e(e,t,n,i){return i||(i=r),function(){return i[n||"push"]([e,t,arguments]),c}}function n(e,n){return function(i,o){return o&&S(o)&&(o.$$moduleName=t),r.push([e,n,arguments]),c}}if(!o)throw i("nomod",t);var r=[],s=[],l=[],u=e("$injector","invoke","push",s),c={_invokeQueue:r,_configBlocks:s,_runBlocks:l,requires:o,name:t,provider:n("$provide","provider"),factory:n("$provide","factory"),service:n("$provide","service"),value:e("$provide","value"),constant:e("$provide","constant","unshift"),decorator:n("$provide","decorator"),animation:n("$animateProvider","register"),filter:n("$filterProvider","register"),controller:n("$controllerProvider","register"),directive:n("$compileProvider","directive"),component:n("$compileProvider","component"),config:u,run:function(e){return l.push(e),this}};return a&&u(a),c})}})}function ue(n){l(n,{bootstrap:J,copy:R,extend:l,merge:u,equals:N,element:Vn,forEach:i,injector:je,noop:d,bind:U,toJson:j,fromJson:_,identity:f,isUndefined:g,isDefined:v,isString:y,isFunction:S,isObject:b,isNumber:w,isElement:D,isArray:oi,version:gi,isDate:x,lowercase:Yn,uppercase:Kn,callbacks:{counter:0},getTestability:Z,$$minErr:t,$$csp:ui,reloadWithDebugInfo:Q}),(Wn=le(e))("ng",["ngLocale"],["$provide",function(e){e.provider({$$sanitizeUri:Jt}),e.provider("$compile",Xe).directive({a:Ir,input:Jr,textarea:Jr,form:Fr,script:qo,select:Vo,style:Wo,option:Bo,ngBind:eo,ngBindHtml:no,ngBindTemplate:to,ngClass:ro,ngClassEven:ao,ngClassOdd:oo,ngCloak:so,ngController:lo,ngForm:jr,ngHide:Io,ngIf:po,ngInclude:fo,ngInit:mo,ngNonBindable:To,ngPluralize:Mo,ngRepeat:Oo,ngShow:Ro,ngStyle:No,ngSwitch:Lo,ngSwitchWhen:Uo,ngSwitchDefault:Fo,ngOptions:Ao,ngTransclude:_o,ngModel:Co,ngList:go,ngChange:io,pattern:Xo,ngPattern:Xo,required:Go,ngRequired:Go,minlength:Ko,ngMinlength:Ko,maxlength:Yo,ngMaxlength:Yo,ngValue:Zr,ngModelOptions:Eo}).directive({ngInclude:ho}).directive(Nr).directive(uo),e.provider({$anchorScroll:_e,$animate:zi,$animateCss:Wi,$$animateJs:qi,$$animateQueue:Hi,$$AnimateRunner:Bi,$$animateAsyncRun:Vi,$browser:Be,$cacheFactory:We,$controller:et,$document:tt,$exceptionHandler:nt,$filter:dn,$$forceReflow:Qi,$interpolate:ht,$interval:mt,$http:ct,$httpParamSerializer:rt,$httpParamSerializerJQLike:ot,$httpBackend:dt,$xhrFactory:pt,$location:Tt,$log:Pt,$parse:Bt,$rootScope:Kt,$q:Wt,$$q:Gt,$sce:tn,$sceDelegate:en,$sniffer:nn,$templateCache:Ge,$templateRequest:rn,$$testability:on,$timeout:an,$window:un,$$rAF:Yt,$$jqLite:Ie,$$HashMap:Ri,$$cookieReader:pn})}])}function ce(e){return e.replace($i,function(e,t,n,i){return i?n.toUpperCase():n}).replace(yi,"Moz$1")}function pe(e){return e=e.nodeType,1===e||!e||9===e}function de(e,t){var n,r,o=t.createDocumentFragment(),a=[];if(Ci.test(e)){for(n=n||o.appendChild(t.createElement("div")),r=(ki.exec(e)||["",""])[1].toLowerCase(),r=Ti[r]||Ti._default,n.innerHTML=r[1]+e.replace(Ei,"<$1></$2>")+r[2],r=r[0];r--;)n=n.lastChild;a=L(a,n.childNodes),n=o.firstChild,n.textContent=""}else a.push(t.createTextNode(e));return o.textContent="",o.innerHTML="",i(a,function(e){o.appendChild(e)}),o}function fe(e,t){var n=e.parentNode;n&&n.replaceChild(t,e),t.appendChild(e)}function he(t){if(t instanceof he)return t;var n;if(y(t)&&(t=si(t),n=!0),!(this instanceof he)){if(n&&"<"!=t.charAt(0))throw xi("nosel");return new he(t)}if(n){n=e.document;var i;t=(i=Si.exec(t))?[n.createElement(i[1])]:(i=de(t,n))?i.childNodes:[]}Ce(this,t)}function me(e){return e.cloneNode(!0)}function ge(e,t){if(t||be(e),e.querySelectorAll)for(var n=e.querySelectorAll("*"),i=0,r=n.length;r>i;i++)be(n[i])}function ve(e,t,n,r){if(v(r))throw xi("offargs");var o=(r=$e(e))&&r.events,a=r&&r.handle;if(a)if(t){var s=function(t){var i=o[t];v(n)&&O(i||[],n),v(n)&&i&&0<i.length||(e.removeEventListener(t,a,!1),delete o[t])};i(t.split(" "),function(e){s(e),wi[e]&&s(wi[e])})}else for(t in o)"$destroy"!==t&&e.removeEventListener(t,a,!1),delete o[t]}function be(e,t){var n=e.ng339,i=n&&vi[n];i&&(t?delete i.data[t]:(i.handle&&(i.events.$destroy&&i.handle({},"$destroy"),ve(e)),delete vi[n],e.ng339=void 0))}function $e(e,t){var n=e.ng339,n=n&&vi[n];return t&&!n&&(e.ng339=n=++bi,n=vi[n]={events:{},data:{},handle:void 0}),n}function ye(e,t,n){if(pe(e)){var i=v(n),r=!i&&t&&!b(t),o=!t;if(e=(e=$e(e,!r))&&e.data,i)e[t]=n;else{if(o)return e;if(r)return e&&e[t];l(e,t)}}}function we(e,t){return e.getAttribute?-1<(" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+t+" "):!1}function xe(e,t){t&&e.setAttribute&&i(t.split(" "),function(t){e.setAttribute("class",si((" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+si(t)+" "," ")))})}function Se(e,t){if(t&&e.setAttribute){var n=(" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");i(t.split(" "),function(e){e=si(e),-1===n.indexOf(" "+e+" ")&&(n+=e+" ")}),e.setAttribute("class",si(n))}}function Ce(e,t){if(t)if(t.nodeType)e[e.length++]=t;else{var n=t.length;if("number"==typeof n&&t.window!==t){if(n)for(var i=0;n>i;i++)e[e.length++]=t[i]}else e[e.length++]=t}}function ke(e,t){return Ee(e,"$"+(t||"ngController")+"Controller")}function Ee(e,t,n){for(9==e.nodeType&&(e=e.documentElement),t=oi(t)?t:[t];e;){for(var i=0,r=t.length;r>i;i++)if(v(n=Vn.data(e,t[i])))return n;e=e.parentNode||11===e.nodeType&&e.host}}function Te(e){for(ge(e,!0);e.firstChild;)e.removeChild(e.firstChild)}function Pe(e,t){t||ge(e);var n=e.parentNode;n&&n.removeChild(e)}function De(t,n){n=n||e,"complete"===n.document.readyState?n.setTimeout(t):Vn(n).on("load",t)}function Ae(e,t){var n=Ai[t.toLowerCase()];return n&&Mi[M(e)]&&n}function Me(e,t){var n=function(n,i){n.isDefaultPrevented=function(){return n.defaultPrevented};var r=t[i||n.type],o=r?r.length:0;if(o){if(g(n.immediatePropagationStopped)){var a=n.stopImmediatePropagation;n.stopImmediatePropagation=function(){n.immediatePropagationStopped=!0,n.stopPropagation&&n.stopPropagation(),a&&a.call(n)}}n.isImmediatePropagationStopped=function(){return!0===n.immediatePropagationStopped};var s=r.specialHandlerWrapper||Oe;o>1&&(r=I(r));for(var l=0;o>l;l++)n.isImmediatePropagationStopped()||s(e,n,r[l])}};return n.elem=e,n}function Oe(e,t,n){n.call(e,t)}function Re(e,t,n){var i=t.relatedTarget;i&&(i===e||Pi.call(e,i))||n.call(e,t)}function Ie(){this.$get=function(){return l(he,{hasClass:function(e,t){return e.attr&&(e=e[0]),we(e,t)},addClass:function(e,t){return e.attr&&(e=e[0]),Se(e,t)},removeClass:function(e,t){return e.attr&&(e=e[0]),xe(e,t)}})}}function Ne(e,t){var n=e&&e.$$hashKey;return n?("function"==typeof n&&(n=e.$$hashKey()),n):(n=typeof e,n="function"==n||"object"==n&&null!==e?e.$$hashKey=n+":"+(t||a)():n+":"+e)}function Le(e,t){if(t){var n=0;this.nextUid=function(){return++n}}i(e,this.put,this)}function Ue(e){return e=(Function.prototype.toString.call(e)+" ").replace(Fi,""),e.match(Ii)||e.match(Ni)}function Fe(e){return(e=Ue(e))?"function("+(e[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function je(e,t){function n(e){return function(t,n){return b(t)?void i(t,o(e)):e(t,n)}}function r(e,t){if(re(e,"service"),(S(t)||oi(t))&&(t=m.instantiate(t)),!t.$get)throw ji("pget",e);return f[e+"Provider"]=t}function a(e,t){return function(){var n=w.invoke(t,this);if(g(n))throw ji("undef",e);return n}}function s(e,t,n){return r(e,{$get:!1!==n?a(e,t):t})}function l(e){ne(g(e)||oi(e),"modulesToLoad","not an array");var t,n=[];return i(e,function(e){function i(e){var t,n;for(t=0,n=e.length;n>t;t++){var i=e[t],r=m.get(i[0]);r[i[1]].apply(r,i[2])}}if(!d.get(e)){d.put(e,!0);try{y(e)?(t=Wn(e),n=n.concat(l(t.requires)).concat(t._runBlocks),i(t._invokeQueue),i(t._configBlocks)):S(e)?n.push(m.invoke(e)):oi(e)?n.push(m.invoke(e)):ie(e,"module")}catch(r){throw oi(e)&&(e=e[e.length-1]),r.message&&r.stack&&-1==r.stack.indexOf(r.message)&&(r=r.message+"\n"+r.stack),ji("modulerr",e,r.stack||r.message||r)}}}),n}function u(e,n){function i(t,i){if(e.hasOwnProperty(t)){if(e[t]===c)throw ji("cdep",t+" <- "+p.join(" <- "));return e[t]}try{return p.unshift(t),e[t]=c,e[t]=n(t,i)}catch(r){throw e[t]===c&&delete e[t],r}finally{p.shift()}}function r(e,n,r){var o=[];e=je.$$annotate(e,t,r);for(var a=0,s=e.length;s>a;a++){var l=e[a];if("string"!=typeof l)throw ji("itkn",l);o.push(n&&n.hasOwnProperty(l)?n[l]:i(l,r))}return o}return{invoke:function(e,t,n,i){return"string"==typeof n&&(i=n,n=null),n=r(e,n,i),oi(e)&&(e=e[e.length-1]),i=11>=zn?!1:"function"==typeof e&&/^(?:class\s|constructor\()/.test(Function.prototype.toString.call(e)+" "),i?(n.unshift(null),new(Function.prototype.bind.apply(e,n))):e.apply(t,n)},instantiate:function(e,t,n){var i=oi(e)?e[e.length-1]:e;return e=r(e,t,n),e.unshift(null),new(Function.prototype.bind.apply(i,e))},get:i,annotate:je.$$annotate,has:function(t){return f.hasOwnProperty(t+"Provider")||e.hasOwnProperty(t)}}}t=!0===t;var c={},p=[],d=new Le([],!0),f={$provide:{provider:n(r),factory:n(s),service:n(function(e,t){return s(e,["$injector",function(e){return e.instantiate(t)}])}),value:n(function(e,t){return s(e,h(t),!1)}),constant:n(function(e,t){re(e,"constant"),f[e]=t,v[e]=t}),decorator:function(e,t){var n=m.get(e+"Provider"),i=n.$get;n.$get=function(){var e=w.invoke(i,n);return w.invoke(t,null,{$delegate:e})}}}},m=f.$injector=u(f,function(e,t){throw ii.isString(t)&&p.push(t),ji("unpr",p.join(" <- "))}),v={},$=u(v,function(e,t){var n=m.get(e+"Provider",t);return w.invoke(n.$get,n,void 0,e)}),w=$;f.$injectorProvider={$get:h($)};var x=l(e),w=$.get("$injector");return w.strictDi=t,i(x,function(e){e&&w.invoke(e)}),w}function _e(){var e=!0;this.disableAutoScrolling=function(){e=!1},this.$get=["$window","$location","$rootScope",function(t,n,i){function r(e){var t=null;return Array.prototype.some.call(e,function(e){return"a"===M(e)?(t=e,!0):void 0}),t}function o(e){if(e){e.scrollIntoView();var n;n=a.yOffset,S(n)?n=n():D(n)?(n=n[0],n="fixed"!==t.getComputedStyle(n).position?0:n.getBoundingClientRect().bottom):w(n)||(n=0),n&&(e=e.getBoundingClientRect().top,t.scrollBy(0,e-n))}else t.scrollTo(0,0)}function a(e){e=y(e)?e:n.hash();var t;e?(t=s.getElementById(e))?o(t):(t=r(s.getElementsByName(e)))?o(t):"top"===e&&o(null):o(null)}var s=t.document;return e&&i.$watch(function(){return n.hash()},function(e,t){e===t&&""===e||De(function(){i.$evalAsync(a)})}),a}]}function qe(e,t){return e||t?e?t?(oi(e)&&(e=e.join(" ")),oi(t)&&(t=t.join(" ")),e+" "+t):e:t:""}function He(e){y(e)&&(e=e.split(" "));var t=se();return i(e,function(e){e.length&&(t[e]=!0)}),t}function ze(e){return b(e)?e:{}}function Ve(e,t,n,r){function o(e){try{e.apply(null,Jn.call(arguments,1))}finally{if(v--,0===v)for(;b.length;)try{b.pop()()}catch(t){n.error(t)}}}function a(){S=null,s(),l()}function s(){$=C(),$=g($)?null:$,N($,T)&&($=T),T=$}function l(){w===u.url()&&y===$||(w=u.url(),y=$,i(k,function(e){e(u.url(),$)}))}var u=this,c=e.location,p=e.history,f=e.setTimeout,h=e.clearTimeout,m={};u.isMock=!1;var v=0,b=[];u.$$completeOutstandingRequest=o,u.$$incOutstandingRequestCount=function(){v++},u.notifyWhenNoOutstandingRequests=function(e){0===v?e():b.push(e)};var $,y,w=c.href,x=t.find("base"),S=null,C=r.history?function(){try{return p.state}catch(e){}}:d;s(),y=$,u.url=function(t,n,i){if(g(i)&&(i=null),c!==e.location&&(c=e.location),p!==e.history&&(p=e.history),t){var o=y===i;if(w===t&&(!r.history||o))return u;var a=w&&yt(w)===yt(t);return w=t,y=i,!r.history||a&&o?(a||(S=t),n?c.replace(t):a?(n=c,i=t.indexOf("#"),i=-1===i?"":t.substr(i),n.hash=i):c.href=t,c.href!==t&&(S=t)):(p[n?"replaceState":"pushState"](i,"",t),s(),y=$),S&&(S=t),u}return S||c.href.replace(/%27/g,"'")},u.state=function(){return $};var k=[],E=!1,T=null;u.onUrlChange=function(t){return E||(r.history&&Vn(e).on("popstate",a),Vn(e).on("hashchange",a),E=!0),k.push(t),t},u.$$applicationDestroyed=function(){Vn(e).off("hashchange popstate",a)},u.$$checkUrlChange=l,u.baseHref=function(){var e=x.attr("href");return e?e.replace(/^(https?\:)?\/\/[^\/]*/,""):""},u.defer=function(e,t){var n;return v++,n=f(function(){delete m[n],o(e)},t||0),m[n]=!0,n},u.defer.cancel=function(e){return m[e]?(delete m[e],h(e),o(d),!0):!1}}function Be(){this.$get=["$window","$log","$sniffer","$document",function(e,t,n,i){return new Ve(e,i,t,n)}]}function We(){this.$get=function(){function e(e,i){function r(e){e!=d&&(f?f==e&&(f=e.n):f=e,o(e.n,e.p),o(e,d),d=e,d.n=null)}function o(e,t){e!=t&&(e&&(e.p=t),t&&(t.n=e))}if(e in n)throw t("$cacheFactory")("iid",e);var a=0,s=l({},i,{id:e}),u=se(),c=i&&i.capacity||Number.MAX_VALUE,p=se(),d=null,f=null;return n[e]={put:function(e,t){if(!g(t)){if(c<Number.MAX_VALUE){var n=p[e]||(p[e]={key:e});r(n)}return e in u||a++,u[e]=t,a>c&&this.remove(f.key),t}},get:function(e){if(c<Number.MAX_VALUE){var t=p[e];if(!t)return;r(t)}return u[e]},remove:function(e){if(c<Number.MAX_VALUE){var t=p[e];if(!t)return;t==d&&(d=t.p),t==f&&(f=t.n),o(t.n,t.p),delete p[e]}e in u&&(delete u[e],a--)},removeAll:function(){u=se(),a=0,p=se(),d=f=null},destroy:function(){p=s=u=null,delete n[e]},info:function(){return l({},s,{size:a})}}}var n={};return e.info=function(){var e={};return i(n,function(t,n){e[n]=t.info()}),e},e.get=function(e){return n[e]},e}}function Ge(){this.$get=["$cacheFactory",function(e){return e("templates")}]}function Xe(t,n){function r(e,t,n){var r=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,o=se();return i(e,function(e,i){if(e in C)o[i]=C[e];else{var a=e.match(r);if(!a)throw Gi("iscp",t,i,e,n?"controller bindings definition":"isolate scope definition");o[i]={mode:a[1][0],collection:"*"===a[2],optional:"?"===a[3],attrName:a[4]||i},a[4]&&(C[e]=o[i])}}),o}function a(e){var t=e.charAt(0);if(!t||t!==Yn(t))throw Gi("baddir",e);if(e!==e.trim())throw Gi("baddir",e)}function s(e){var t=e.require||e.controller&&e.name;return!oi(t)&&b(t)&&i(t,function(e,n){var i=e.match(w);e.substring(i[0].length)||(t[n]=i[0]+n)}),t}var u={},c=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,m=/(([\w\-]+)(?:\:([^;]+))?;?)/,$=A("ngSrc,ngSrcset,src,srcset"),w=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,x=/^(on[a-z]+|formaction)$/,C=se();this.directive=function D(e,n){return re(e,"directive"),y(e)?(a(e),ne(n,"directiveFactory"),u.hasOwnProperty(e)||(u[e]=[],t.factory(e+"Directive",["$injector","$exceptionHandler",function(t,n){var r=[];return i(u[e],function(i,o){try{var a=t.invoke(i);S(a)?a={compile:h(a)}:!a.compile&&a.link&&(a.compile=h(a.link)),a.priority=a.priority||0,a.index=o,a.name=a.name||e,a.require=s(a),a.restrict=a.restrict||"EA",a.$$moduleName=i.$$moduleName,r.push(a)}catch(l){n(l)}}),r}])),u[e].push(n)):i(e,o(D)),this},this.component=function(e,t){function n(e){function n(t){return S(t)||oi(t)?function(n,i){return e.invoke(t,this,{$element:n,$attrs:i})}:t}var o=t.template||t.templateUrl?t.template:"",a={controller:r,controllerAs:Ze(t.controller)||t.controllerAs||"$ctrl",template:n(o),templateUrl:n(t.templateUrl),transclude:t.transclude,scope:{},bindToController:t.bindings||{},restrict:"E",require:t.require};return i(t,function(e,t){"$"===t.charAt(0)&&(a[t]=e)}),a}var r=t.controller||function(){};return i(t,function(e,t){"$"===t.charAt(0)&&(n[t]=e,S(r)&&(r[t]=e))}),n.$inject=["$injector"],this.directive(e,n)},this.aHrefSanitizationWhitelist=function(e){return v(e)?(n.aHrefSanitizationWhitelist(e),this):n.aHrefSanitizationWhitelist()},this.imgSrcSanitizationWhitelist=function(e){return v(e)?(n.imgSrcSanitizationWhitelist(e),this):n.imgSrcSanitizationWhitelist()};var k=!0;this.debugInfoEnabled=function(e){return v(e)?(k=e,this):k};var P=10;this.onChangesTtl=function(e){return arguments.length?(P=e,this):P},this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(t,n,o,a,s,h,C,D,A,R){function I(){try{if(!--ye)throw ve=void 0,Gi("infchng",P);C.$apply(function(){for(var e=0,t=ve.length;t>e;++e)ve[e]();ve=void 0})}finally{ye++}}function L(e,t){if(t){var n,i,r,o=Object.keys(t);for(n=0,i=o.length;i>n;n++)r=o[n],this[r]=t[r]}else this.$attr={};this.$$element=e}function F(e,t,n){$e.innerHTML="<span "+t+">",t=$e.firstChild.attributes;var i=t[0];t.removeNamedItem(i.name),i.value=n,e.attributes.setNamedItem(i)}function j(e,t){try{e.addClass(t)}catch(n){}}function _(t,n,i,r,o){t instanceof Vn||(t=Vn(t));for(var a=/\S+/,s=0,l=t.length;l>s;s++){var u=t[s];u.nodeType===mi&&u.nodeValue.match(a)&&fe(u,t[s]=e.document.createElement("span"))}var c=q(t,n,t,i,r,o);_.$$addScopeClass(t);var p=null;return function(e,n,i){ne(e,"scope"),o&&o.needsNewScope&&(e=e.$parent.$new()),i=i||{};var r=i.parentBoundTranscludeFn,a=i.transcludeControllers;if(i=i.futureParentElement,r&&r.$$boundTransclude&&(r=r.$$boundTransclude),p||(p=(i=i&&i[0])&&"foreignobject"!==M(i)&&ei.call(i).match(/SVG/)?"svg":"html"),i="html"!==p?Vn(le(p,Vn("<div>").append(t).html())):n?Di.clone.call(t):t,a)for(var s in a)i.data("$"+s+"Controller",a[s].instance);return _.$$addScopeInfo(i,e),n&&n(i,e),c&&c(e,i,i,r),i}}function q(e,t,n,i,r,o){function a(e,n,i,r){var o,a,s,l,u,c,f;if(p)for(f=Array(n.length),l=0;l<d.length;l+=3)o=d[l],f[o]=n[o];else f=n;for(l=0,u=d.length;u>l;)a=f[d[l++]],n=d[l++],o=d[l++],n?(n.scope?(s=e.$new(),_.$$addScopeInfo(Vn(a),s)):s=e,c=n.transcludeOnThisElement?H(e,n.transclude,r):!n.templateOnThisElement&&r?r:!r&&t?H(e,t):null,
n(o,s,a,i,c)):o&&o(e,a.childNodes,void 0,r)}for(var s,l,u,c,p,d=[],f=0;f<e.length;f++)s=new L,l=V(e[f],[],s,0===f?i:void 0,r),(o=l.length?X(l,e[f],s,t,n,null,[],[],o):null)&&o.scope&&_.$$addScopeClass(s.$$element),s=o&&o.terminal||!(u=e[f].childNodes)||!u.length?null:q(u,o?(o.transcludeOnThisElement||!o.templateOnThisElement)&&o.transclude:t),(o||s)&&(d.push(f,o,s),c=!0,p=p||o),o=null;return c?a:null}function H(e,t,n){function i(i,r,o,a,s){return i||(i=e.$new(!1,s),i.$$transcluded=!0),t(i,r,{parentBoundTranscludeFn:n,transcludeControllers:o,futureParentElement:a})}var r,o=i.$$slots=se();for(r in t.$$slots)o[r]=t.$$slots[r]?H(e,t.$$slots[r],n):null;return i}function V(e,t,n,i,r){var o,a=n.$attr;switch(e.nodeType){case 1:Q(t,Ke(M(e)),"E",i,r);for(var s,l,u,p=e.attributes,d=0,f=p&&p.length;f>d;d++){var h=!1,g=!1;s=p[d],o=s.name,l=si(s.value),s=Ke(o),(u=Ce.test(s))&&(o=o.replace(Yi,"").substr(8).replace(/_(.)/g,function(e,t){return t.toUpperCase()})),(s=s.match(ke))&&Z(s[1])&&(h=o,g=o.substr(0,o.length-5)+"end",o=o.substr(0,o.length-6)),s=Ke(o.toLowerCase()),a[s]=o,!u&&n.hasOwnProperty(s)||(n[s]=l,Ae(e,s)&&(n[s]=!0)),ce(e,t,l,s,u),Q(t,s,"A",i,r,h,g)}if(e=e.className,b(e)&&(e=e.animVal),y(e)&&""!==e)for(;o=m.exec(e);)s=Ke(o[2]),Q(t,s,"C",i,r)&&(n[s]=si(o[3])),e=e.substr(o.index+o[0].length);break;case mi:if(11===zn)for(;e.parentNode&&e.nextSibling&&e.nextSibling.nodeType===mi;)e.nodeValue+=e.nextSibling.nodeValue,e.parentNode.removeChild(e.nextSibling);ae(t,e.nodeValue);break;case 8:try{(o=c.exec(e.nodeValue))&&(s=Ke(o[1]),Q(t,s,"M",i,r)&&(n[s]=si(o[2])))}catch(v){}}return t.sort(re),t}function B(e,t,n){var i=[],r=0;if(t&&e.hasAttribute&&e.hasAttribute(t)){do{if(!e)throw Gi("uterdir",t,n);1==e.nodeType&&(e.hasAttribute(t)&&r++,e.hasAttribute(n)&&r--),i.push(e),e=e.nextSibling}while(r>0)}else i.push(e);return Vn(i)}function W(e,t,n){return function(i,r,o,a,s){return r=B(r[0],t,n),e(i,r,o,a,s)}}function G(e,t,n,i,r,o){var a;return e?_(t,n,i,r,o):function(){return a||(a=_(t,n,i,r,o),t=n=o=null),a.apply(this,arguments)}}function X(e,t,n,r,a,s,u,c,p){function d(e,t,n,i){e&&(n&&(e=W(e,n,i)),e.require=h.require,e.directiveName=m,(k===h||h.$$isolateScope)&&(e=de(e,{isolateScope:!0})),u.push(e)),t&&(n&&(t=W(t,n,i)),t.require=h.require,t.directiveName=m,(k===h||h.$$isolateScope)&&(t=de(t,{isolateScope:!0})),c.push(t))}function f(e,r,o,a,s){function p(e,t,n,i){var r;if(E(e)||(i=n,n=t,t=e,e=void 0),O&&(r=$),n||(n=O?w.parent():w),!i)return s(e,t,r,n,A);var o=s.$$slots[i];if(o)return o(e,t,r,n,A);if(g(o))throw Gi("noslot",i,z(w))}var d,f,h,m,v,$,y,w;t===o?(a=n,w=n.$$element):(w=Vn(o),a=new L(w,n)),v=r,k?m=r.$new(!0):x&&(v=r.$parent),s&&(y=p,y.$$boundTransclude=s,y.isSlotFilled=function(e){return!!s.$$slots[e]}),C&&($=K(w,a,y,C,m,r,k)),k&&(_.$$addScopeInfo(w,m,!0,!(T&&(T===k||T===k.$$originalDirective))),_.$$addScopeClass(w,!0),m.$$isolateBindings=k.$$isolateBindings,f=ge(r,a,m,m.$$isolateBindings,k),f.removeWatches&&m.$on("$destroy",f.removeWatches));for(d in $){f=C[d],h=$[d];var P=f.$$bindings.bindToController;h.bindingInfo=h.identifier&&P?ge(v,a,h.instance,P,f):{};var D=h();D!==h.instance&&(h.instance=D,w.data("$"+f.name+"Controller",D),h.bindingInfo.removeWatches&&h.bindingInfo.removeWatches(),h.bindingInfo=ge(v,a,h.instance,P,f))}for(i(C,function(e,t){var n=e.require;e.bindToController&&!oi(n)&&b(n)&&l($[t].instance,Y(t,n,w,$))}),i($,function(e){var t=e.instance;S(t.$onChanges)&&t.$onChanges(e.bindingInfo.initialChanges),S(t.$onInit)&&t.$onInit(),S(t.$onDestroy)&&v.$on("$destroy",function(){t.$onDestroy()})}),d=0,f=u.length;f>d;d++)h=u[d],he(h,h.isolateScope?m:r,w,a,h.require&&Y(h.directiveName,h.require,w,$),y);var A=r;for(k&&(k.template||null===k.templateUrl)&&(A=m),e&&e(A,o.childNodes,void 0,s),d=c.length-1;d>=0;d--)h=c[d],he(h,h.isolateScope?m:r,w,a,h.require&&Y(h.directiveName,h.require,w,$),y);i($,function(e){e=e.instance,S(e.$postLink)&&e.$postLink()})}p=p||{};for(var h,m,v,$,y,w=-Number.MAX_VALUE,x=p.newScopeDirective,C=p.controllerDirectives,k=p.newIsolateScopeDirective,T=p.templateDirective,P=p.nonTlbTranscludeDirective,D=!1,A=!1,O=p.hasElementTranscludeDirective,R=n.$$element=Vn(t),I=r,N=!1,F=!1,j=0,q=e.length;q>j;j++){h=e[j];var H=h.$$start,X=h.$$end;if(H&&(R=B(t,H,X)),v=void 0,w>h.priority)break;if((y=h.scope)&&(h.templateUrl||(b(y)?(oe("new/isolated scope",k||x,h,R),k=h):oe("new/isolated scope",k,h,R)),x=x||h),m=h.name,!N&&(h.replace&&(h.templateUrl||h.template)||h.transclude&&!h.$$tlb)){for(y=j+1;N=e[y++];)if(N.transclude&&!N.$$tlb||N.replace&&(N.templateUrl||N.template)){F=!0;break}N=!0}if(!h.templateUrl&&h.controller&&(y=h.controller,C=C||se(),oe("'"+m+"' controller",C[m],h,R),C[m]=h),y=h.transclude)if(D=!0,h.$$tlb||(oe("transclusion",P,h,R),P=h),"element"==y)O=!0,w=h.priority,v=R,R=n.$$element=Vn(_.$$createComment(m,n[m])),t=R[0],pe(a,Jn.call(v,0),t),v[0].$$parentNode=v[0].parentNode,I=G(F,v,r,w,s&&s.name,{nonTlbTranscludeDirective:P});else{var Q=se();if(v=Vn(me(t)).contents(),b(y)){v=[];var Z=se(),ee=se();i(y,function(e,t){var n="?"===e.charAt(0);e=n?e.substring(1):e,Z[e]=t,Q[t]=null,ee[t]=n}),i(R.contents(),function(e){var t=Z[Ke(M(e))];t?(ee[t]=!0,Q[t]=Q[t]||[],Q[t].push(e)):v.push(e)}),i(ee,function(e,t){if(!e)throw Gi("reqslot",t)});for(var ne in Q)Q[ne]&&(Q[ne]=G(F,Q[ne],r))}R.empty(),I=G(F,v,r,void 0,void 0,{needsNewScope:h.$$isolateScope||h.$$newScope}),I.$$slots=Q}if(h.template)if(A=!0,oe("template",T,h,R),T=h,y=S(h.template)?h.template(R,n):h.template,y=Se(y),h.replace){if(s=h,v=Ci.test(y)?Qe(le(h.templateNamespace,si(y))):[],t=v[0],1!=v.length||1!==t.nodeType)throw Gi("tplrt",m,"");pe(a,R,t),q={$attr:{}},y=V(t,[],q);var re=e.splice(j+1,e.length-(j+1));(k||x)&&J(y,k,x),e=e.concat(y).concat(re),te(n,q),q=e.length}else R.html(y);if(h.templateUrl)A=!0,oe("template",T,h,R),T=h,h.replace&&(s=h),f=ie(e.splice(j,e.length-j),R,n,a,D&&I,u,c,{controllerDirectives:C,newScopeDirective:x!==h&&x,newIsolateScopeDirective:k,templateDirective:T,nonTlbTranscludeDirective:P}),q=e.length;else if(h.compile)try{$=h.compile(R,n,I);var ae=h.$$originalDirective||h;S($)?d(null,U(ae,$),H,X):$&&d(U(ae,$.pre),U(ae,$.post),H,X)}catch(ue){o(ue,z(R))}h.terminal&&(f.terminal=!0,w=Math.max(w,h.priority))}return f.scope=x&&!0===x.scope,f.transcludeOnThisElement=D,f.templateOnThisElement=A,f.transclude=I,p.hasElementTranscludeDirective=O,f}function Y(e,t,n,r){var o;if(y(t)){var a=t.match(w);t=t.substring(a[0].length);var s=a[1]||a[3],a="?"===a[2];if("^^"===s?n=n.parent():o=(o=r&&r[t])&&o.instance,!o){var l="$"+t+"Controller";o=s?n.inheritedData(l):n.data(l)}if(!o&&!a)throw Gi("ctreq",t,e)}else if(oi(t))for(o=[],s=0,a=t.length;a>s;s++)o[s]=Y(e,t[s],n,r);else b(t)&&(o={},i(t,function(t,i){o[i]=Y(e,t,n,r)}));return o||null}function K(e,t,n,i,r,o,a){var s,l=se();for(s in i){var u=i[s],c={$scope:u===a||u.$$isolateScope?r:o,$element:e,$attrs:t,$transclude:n},p=u.controller;"@"==p&&(p=t[u.name]),c=h(p,c,!0,u.controllerAs),l[u.name]=c,e.data("$"+u.name+"Controller",c.instance)}return l}function J(e,t,n){for(var i=0,r=e.length;r>i;i++)e[i]=p(e[i],{$$isolateScope:t,$$newScope:n})}function Q(e,n,i,a,s,l,c){if(n===s)return null;if(s=null,u.hasOwnProperty(n)){var d;n=t.get(n+"Directive");for(var f=0,h=n.length;h>f;f++)try{if(d=n[f],(g(a)||a>d.priority)&&-1!=d.restrict.indexOf(i)){if(l&&(d=p(d,{$$start:l,$$end:c})),!d.$$bindings){var m=d,v=d,$=d.name,y={isolateScope:null,bindToController:null};if(b(v.scope)&&(!0===v.bindToController?(y.bindToController=r(v.scope,$,!0),y.isolateScope={}):y.isolateScope=r(v.scope,$,!1)),b(v.bindToController)&&(y.bindToController=r(v.bindToController,$,!0)),b(y.bindToController)){var w=v.controller,x=v.controllerAs;if(!w)throw Gi("noctrl",$);if(!Ze(w,x))throw Gi("noident",$)}var S=m.$$bindings=y;b(S.isolateScope)&&(d.$$isolateBindings=S.isolateScope)}e.push(d),s=d}}catch(C){o(C)}}return s}function Z(e){if(u.hasOwnProperty(e))for(var n=t.get(e+"Directive"),i=0,r=n.length;r>i;i++)if(e=n[i],e.multiElement)return!0;return!1}function te(e,t){var n=t.$attr,r=e.$attr,o=e.$$element;i(e,function(i,r){"$"!=r.charAt(0)&&(t[r]&&t[r]!==i&&(i+=("style"===r?";":" ")+t[r]),e.$set(r,i,!0,n[r]))}),i(t,function(t,i){"class"==i?(j(o,t),e["class"]=(e["class"]?e["class"]+" ":"")+t):"style"==i?(o.attr("style",o.attr("style")+";"+t),e.style=(e.style?e.style+";":"")+t):"$"==i.charAt(0)||e.hasOwnProperty(i)||(e[i]=t,r[i]=n[i])})}function ie(e,t,n,r,o,s,l,u){var c,d,f=[],h=t[0],m=e.shift(),g=p(m,{templateUrl:null,transclude:null,replace:null,$$originalDirective:m}),v=S(m.templateUrl)?m.templateUrl(t,n):m.templateUrl,$=m.templateNamespace;return t.empty(),a(v).then(function(a){var p,y;if(a=Se(a),m.replace){if(a=Ci.test(a)?Qe(le($,si(a))):[],p=a[0],1!=a.length||1!==p.nodeType)throw Gi("tplrt",m.name,v);a={$attr:{}},pe(r,t,p);var w=V(p,[],a);b(m.scope)&&J(w,!0),e=w.concat(e),te(n,a)}else p=h,t.html(a);for(e.unshift(g),c=X(e,p,n,o,t,m,s,l,u),i(r,function(e,n){e==p&&(r[n]=t[0])}),d=q(t[0].childNodes,o);f.length;){a=f.shift(),y=f.shift();var x=f.shift(),S=f.shift(),w=t[0];if(!a.$$destroyed){if(y!==h){var C=y.className;u.hasElementTranscludeDirective&&m.replace||(w=me(p)),pe(x,Vn(y),w),j(Vn(w),C)}y=c.transcludeOnThisElement?H(a,c.transclude,S):S,c(d,a,w,r,y)}}f=null}),function(e,t,n,i,r){e=r,t.$$destroyed||(f?f.push(t,n,i,e):(c.transcludeOnThisElement&&(e=H(t,c.transclude,r)),c(d,t,n,i,e)))}}function re(e,t){var n=t.priority-e.priority;return 0!==n?n:e.name!==t.name?e.name<t.name?-1:1:e.index-t.index}function oe(e,t,n,i){function r(e){return e?" (module: "+e+")":""}if(t)throw Gi("multidir",t.name,r(t.$$moduleName),n.name,r(n.$$moduleName),e,z(i))}function ae(e,t){var i=n(t,!0);i&&e.push({priority:0,compile:function(e){e=e.parent();var t=!!e.length;return t&&_.$$addBindingClass(e),function(e,n){var r=n.parent();t||_.$$addBindingClass(r),_.$$addBindingInfo(r,i.expressions),e.$watch(i,function(e){n[0].nodeValue=e})}}})}function le(t,n){switch(t=Yn(t||"html")){case"svg":case"math":var i=e.document.createElement("div");return i.innerHTML="<"+t+">"+n+"</"+t+">",i.childNodes[0].childNodes;default:return n}}function ue(e,t){if("srcdoc"==t)return D.HTML;var n=M(e);return"xlinkHref"==t||"form"==n&&"action"==t||"img"!=n&&("src"==t||"ngSrc"==t)?D.RESOURCE_URL:void 0}function ce(e,t,i,r,o){var a=ue(e,r);o=$[r]||o;var s=n(i,!0,a,o);if(s){if("multiple"===r&&"select"===M(e))throw Gi("selmulti",z(e));t.push({priority:100,compile:function(){return{pre:function(e,t,l){if(t=l.$$observers||(l.$$observers=se()),x.test(r))throw Gi("nodomevents");var u=l[r];u!==i&&(s=u&&n(u,!0,a,o),i=u),s&&(l[r]=s(e),(t[r]||(t[r]=[])).$$inter=!0,(l.$$observers&&l.$$observers[r].$$scope||e).$watch(s,function(e,t){"class"===r&&e!=t?l.$updateClass(e,t):l.$set(r,e)}))}}}})}}function pe(t,n,i){var r,o,a=n[0],s=n.length,l=a.parentNode;if(t)for(r=0,o=t.length;o>r;r++)if(t[r]==a){t[r++]=i,o=r+s-1;for(var u=t.length;u>r;r++,o++)u>o?t[r]=t[o]:delete t[r];t.length-=s-1,t.context===a&&(t.context=i);break}for(l&&l.replaceChild(i,a),t=e.document.createDocumentFragment(),r=0;s>r;r++)t.appendChild(n[r]);for(Vn.hasData(a)&&(Vn.data(i,Vn.data(a)),Vn(a).off("$destroy")),Vn.cleanData(t.querySelectorAll("*")),r=1;s>r;r++)delete n[r];n[0]=i,n.length=1}function de(e,t){return l(function(){return e.apply(null,arguments)},e,t)}function he(e,t,n,i,r,a){try{e(t,n,i,r,a)}catch(s){o(s,z(n))}}function ge(e,t,r,o,a){function l(t,n,i){S(r.$onChanges)&&n!==i&&(ve||(e.$$postDigest(I),ve=[]),c||(c={},ve.push(u)),c[t]&&(i=c[t].previousValue),c[t]=new Ye(i,n))}function u(){r.$onChanges(c),c=void 0}var c,p=[],f={};return i(o,function(i,o){var u,c,h,m,g=i.attrName,v=i.optional;switch(i.mode){case"@":v||Xn.call(t,g)||(r[o]=t[g]=void 0),t.$observe(g,function(e){(y(e)||T(e))&&(l(o,e,r[o]),r[o]=e)}),t.$$observers[g].$$scope=e,u=t[g],y(u)?r[o]=n(u)(e):T(u)&&(r[o]=u),f[o]=new Ye(Xi,r[o]);break;case"=":if(!Xn.call(t,g)){if(v)break;t[g]=void 0}if(v&&!t[g])break;c=s(t[g]),m=c.literal?N:function(e,t){return e===t||e!==e&&t!==t},h=c.assign||function(){throw u=r[o]=c(e),Gi("nonassign",t[g],g,a.name)},u=r[o]=c(e),v=function(t){return m(t,r[o])||(m(t,u)?h(e,t=r[o]):r[o]=t),u=t},v.$stateful=!0,v=i.collection?e.$watchCollection(t[g],v):e.$watch(s(t[g],v),null,c.literal),p.push(v);break;case"<":if(!Xn.call(t,g)){if(v)break;t[g]=void 0}if(v&&!t[g])break;c=s(t[g]);var b=r[o]=c(e);f[o]=new Ye(Xi,r[o]),v=e.$watch(c,function(e,t){if(t===e){if(t===b)return;t=b}l(o,e,t),r[o]=e},c.literal),p.push(v);break;case"&":if(c=t.hasOwnProperty(g)?s(t[g]):d,c===d&&v)break;r[o]=function(t){return c(e,t)}}}),{initialChanges:f,removeWatches:p.length&&function(){for(var e=0,t=p.length;t>e;++e)p[e]()}}}var ve,be=/^\w/,$e=e.document.createElement("div"),ye=P;L.prototype={$normalize:Ke,$addClass:function(e){e&&0<e.length&&A.addClass(this.$$element,e)},$removeClass:function(e){e&&0<e.length&&A.removeClass(this.$$element,e)},$updateClass:function(e,t){var n=Je(e,t);n&&n.length&&A.addClass(this.$$element,n),(n=Je(t,e))&&n.length&&A.removeClass(this.$$element,n)},$set:function(e,t,n,r){var a=Ae(this.$$element[0],e),s=Oi[e],l=e;if(a?(this.$$element.prop(e,t),r=a):s&&(this[s]=t,l=s),this[e]=t,r?this.$attr[e]=r:(r=this.$attr[e])||(this.$attr[e]=r=ee(e,"-")),a=M(this.$$element),"a"===a&&("href"===e||"xlinkHref"===e)||"img"===a&&"src"===e)this[e]=t=R(t,"src"===e);else if("img"===a&&"srcset"===e&&v(t)){for(var a="",s=si(t),u=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,u=/\s/.test(s)?u:/(,)/,s=s.split(u),u=Math.floor(s.length/2),c=0;u>c;c++)var p=2*c,a=a+R(si(s[p]),!0),a=a+(" "+si(s[p+1]));s=si(s[2*c]).split(/\s/),a+=R(si(s[0]),!0),2===s.length&&(a+=" "+si(s[1])),this[e]=t=a}!1!==n&&(null===t||g(t)?this.$$element.removeAttr(r):be.test(r)?this.$$element.attr(r,t):F(this.$$element[0],r,t)),(e=this.$$observers)&&i(e[l],function(e){try{e(t)}catch(n){o(n)}})},$observe:function(e,t){var n=this,i=n.$$observers||(n.$$observers=se()),r=i[e]||(i[e]=[]);return r.push(t),C.$evalAsync(function(){r.$$inter||!n.hasOwnProperty(e)||g(n[e])||t(n[e])}),function(){O(r,t)}}};var we=n.startSymbol(),xe=n.endSymbol(),Se="{{"==we&&"}}"==xe?f:function(e){return e.replace(/\{\{/g,we).replace(/}}/g,xe)},Ce=/^ngAttr[A-Z]/,ke=/^(.+)Start$/;return _.$$addBindingInfo=k?function(e,t){var n=e.data("$binding")||[];oi(t)?n=n.concat(t):n.push(t),e.data("$binding",n)}:d,_.$$addBindingClass=k?function(e){j(e,"ng-binding")}:d,_.$$addScopeInfo=k?function(e,t,n,i){e.data(n?i?"$isolateScopeNoTemplate":"$isolateScope":"$scope",t)}:d,_.$$addScopeClass=k?function(e,t){j(e,t?"ng-isolate-scope":"ng-scope")}:d,_.$$createComment=function(t,n){var i="";return k&&(i=" "+(t||"")+": ",n&&(i+=n+" ")),e.document.createComment(i)},_}]}function Ye(e,t){this.previousValue=e,this.currentValue=t}function Ke(e){return ce(e.replace(Yi,""))}function Je(e,t){var n="",i=e.split(/\s+/),r=t.split(/\s+/),o=0;e:for(;o<i.length;o++){for(var a=i[o],s=0;s<r.length;s++)if(a==r[s])continue e;n+=(0<n.length?" ":"")+a}return n}function Qe(e){e=Vn(e);var t=e.length;if(1>=t)return e;for(;t--;)8===e[t].nodeType&&Qn.call(e,t,1);return e}function Ze(e,t){if(t&&y(t))return t;if(y(e)){var n=Ji.exec(e);if(n)return n[3]}}function et(){var e={},n=!1;this.has=function(t){return e.hasOwnProperty(t)},this.register=function(t,n){re(t,"controller"),b(t)?l(e,t):e[t]=n},this.allowGlobals=function(){n=!0},this.$get=["$injector","$window",function(i,r){function o(e,n,i,r){if(!e||!b(e.$scope))throw t("$controller")("noscp",r,n);e.$scope[n]=i}return function(t,a,s,u){var c,p,d;if(s=!0===s,u&&y(u)&&(d=u),y(t)){if(u=t.match(Ji),!u)throw Ki("ctrlfmt",t);p=u[1],d=d||u[3],t=e.hasOwnProperty(p)?e[p]:oe(a.$scope,p,!0)||(n?oe(r,p,!0):void 0),ie(t,p,!0)}return s?(s=(oi(t)?t[t.length-1]:t).prototype,c=Object.create(s||null),d&&o(a,d,c,p||t.name),l(function(){var e=i.invoke(t,c,a,p);return e!==c&&(b(e)||S(e))&&(c=e,d&&o(a,d,c,p||t.name)),c},{instance:c,identifier:d})):(c=i.instantiate(t,a,p),d&&o(a,d,c,p||t.name),c)}}]}function tt(){this.$get=["$window",function(e){return Vn(e.document)}]}function nt(){this.$get=["$log",function(e){return function(t,n){e.error.apply(e,arguments)}}]}function it(e){return b(e)?x(e)?e.toISOString():j(e):e}function rt(){this.$get=function(){return function(e){if(!e)return"";var t=[];return r(e,function(e,n){null===e||g(e)||(oi(e)?i(e,function(e){t.push(X(n)+"="+X(it(e)))}):t.push(X(n)+"="+X(it(e))))}),t.join("&")}}}function ot(){this.$get=function(){return function(e){function t(e,o,a){null===e||g(e)||(oi(e)?i(e,function(e,n){t(e,o+"["+(b(e)?n:"")+"]")}):b(e)&&!x(e)?r(e,function(e,n){t(e,o+(a?"":"[")+n+(a?"":"]"))}):n.push(X(o)+"="+X(it(e))))}if(!e)return"";var n=[];return t(e,"",!0),n.join("&")}}}function at(e,t){if(y(e)){var n=e.replace(ir,"").trim();if(n){var i=t("Content-Type");(i=i&&0===i.indexOf(Zi))||(i=(i=n.match(tr))&&nr[i[0]].test(n)),i&&(e=_(n))}}return e}function st(e){var t,n=se();return y(e)?i(e.split("\n"),function(e){t=e.indexOf(":");var i=Yn(si(e.substr(0,t)));e=si(e.substr(t+1)),i&&(n[i]=n[i]?n[i]+", "+e:e)}):b(e)&&i(e,function(e,t){var i=Yn(t),r=si(e);i&&(n[i]=n[i]?n[i]+", "+r:r)}),n}function lt(e){var t;return function(n){return t||(t=st(e)),n?(n=t[Yn(n)],void 0===n&&(n=null),n):t}}function ut(e,t,n,r){return S(r)?r(e,t,n):(i(r,function(i){e=i(e,t,n)}),e)}function ct(){var e=this.defaults={transformResponse:[at],transformRequest:[function(e){return b(e)&&"[object File]"!==ei.call(e)&&"[object Blob]"!==ei.call(e)&&"[object FormData]"!==ei.call(e)?j(e):e}],headers:{common:{Accept:"application/json, text/plain, */*"},post:I(er),put:I(er),patch:I(er)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},n=!1;this.useApplyAsync=function(e){return v(e)?(n=!!e,this):n};var r=!0;this.useLegacyPromiseExtensions=function(e){return v(e)?(r=!!e,this):r};var o=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector",function(a,s,u,c,p,d){function f(n){function o(e){var t=l({},e);return t.data=ut(e.data,e.headers,e.status,s.transformResponse),e=e.status,e>=200&&300>e?t:p.reject(t)}function a(e,t){var n,r={};return i(e,function(e,i){S(e)?(n=e(t),null!=n&&(r[i]=n)):r[i]=e}),r}if(!b(n))throw t("$http")("badreq",n);if(!y(n.url))throw t("$http")("badreq",n.url);var s=l({method:"get",transformRequest:e.transformRequest,transformResponse:e.transformResponse,paramSerializer:e.paramSerializer},n);s.headers=function(t){var n,i,r,o=e.headers,s=l({},t.headers),o=l({},o.common,o[Yn(t.method)]);e:for(n in o){i=Yn(n);for(r in s)if(Yn(r)===i)continue e;s[n]=o[n]}return a(s,I(t))}(n),s.method=Kn(s.method),s.paramSerializer=y(s.paramSerializer)?d.get(s.paramSerializer):s.paramSerializer;var u=[function(t){var n=t.headers,r=ut(t.data,lt(n),void 0,t.transformRequest);return g(r)&&i(n,function(e,t){"content-type"===Yn(t)&&delete n[t]}),g(t.withCredentials)&&!g(e.withCredentials)&&(t.withCredentials=e.withCredentials),h(t,r).then(o,o)},void 0],c=p.when(s);for(i(w,function(e){(e.request||e.requestError)&&u.unshift(e.request,e.requestError),(e.response||e.responseError)&&u.push(e.response,e.responseError)});u.length;){n=u.shift();var f=u.shift(),c=c.then(n,f)}return r?(c.success=function(e){return ie(e,"fn"),c.then(function(t){e(t.data,t.status,t.headers,s)}),c},c.error=function(e){return ie(e,"fn"),c.then(null,function(t){e(t.data,t.status,t.headers,s)}),c}):(c.success=or("success"),c.error=or("error")),c}function h(t,r){function o(e){if(e){var t={};return i(e,function(e,i){t[i]=function(t){function i(){e(t)}n?c.$applyAsync(i):c.$$phase?i():c.$apply(i)}}),t}}function l(e,t,i,r){function o(){u(t,e,i,r)}y&&(e>=200&&300>e?y.put(E,[e,t,st(i),r]):y.remove(E)),n?c.$applyAsync(o):(o(),c.$$phase||c.$apply())}function u(e,n,i,r){n=n>=-1?n:0,(n>=200&&300>n?x.resolve:x.reject)({data:e,status:n,headers:lt(i),config:t,statusText:r})}function d(e){u(e.data,e.status,I(e.headers()),e.statusText)}function h(){var e=f.pendingRequests.indexOf(t);-1!==e&&f.pendingRequests.splice(e,1)}var y,w,x=p.defer(),C=x.promise,k=t.headers,E=m(t.url,t.paramSerializer(t.params));return f.pendingRequests.push(t),C.then(h,h),!t.cache&&!e.cache||!1===t.cache||"GET"!==t.method&&"JSONP"!==t.method||(y=b(t.cache)?t.cache:b(e.cache)?e.cache:$),y&&(w=y.get(E),v(w)?w&&S(w.then)?w.then(d,d):oi(w)?u(w[1],w[0],I(w[2]),w[3]):u(w,200,{},"OK"):y.put(E,C)),g(w)&&((w=ln(t.url)?s()[t.xsrfCookieName||e.xsrfCookieName]:void 0)&&(k[t.xsrfHeaderName||e.xsrfHeaderName]=w),a(t.method,E,r,l,k,t.timeout,t.withCredentials,t.responseType,o(t.eventHandlers),o(t.uploadEventHandlers))),C}function m(e,t){return 0<t.length&&(e+=(-1==e.indexOf("?")?"?":"&")+t),e}var $=u("$http");e.paramSerializer=y(e.paramSerializer)?d.get(e.paramSerializer):e.paramSerializer;var w=[];return i(o,function(e){w.unshift(y(e)?d.get(e):d.invoke(e))}),f.pendingRequests=[],function(e){i(arguments,function(e){f[e]=function(t,n){return f(l({},n||{},{method:e,url:t}))}})}("get","delete","head","jsonp"),function(e){i(arguments,function(e){f[e]=function(t,n,i){return f(l({},i||{},{method:e,url:t,data:n}))}})}("post","put","patch"),f.defaults=e,f}]}function pt(){this.$get=function(){return function(){return new e.XMLHttpRequest}}}function dt(){this.$get=["$browser","$window","$document","$xhrFactory",function(e,t,n,i){return ft(e,i,e.defer,t.angular.callbacks,n[0])}]}function ft(e,t,n,r,o){function a(e,t,n){var i=o.createElement("script"),a=null;return i.type="text/javascript",i.src=e,i.async=!0,a=function(e){i.removeEventListener("load",a,!1),i.removeEventListener("error",a,!1),o.body.removeChild(i),i=null;var s=-1,l="unknown";e&&("load"!==e.type||r[t].called||(e={type:"error"}),l=e.type,s="error"===e.type?404:200),n&&n(s,l)},i.addEventListener("load",a,!1),i.addEventListener("error",a,!1),o.body.appendChild(i),a}return function(o,s,l,u,c,p,f,h,m,b){function $(){x&&x(),C&&C.abort()}function y(t,i,r,o,a){v(E)&&n.cancel(E),x=C=null,t(i,r,o,a),e.$$completeOutstandingRequest(d)}if(e.$$incOutstandingRequestCount(),s=s||e.url(),"jsonp"==Yn(o)){var w="_"+(r.counter++).toString(36);r[w]=function(e){r[w].data=e,r[w].called=!0};var x=a(s.replace("JSON_CALLBACK","angular.callbacks."+w),w,function(e,t){y(u,e,r[w].data,"",t),r[w]=d})}else{var C=t(o,s);if(C.open(o,s,!0),i(c,function(e,t){v(e)&&C.setRequestHeader(t,e)}),C.onload=function(){var e=C.statusText||"",t="response"in C?C.response:C.responseText,n=1223===C.status?204:C.status;0===n&&(n=t?200:"file"==sn(s).protocol?404:0),y(u,n,t,C.getAllResponseHeaders(),e)},o=function(){y(u,-1,null,null,"")},C.onerror=o,C.onabort=o,i(m,function(e,t){C.addEventListener(t,e)}),i(b,function(e,t){C.upload.addEventListener(t,e)}),f&&(C.withCredentials=!0),h)try{C.responseType=h}catch(k){if("json"!==h)throw k}C.send(g(l)?null:l)}if(p>0)var E=n($,p);else p&&S(p.then)&&p.then($)}}function ht(){var e="{{",t="}}";this.startSymbol=function(t){return t?(e=t,this):e},this.endSymbol=function(e){return e?(t=e,this):t},this.$get=["$parse","$exceptionHandler","$sce",function(n,i,r){function o(e){return"\\\\\\"+e}function a(n){return n.replace(d,e).replace(f,t)}function s(e,t,n,i){var r;return r=e.$watch(function(e){return r(),i(e)},t,n)}function u(o,u,d,f){function m(e){try{var t=e;e=d?r.getTrusted(d,t):r.valueOf(t);var n;if(f&&!v(e))n=e;else if(null==e)n="";else{switch(typeof e){case"string":break;case"number":e=""+e;break;default:e=j(e)}n=e}return n}catch(a){i(ar.interr(o,a))}}if(!o.length||-1===o.indexOf(e)){var b;return u||(u=a(o),b=h(u),b.exp=o,b.expressions=[],b.$$watchDelegate=s),b}f=!!f;var $,y,w=0,x=[],C=[];b=o.length;for(var k=[],E=[];b>w;){if(-1==($=o.indexOf(e,w))||-1==(y=o.indexOf(t,$+c))){w!==b&&k.push(a(o.substring(w)));break}w!==$&&k.push(a(o.substring(w,$))),w=o.substring($+c,y),x.push(w),C.push(n(w,m)),w=y+p,E.push(k.length),k.push("")}if(d&&1<k.length&&ar.throwNoconcat(o),!u||x.length){var T=function(e){for(var t=0,n=x.length;n>t;t++){if(f&&g(e[t]))return;k[E[t]]=e[t]}return k.join("")};return l(function(e){var t=0,n=x.length,r=Array(n);try{for(;n>t;t++)r[t]=C[t](e);return T(r)}catch(a){i(ar.interr(o,a))}},{exp:o,expressions:x,$$watchDelegate:function(e,t){var n;return e.$watchGroup(C,function(i,r){var o=T(i);S(t)&&t.call(this,o,i!==r?n:o,e),n=o})}})}}var c=e.length,p=t.length,d=new RegExp(e.replace(/./g,o),"g"),f=new RegExp(t.replace(/./g,o),"g");return u.startSymbol=function(){return e},u.endSymbol=function(){return t},u}]}function mt(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(e,t,n,i,r){function o(o,s,l,u){function c(){p?o.apply(null,d):o(m)}var p=4<arguments.length,d=p?Jn.call(arguments,4):[],f=t.setInterval,h=t.clearInterval,m=0,g=v(u)&&!u,b=(g?i:n).defer(),$=b.promise;return l=v(l)?l:0,$.$$intervalId=f(function(){g?r.defer(c):e.$evalAsync(c),b.notify(m++),l>0&&m>=l&&(b.resolve(m),h($.$$intervalId),delete a[$.$$intervalId]),g||e.$apply()},s),a[$.$$intervalId]=b,$}var a={};return o.cancel=function(e){return e&&e.$$intervalId in a?(a[e.$$intervalId].reject("canceled"),t.clearInterval(e.$$intervalId),delete a[e.$$intervalId],!0):!1},o}]}function gt(e){e=e.split("/");for(var t=e.length;t--;)e[t]=G(e[t]);return e.join("/")}function vt(e,t){var n=sn(e);t.$$protocol=n.protocol,t.$$host=n.hostname,t.$$port=c(n.port)||lr[n.protocol]||null}function bt(e,t){var n="/"!==e.charAt(0);n&&(e="/"+e);var i=sn(e);t.$$path=decodeURIComponent(n&&"/"===i.pathname.charAt(0)?i.pathname.substring(1):i.pathname),t.$$search=B(i.search),t.$$hash=decodeURIComponent(i.hash),t.$$path&&"/"!=t.$$path.charAt(0)&&(t.$$path="/"+t.$$path)}function $t(e,t){return 0===t.lastIndexOf(e,0)?t.substr(e.length):void 0}function yt(e){var t=e.indexOf("#");return-1==t?e:e.substr(0,t)}function wt(e){return e.replace(/(#.+)|#$/,"$1")}function xt(e,t,n){this.$$html5=!0,n=n||"",vt(e,this),this.$$parse=function(e){var n=$t(t,e);if(!y(n))throw ur("ipthprfx",e,t);bt(n,this),this.$$path||(this.$$path="/"),this.$$compose()},this.$$compose=function(){var e=W(this.$$search),n=this.$$hash?"#"+G(this.$$hash):"";this.$$url=gt(this.$$path)+(e?"?"+e:"")+n,this.$$absUrl=t+this.$$url.substr(1)},this.$$parseLinkUrl=function(i,r){if(r&&"#"===r[0])return this.hash(r.slice(1)),!0;var o,a;return v(o=$t(e,i))?(a=o,a=v(o=$t(n,o))?t+($t("/",o)||o):e+a):v(o=$t(t,i))?a=t+o:t==i+"/"&&(a=t),a&&this.$$parse(a),!!a}}function St(e,t,n){vt(e,this),this.$$parse=function(i){var r,o=$t(e,i)||$t(t,i);g(o)||"#"!==o.charAt(0)?this.$$html5?r=o:(r="",g(o)&&(e=i,this.replace())):(r=$t(n,o),g(r)&&(r=o)),bt(r,this),i=this.$$path;var o=e,a=/^\/[A-Z]:(\/.*)/;0===r.lastIndexOf(o,0)&&(r=r.replace(o,"")),a.exec(r)||(i=(r=a.exec(i))?r[1]:i),this.$$path=i,this.$$compose()},this.$$compose=function(){var t=W(this.$$search),i=this.$$hash?"#"+G(this.$$hash):"";this.$$url=gt(this.$$path)+(t?"?"+t:"")+i,this.$$absUrl=e+(this.$$url?n+this.$$url:"")},this.$$parseLinkUrl=function(t,n){return yt(e)==yt(t)?(this.$$parse(t),!0):!1}}function Ct(e,t,n){this.$$html5=!0,St.apply(this,arguments),this.$$parseLinkUrl=function(i,r){if(r&&"#"===r[0])return this.hash(r.slice(1)),!0;var o,a;return e==yt(i)?o=i:(a=$t(t,i))?o=e+n+a:t===i+"/"&&(o=t),o&&this.$$parse(o),!!o},this.$$compose=function(){var t=W(this.$$search),i=this.$$hash?"#"+G(this.$$hash):"";this.$$url=gt(this.$$path)+(t?"?"+t:"")+i,this.$$absUrl=e+n+this.$$url}}function kt(e){return function(){return this[e]}}function Et(e,t){return function(n){return g(n)?this[e]:(this[e]=t(n),this.$$compose(),this)}}function Tt(){var e="",t={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(t){return v(t)?(e=t,this):e},this.html5Mode=function(e){return T(e)?(t.enabled=e,this):b(e)?(T(e.enabled)&&(t.enabled=e.enabled),T(e.requireBase)&&(t.requireBase=e.requireBase),T(e.rewriteLinks)&&(t.rewriteLinks=e.rewriteLinks),this):t},this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(n,i,r,o,a){function s(e,t,n){var r=u.url(),o=u.$$state;try{i.url(e,t,n),u.$$state=i.state()}catch(a){throw u.url(r),u.$$state=o,a}}function l(e,t){n.$broadcast("$locationChangeSuccess",u.absUrl(),e,u.$$state,t)}var u,c;c=i.baseHref();var p,d=i.url();if(t.enabled){if(!c&&t.requireBase)throw ur("nobase");p=d.substring(0,d.indexOf("/",d.indexOf("//")+2))+(c||"/"),c=r.history?xt:Ct}else p=yt(d),c=St;var f=p.substr(0,yt(p).lastIndexOf("/")+1);u=new c(p,f,"#"+e),u.$$parseLinkUrl(d,d),u.$$state=i.state();var h=/^\s*(javascript|mailto):/i;o.on("click",function(e){if(t.rewriteLinks&&!e.ctrlKey&&!e.metaKey&&!e.shiftKey&&2!=e.which&&2!=e.button){for(var r=Vn(e.target);"a"!==M(r[0]);)if(r[0]===o[0]||!(r=r.parent())[0])return;var s=r.prop("href"),l=r.attr("href")||r.attr("xlink:href");b(s)&&"[object SVGAnimatedString]"===s.toString()&&(s=sn(s.animVal).href),h.test(s)||!s||r.attr("target")||e.isDefaultPrevented()||!u.$$parseLinkUrl(s,l)||(e.preventDefault(),u.absUrl()!=i.url()&&(n.$apply(),a.angular["ff-684208-preventDefault"]=!0))}}),wt(u.absUrl())!=wt(d)&&i.url(u.absUrl(),!0);var m=!0;return i.onUrlChange(function(e,t){g($t(f,e))?a.location.href=e:(n.$evalAsync(function(){var i,r=u.absUrl(),o=u.$$state;e=wt(e),u.$$parse(e),u.$$state=t,i=n.$broadcast("$locationChangeStart",e,r,t,o).defaultPrevented,u.absUrl()===e&&(i?(u.$$parse(r),u.$$state=o,s(r,!1,o)):(m=!1,l(r,o)))}),n.$$phase||n.$digest())}),n.$watch(function(){var e=wt(i.url()),t=wt(u.absUrl()),o=i.state(),a=u.$$replace,c=e!==t||u.$$html5&&r.history&&o!==u.$$state;(m||c)&&(m=!1,n.$evalAsync(function(){var t=u.absUrl(),i=n.$broadcast("$locationChangeStart",t,e,u.$$state,o).defaultPrevented;u.absUrl()===t&&(i?(u.$$parse(e),u.$$state=o):(c&&s(t,a,o===u.$$state?null:u.$$state),l(e,o)))})),u.$$replace=!1}),u}]}function Pt(){var e=!0,t=this;this.debugEnabled=function(t){return v(t)?(e=t,this):e},this.$get=["$window",function(n){function r(e){return e instanceof Error&&(e.stack?e=e.message&&-1===e.stack.indexOf(e.message)?"Error: "+e.message+"\n"+e.stack:e.stack:e.sourceURL&&(e=e.message+"\n"+e.sourceURL+":"+e.line)),e}function o(e){var t=n.console||{},o=t[e]||t.log||d;e=!1;try{e=!!o.apply}catch(a){}return e?function(){var e=[];return i(arguments,function(t){e.push(r(t))}),o.apply(t,e)}:function(e,t){o(e,null==t?"":t)}}return{log:o("log"),info:o("info"),warn:o("warn"),error:o("error"),debug:function(){var n=o("debug");return function(){e&&n.apply(t,arguments)}}()}}]}function Dt(e,t){if("__defineGetter__"===e||"__defineSetter__"===e||"__lookupGetter__"===e||"__lookupSetter__"===e||"__proto__"===e)throw pr("isecfld",t);return e}function At(e){return e+""}function Mt(e,t){if(e){if(e.constructor===e)throw pr("isecfn",t);if(e.window===e)throw pr("isecwindow",t);if(e.children&&(e.nodeName||e.prop&&e.attr&&e.find))throw pr("isecdom",t);if(e===Object)throw pr("isecobj",t)}return e}function Ot(e,t){if(e){if(e.constructor===e)throw pr("isecfn",t);if(e===dr||e===fr||e===hr)throw pr("isecff",t)}}function Rt(e,t){if(e&&(e===0..constructor||e===(!1).constructor||e==="".constructor||e==={}.constructor||e===[].constructor||e===Function.constructor))throw pr("isecaf",t)}function It(e,t){return"undefined"!=typeof e?e:t}function Nt(e,t){return"undefined"==typeof e?t:"undefined"==typeof t?e:e+t}function Lt(e,t){var n,r;switch(e.type){case br.Program:n=!0,i(e.body,function(e){Lt(e.expression,t),n=n&&e.expression.constant}),e.constant=n;break;case br.Literal:e.constant=!0,e.toWatch=[];break;case br.UnaryExpression:Lt(e.argument,t),e.constant=e.argument.constant,e.toWatch=e.argument.toWatch;break;case br.BinaryExpression:Lt(e.left,t),Lt(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=e.left.toWatch.concat(e.right.toWatch);break;case br.LogicalExpression:Lt(e.left,t),Lt(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=e.constant?[]:[e];break;case br.ConditionalExpression:Lt(e.test,t),Lt(e.alternate,t),Lt(e.consequent,t),e.constant=e.test.constant&&e.alternate.constant&&e.consequent.constant,e.toWatch=e.constant?[]:[e];break;case br.Identifier:e.constant=!1,e.toWatch=[e];break;case br.MemberExpression:Lt(e.object,t),e.computed&&Lt(e.property,t),e.constant=e.object.constant&&(!e.computed||e.property.constant),e.toWatch=[e];break;case br.CallExpression:n=e.filter?!t(e.callee.name).$stateful:!1,r=[],i(e.arguments,function(e){
Lt(e,t),n=n&&e.constant,e.constant||r.push.apply(r,e.toWatch)}),e.constant=n,e.toWatch=e.filter&&!t(e.callee.name).$stateful?r:[e];break;case br.AssignmentExpression:Lt(e.left,t),Lt(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=[e];break;case br.ArrayExpression:n=!0,r=[],i(e.elements,function(e){Lt(e,t),n=n&&e.constant,e.constant||r.push.apply(r,e.toWatch)}),e.constant=n,e.toWatch=r;break;case br.ObjectExpression:n=!0,r=[],i(e.properties,function(e){Lt(e.value,t),n=n&&e.value.constant&&!e.computed,e.value.constant||r.push.apply(r,e.value.toWatch)}),e.constant=n,e.toWatch=r;break;case br.ThisExpression:e.constant=!1,e.toWatch=[];break;case br.LocalsExpression:e.constant=!1,e.toWatch=[]}}function Ut(e){if(1==e.length){e=e[0].expression;var t=e.toWatch;return 1!==t.length?t:t[0]!==e?t:void 0}}function Ft(e){return e.type===br.Identifier||e.type===br.MemberExpression}function jt(e){return 1===e.body.length&&Ft(e.body[0].expression)?{type:br.AssignmentExpression,left:e.body[0].expression,right:{type:br.NGValueParameter},operator:"="}:void 0}function _t(e){return 0===e.body.length||1===e.body.length&&(e.body[0].expression.type===br.Literal||e.body[0].expression.type===br.ArrayExpression||e.body[0].expression.type===br.ObjectExpression)}function qt(e,t){this.astBuilder=e,this.$filter=t}function Ht(e,t){this.astBuilder=e,this.$filter=t}function zt(e){return"constructor"==e}function Vt(e){return S(e.valueOf)?e.valueOf():yr.call(e)}function Bt(){var e,t,n=se(),r=se(),o={"true":!0,"false":!1,"null":null,undefined:void 0};this.addLiteral=function(e,t){o[e]=t},this.setIdentifierFns=function(n,i){return e=n,t=i,this},this.$get=["$filter",function(a){function s(e,t,i){var o,s,u;switch(i=i||y,typeof e){case"string":u=e=e.trim();var g=i?r:n;if(o=g[u],!o){":"===e.charAt(0)&&":"===e.charAt(1)&&(s=!0,e=e.substring(2)),o=i?$:b;var v=new vr(o);o=new $r(v,a,o).parse(e),o.constant?o.$$watchDelegate=h:s?o.$$watchDelegate=o.literal?f:p:o.inputs&&(o.$$watchDelegate=c),i&&(o=l(o)),g[u]=o}return m(o,t);case"function":return m(e,t);default:return m(d,t)}}function l(e){function t(t,n,i,r){var o=y;y=!0;try{return e(t,n,i,r)}finally{y=o}}if(!e)return e;t.$$watchDelegate=e.$$watchDelegate,t.assign=l(e.assign),t.constant=e.constant,t.literal=e.literal;for(var n=0;e.inputs&&n<e.inputs.length;++n)e.inputs[n]=l(e.inputs[n]);return t.inputs=e.inputs,t}function u(e,t){return null==e||null==t?e===t:"object"==typeof e&&(e=Vt(e),"object"==typeof e)?!1:e===t||e!==e&&t!==t}function c(e,t,n,i,r){var o,a=i.inputs;if(1===a.length){var s=u,a=a[0];return e.$watch(function(e){var t=a(e);return u(t,s)||(o=i(e,void 0,void 0,[t]),s=t&&Vt(t)),o},t,n,r)}for(var l=[],c=[],p=0,d=a.length;d>p;p++)l[p]=u,c[p]=null;return e.$watch(function(e){for(var t=!1,n=0,r=a.length;r>n;n++){var s=a[n](e);(t||(t=!u(s,l[n])))&&(c[n]=s,l[n]=s&&Vt(s))}return t&&(o=i(e,void 0,void 0,c)),o},t,n,r)}function p(e,t,n,i){var r,o;return r=e.$watch(function(e){return i(e)},function(e,n,i){o=e,S(t)&&t.apply(this,arguments),v(e)&&i.$$postDigest(function(){v(o)&&r()})},n)}function f(e,t,n,r){function o(e){var t=!0;return i(e,function(e){v(e)||(t=!1)}),t}var a,s;return a=e.$watch(function(e){return r(e)},function(e,n,i){s=e,S(t)&&t.call(this,e,n,i),o(e)&&i.$$postDigest(function(){o(s)&&a()})},n)}function h(e,t,n,i){var r;return r=e.$watch(function(e){return r(),i(e)},t,n)}function m(e,t){if(!t)return e;var n=e.$$watchDelegate,i=!1,n=n!==f&&n!==p?function(n,r,o,a){return o=i&&a?a[0]:e(n,r,o,a),t(o,n,r)}:function(n,i,r,o){return r=e(n,i,r,o),n=t(r,n,i),v(r)?n:r};return e.$$watchDelegate&&e.$$watchDelegate!==c?n.$$watchDelegate=e.$$watchDelegate:t.$stateful||(n.$$watchDelegate=c,i=!e.inputs,n.inputs=e.inputs?e.inputs:[e]),n}var g=ui().noUnsafeEval,b={csp:g,expensiveChecks:!1,literals:R(o),isIdentifierStart:S(e)&&e,isIdentifierContinue:S(t)&&t},$={csp:g,expensiveChecks:!0,literals:R(o),isIdentifierStart:S(e)&&e,isIdentifierContinue:S(t)&&t},y=!1;return s.$$runningExpensiveChecks=function(){return y},s}]}function Wt(){this.$get=["$rootScope","$exceptionHandler",function(e,t){return Xt(function(t){e.$evalAsync(t)},t)}]}function Gt(){this.$get=["$browser","$exceptionHandler",function(e,t){return Xt(function(t){e.defer(t)},t)}]}function Xt(e,n){function r(){this.$$state={status:0}}function o(e,t){return function(n){t.call(e,n)}}function a(t){!t.processScheduled&&t.pending&&(t.processScheduled=!0,e(function(){var e,i,r;r=t.pending,t.processScheduled=!1,t.pending=void 0;for(var o=0,a=r.length;a>o;++o){i=r[o][0],e=r[o][t.status];try{S(e)?i.resolve(e(t.value)):1===t.status?i.resolve(t.value):i.reject(t.value)}catch(s){i.reject(s),n(s)}}}))}function s(){this.promise=new r}var u=t("$q",TypeError);l(r.prototype,{then:function(e,t,n){if(g(e)&&g(t)&&g(n))return this;var i=new s;return this.$$state.pending=this.$$state.pending||[],this.$$state.pending.push([i,e,t,n]),0<this.$$state.status&&a(this.$$state),i.promise},"catch":function(e){return this.then(null,e)},"finally":function(e,t){return this.then(function(t){return p(t,!0,e)},function(t){return p(t,!1,e)},t)}}),l(s.prototype,{resolve:function(e){this.promise.$$state.status||(e===this.promise?this.$$reject(u("qcycle",e)):this.$$resolve(e))},$$resolve:function(e){function t(e){l||(l=!0,s.$$resolve(e))}function i(e){l||(l=!0,s.$$reject(e))}var r,s=this,l=!1;try{(b(e)||S(e))&&(r=e&&e.then),S(r)?(this.promise.$$state.status=-1,r.call(e,t,i,o(this,this.notify))):(this.promise.$$state.value=e,this.promise.$$state.status=1,a(this.promise.$$state))}catch(u){i(u),n(u)}},reject:function(e){this.promise.$$state.status||this.$$reject(e)},$$reject:function(e){this.promise.$$state.value=e,this.promise.$$state.status=2,a(this.promise.$$state)},notify:function(t){var i=this.promise.$$state.pending;0>=this.promise.$$state.status&&i&&i.length&&e(function(){for(var e,r,o=0,a=i.length;a>o;o++){r=i[o][0],e=i[o][3];try{r.notify(S(e)?e(t):t)}catch(s){n(s)}}})}});var c=function(e,t){var n=new s;return t?n.resolve(e):n.reject(e),n.promise},p=function(e,t,n){var i=null;try{S(n)&&(i=n())}catch(r){return c(r,!1)}return i&&S(i.then)?i.then(function(){return c(e,t)},function(e){return c(e,!1)}):c(e,t)},d=function(e,t,n,i){var r=new s;return r.resolve(e),r.promise.then(t,n,i)},f=function(e){if(!S(e))throw u("norslvr",e);var t=new s;return e(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise};return f.prototype=r.prototype,f.defer=function(){var e=new s;return e.resolve=o(e,e.resolve),e.reject=o(e,e.reject),e.notify=o(e,e.notify),e},f.reject=function(e){var t=new s;return t.reject(e),t.promise},f.when=d,f.resolve=d,f.all=function(e){var t=new s,n=0,r=oi(e)?[]:{};return i(e,function(e,i){n++,d(e).then(function(e){r.hasOwnProperty(i)||(r[i]=e,--n||t.resolve(r))},function(e){r.hasOwnProperty(i)||t.reject(e)})}),0===n&&t.resolve(r),t.promise},f}function Yt(){this.$get=["$window","$timeout",function(e,t){var n=e.requestAnimationFrame||e.webkitRequestAnimationFrame,i=e.cancelAnimationFrame||e.webkitCancelAnimationFrame||e.webkitCancelRequestAnimationFrame,r=!!n,o=r?function(e){var t=n(e);return function(){i(t)}}:function(e){var n=t(e,16.66,!1);return function(){t.cancel(n)}};return o.supported=r,o}]}function Kt(){function e(e){function t(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$id=++ri,this.$$ChildScope=null}return t.prototype=e,t}var r=10,o=t("$rootScope"),a=null,s=null;this.digestTtl=function(e){return arguments.length&&(r=e),r},this.$get=["$exceptionHandler","$parse","$browser",function(t,l,u){function c(e){e.currentScope.$$destroyed=!0}function p(e){9===zn&&(e.$$childHead&&p(e.$$childHead),e.$$nextSibling&&p(e.$$nextSibling)),e.$parent=e.$$nextSibling=e.$$prevSibling=e.$$childHead=e.$$childTail=e.$root=e.$$watchers=null}function f(){this.$id=++ri,this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null,this.$root=this,this.$$destroyed=!1,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$$isolateBindings=null}function h(e){if(x.$$phase)throw o("inprog",x.$$phase);x.$$phase=e}function m(e,t){do e.$$watchersCount+=t;while(e=e.$parent)}function v(e,t,n){do e.$$listenerCount[n]-=t,0===e.$$listenerCount[n]&&delete e.$$listenerCount[n];while(e=e.$parent)}function $(){}function y(){for(;E.length;)try{E.shift()()}catch(e){t(e)}s=null}function w(){null===s&&(s=u.defer(function(){x.$apply(y)}))}f.prototype={constructor:f,$new:function(t,n){var i;return n=n||this,t?(i=new f,i.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=e(this)),i=new this.$$ChildScope),i.$parent=n,i.$$prevSibling=n.$$childTail,n.$$childHead?(n.$$childTail.$$nextSibling=i,n.$$childTail=i):n.$$childHead=n.$$childTail=i,(t||n!=this)&&i.$on("$destroy",c),i},$watch:function(e,t,n,i){var r=l(e);if(r.$$watchDelegate)return r.$$watchDelegate(this,t,n,r,e);var o=this,s=o.$$watchers,u={fn:t,last:$,get:r,exp:i||e,eq:!!n};return a=null,S(t)||(u.fn=d),s||(s=o.$$watchers=[]),s.unshift(u),m(this,1),function(){0<=O(s,u)&&m(o,-1),a=null}},$watchGroup:function(e,t){function n(){l=!1,u?(u=!1,t(o,o,s)):t(o,r,s)}var r=Array(e.length),o=Array(e.length),a=[],s=this,l=!1,u=!0;if(!e.length){var c=!0;return s.$evalAsync(function(){c&&t(o,o,s)}),function(){c=!1}}return 1===e.length?this.$watch(e[0],function(e,n,i){o[0]=e,r[0]=n,t(o,e===n?o:r,i)}):(i(e,function(e,t){var i=s.$watch(e,function(e,i){o[t]=e,r[t]=i,l||(l=!0,s.$evalAsync(n))});a.push(i)}),function(){for(;a.length;)a.shift()()})},$watchCollection:function(e,t){function i(e){r=e;var t,i,a,s;if(!g(r)){if(b(r))if(n(r))for(o!==d&&(o=d,m=o.length=0,c++),e=r.length,m!==e&&(c++,o.length=m=e),t=0;e>t;t++)s=o[t],a=r[t],i=s!==s&&a!==a,i||s===a||(c++,o[t]=a);else{o!==f&&(o=f={},m=0,c++),e=0;for(t in r)Xn.call(r,t)&&(e++,a=r[t],s=o[t],t in o?(i=s!==s&&a!==a,i||s===a||(c++,o[t]=a)):(m++,o[t]=a,c++));if(m>e)for(t in c++,o)Xn.call(r,t)||(m--,delete o[t])}else o!==r&&(o=r,c++);return c}}i.$stateful=!0;var r,o,a,s=this,u=1<t.length,c=0,p=l(e,i),d=[],f={},h=!0,m=0;return this.$watch(p,function(){if(h?(h=!1,t(r,r,s)):t(r,a,s),u)if(b(r))if(n(r)){a=Array(r.length);for(var e=0;e<r.length;e++)a[e]=r[e]}else for(e in a={},r)Xn.call(r,e)&&(a[e]=r[e]);else a=r})},$digest:function(){var e,n,i,l,c,p,d,f,m,g,v,b=r,w=[];h("$digest"),u.$$checkUrlChange(),this===x&&null!==s&&(u.defer.cancel(s),y()),a=null;do{for(f=!1,m=this,p=0;p<C.length;p++){try{v=C[p],v.scope.$eval(v.expression,v.locals)}catch(E){t(E)}a=null}C.length=0;e:do{if(p=m.$$watchers)for(d=p.length;d--;)try{if(e=p[d])if(c=e.get,(n=c(m))===(i=e.last)||(e.eq?N(n,i):"number"==typeof n&&"number"==typeof i&&isNaN(n)&&isNaN(i))){if(e===a){f=!1;break e}}else f=!0,a=e,e.last=e.eq?R(n,null):n,l=e.fn,l(n,i===$?n:i,m),5>b&&(g=4-b,w[g]||(w[g]=[]),w[g].push({msg:S(e.exp)?"fn: "+(e.exp.name||e.exp.toString()):e.exp,newVal:n,oldVal:i}))}catch(P){t(P)}if(!(p=m.$$watchersCount&&m.$$childHead||m!==this&&m.$$nextSibling))for(;m!==this&&!(p=m.$$nextSibling);)m=m.$parent}while(m=p);if((f||C.length)&&!b--)throw x.$$phase=null,o("infdig",r,w)}while(f||C.length);for(x.$$phase=null;T<k.length;)try{k[T++]()}catch(D){t(D)}k.length=T=0},$destroy:function(){if(!this.$$destroyed){var e=this.$parent;this.$broadcast("$destroy"),this.$$destroyed=!0,this===x&&u.$$applicationDestroyed(),m(this,-this.$$watchersCount);for(var t in this.$$listenerCount)v(this,this.$$listenerCount[t],t);e&&e.$$childHead==this&&(e.$$childHead=this.$$nextSibling),e&&e.$$childTail==this&&(e.$$childTail=this.$$prevSibling),this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling),this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling),this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=d,this.$on=this.$watch=this.$watchGroup=function(){return d},this.$$listeners={},this.$$nextSibling=null,p(this)}},$eval:function(e,t){return l(e)(this,t)},$evalAsync:function(e,t){x.$$phase||C.length||u.defer(function(){C.length&&x.$digest()}),C.push({scope:this,expression:l(e),locals:t})},$$postDigest:function(e){k.push(e)},$apply:function(e){try{h("$apply");try{return this.$eval(e)}finally{x.$$phase=null}}catch(n){t(n)}finally{try{x.$digest()}catch(i){throw t(i),i}}},$applyAsync:function(e){function t(){n.$eval(e)}var n=this;e&&E.push(t),e=l(e),w()},$on:function(e,t){var n=this.$$listeners[e];n||(this.$$listeners[e]=n=[]),n.push(t);var i=this;do i.$$listenerCount[e]||(i.$$listenerCount[e]=0),i.$$listenerCount[e]++;while(i=i.$parent);var r=this;return function(){var i=n.indexOf(t);-1!==i&&(n[i]=null,v(r,1,e))}},$emit:function(e,n){var i,r,o,a=[],s=this,l=!1,u={name:e,targetScope:s,stopPropagation:function(){l=!0},preventDefault:function(){u.defaultPrevented=!0},defaultPrevented:!1},c=L([u],arguments,1);do{for(i=s.$$listeners[e]||a,u.currentScope=s,r=0,o=i.length;o>r;r++)if(i[r])try{i[r].apply(null,c)}catch(p){t(p)}else i.splice(r,1),r--,o--;if(l)return u.currentScope=null,u;s=s.$parent}while(s);return u.currentScope=null,u},$broadcast:function(e,n){var i=this,r=this,o={name:e,targetScope:this,preventDefault:function(){o.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[e])return o;for(var a,s,l=L([o],arguments,1);i=r;){for(o.currentScope=i,r=i.$$listeners[e]||[],a=0,s=r.length;s>a;a++)if(r[a])try{r[a].apply(null,l)}catch(u){t(u)}else r.splice(a,1),a--,s--;if(!(r=i.$$listenerCount[e]&&i.$$childHead||i!==this&&i.$$nextSibling))for(;i!==this&&!(r=i.$$nextSibling);)i=i.$parent}return o.currentScope=null,o}};var x=new f,C=x.$$asyncQueue=[],k=x.$$postDigestQueue=[],E=x.$$applyAsyncQueue=[],T=0;return x}]}function Jt(){var e=/^\s*(https?|ftp|mailto|tel|file):/,t=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(t){return v(t)?(e=t,this):e},this.imgSrcSanitizationWhitelist=function(e){return v(e)?(t=e,this):t},this.$get=function(){return function(n,i){var r,o=i?t:e;return r=sn(n).href,""===r||r.match(o)?n:"unsafe:"+r}}}function Qt(e){if("self"===e)return e;if(y(e)){if(-1<e.indexOf("***"))throw wr("iwcard",e);return e=li(e).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*"),new RegExp("^"+e+"$")}if(C(e))return new RegExp("^"+e.source+"$");throw wr("imatcher")}function Zt(e){var t=[];return v(e)&&i(e,function(e){t.push(Qt(e))}),t}function en(){this.SCE_CONTEXTS=xr;var e=["self"],t=[];this.resourceUrlWhitelist=function(t){return arguments.length&&(e=Zt(t)),e},this.resourceUrlBlacklist=function(e){return arguments.length&&(t=Zt(e)),t},this.$get=["$injector",function(n){function i(e,t){return"self"===e?ln(t):!!e.exec(t.href)}function r(e){var t=function(e){this.$$unwrapTrustedValue=function(){return e}};return e&&(t.prototype=new e),t.prototype.valueOf=function(){return this.$$unwrapTrustedValue()},t.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()},t}var o=function(e){throw wr("unsafe")};n.has("$sanitize")&&(o=n.get("$sanitize"));var a=r(),s={};return s[xr.HTML]=r(a),s[xr.CSS]=r(a),s[xr.URL]=r(a),s[xr.JS]=r(a),s[xr.RESOURCE_URL]=r(s[xr.URL]),{trustAs:function(e,t){var n=s.hasOwnProperty(e)?s[e]:null;if(!n)throw wr("icontext",e,t);if(null===t||g(t)||""===t)return t;if("string"!=typeof t)throw wr("itype",e);return new n(t)},getTrusted:function(n,r){if(null===r||g(r)||""===r)return r;var a=s.hasOwnProperty(n)?s[n]:null;if(a&&r instanceof a)return r.$$unwrapTrustedValue();if(n===xr.RESOURCE_URL){var l,u,a=sn(r.toString()),c=!1;for(l=0,u=e.length;u>l;l++)if(i(e[l],a)){c=!0;break}if(c)for(l=0,u=t.length;u>l;l++)if(i(t[l],a)){c=!1;break}if(c)return r;throw wr("insecurl",r.toString())}if(n===xr.HTML)return o(r);throw wr("unsafe")},valueOf:function(e){return e instanceof a?e.$$unwrapTrustedValue():e}}}]}function tn(){var e=!0;this.enabled=function(t){return arguments.length&&(e=!!t),e},this.$get=["$parse","$sceDelegate",function(t,n){if(e&&8>zn)throw wr("iequirks");var r=I(xr);r.isEnabled=function(){return e},r.trustAs=n.trustAs,r.getTrusted=n.getTrusted,r.valueOf=n.valueOf,e||(r.trustAs=r.getTrusted=function(e,t){return t},r.valueOf=f),r.parseAs=function(e,n){var i=t(n);return i.literal&&i.constant?i:t(n,function(t){return r.getTrusted(e,t)})};var o=r.parseAs,a=r.getTrusted,s=r.trustAs;return i(xr,function(e,t){var n=Yn(t);r[ce("parse_as_"+n)]=function(t){return o(e,t)},r[ce("get_trusted_"+n)]=function(t){return a(e,t)},r[ce("trust_as_"+n)]=function(t){return s(e,t)}}),r}]}function nn(){this.$get=["$window","$document",function(e,t){var n,i={},r=!(e.chrome&&e.chrome.app&&e.chrome.app.runtime)&&e.history&&e.history.pushState,o=c((/android (\d+)/.exec(Yn((e.navigator||{}).userAgent))||[])[1]),a=/Boxee/i.test((e.navigator||{}).userAgent),s=t[0]||{},l=/^(Moz|webkit|ms)(?=[A-Z])/,u=s.body&&s.body.style,p=!1,d=!1;if(u){for(var f in u)if(p=l.exec(f)){n=p[0],n=n[0].toUpperCase()+n.substr(1);break}n||(n="WebkitOpacity"in u&&"webkit"),p=!!("transition"in u||n+"Transition"in u),d=!!("animation"in u||n+"Animation"in u),!o||p&&d||(p=y(u.webkitTransition),d=y(u.webkitAnimation))}return{history:!(!r||4>o||a),hasEvent:function(e){if("input"===e&&11>=zn)return!1;if(g(i[e])){var t=s.createElement("div");i[e]="on"+e in t}return i[e]},csp:ui(),vendorPrefix:n,transitions:p,animations:d,android:o}}]}function rn(){var e;this.httpOptions=function(t){return t?(e=t,this):e},this.$get=["$templateCache","$http","$q","$sce",function(t,n,i,r){function o(a,s){o.totalPendingRequests++,y(a)&&!g(t.get(a))||(a=r.getTrustedResourceUrl(a));var u=n.defaults&&n.defaults.transformResponse;return oi(u)?u=u.filter(function(e){return e!==at}):u===at&&(u=null),n.get(a,l({cache:t,transformResponse:u},e))["finally"](function(){o.totalPendingRequests--}).then(function(e){return t.put(a,e.data),e.data},function(e){if(!s)throw Sr("tpload",a,e.status,e.statusText);return i.reject(e)})}return o.totalPendingRequests=0,o}]}function on(){this.$get=["$rootScope","$browser","$location",function(e,t,n){return{findBindings:function(e,t,n){e=e.getElementsByClassName("ng-binding");var r=[];return i(e,function(e){var o=ii.element(e).data("$binding");o&&i(o,function(i){n?new RegExp("(^|\\s)"+li(t)+"(\\s|\\||$)").test(i)&&r.push(e):-1!=i.indexOf(t)&&r.push(e)})}),r},findModels:function(e,t,n){for(var i=["ng-","data-ng-","ng\\:"],r=0;r<i.length;++r){var o=e.querySelectorAll("["+i[r]+"model"+(n?"=":"*=")+'"'+t+'"]');if(o.length)return o}},getLocation:function(){return n.url()},setLocation:function(t){t!==n.url()&&(n.url(t),e.$digest())},whenStable:function(e){t.notifyWhenNoOutstandingRequests(e)}}}]}function an(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(e,t,n,i,r){function o(o,s,l){S(o)||(l=s,s=o,o=d);var u,c=Jn.call(arguments,3),p=v(l)&&!l,f=(p?i:n).defer(),h=f.promise;return u=t.defer(function(){try{f.resolve(o.apply(null,c))}catch(t){f.reject(t),r(t)}finally{delete a[h.$$timeoutId]}p||e.$apply()},s),h.$$timeoutId=u,a[u]=f,h}var a={};return o.cancel=function(e){return e&&e.$$timeoutId in a?(a[e.$$timeoutId].reject("canceled"),delete a[e.$$timeoutId],t.defer.cancel(e.$$timeoutId)):!1},o}]}function sn(e){return zn&&(Cr.setAttribute("href",e),e=Cr.href),Cr.setAttribute("href",e),{href:Cr.href,protocol:Cr.protocol?Cr.protocol.replace(/:$/,""):"",host:Cr.host,search:Cr.search?Cr.search.replace(/^\?/,""):"",hash:Cr.hash?Cr.hash.replace(/^#/,""):"",hostname:Cr.hostname,port:Cr.port,pathname:"/"===Cr.pathname.charAt(0)?Cr.pathname:"/"+Cr.pathname}}function ln(e){return e=y(e)?sn(e):e,e.protocol===kr.protocol&&e.host===kr.host}function un(){this.$get=h(e)}function cn(e){function t(e){try{return decodeURIComponent(e)}catch(t){return e}}var n=e[0]||{},i={},r="";return function(){var e,o,a,s,l;if(e=n.cookie||"",e!==r)for(r=e,e=r.split("; "),i={},a=0;a<e.length;a++)o=e[a],s=o.indexOf("="),s>0&&(l=t(o.substring(0,s)),g(i[l])&&(i[l]=t(o.substring(s+1))));return i}}function pn(){this.$get=cn}function dn(e){function t(n,r){if(b(n)){var o={};return i(n,function(e,n){o[n]=t(n,e)}),o}return e.factory(n+"Filter",r)}this.register=t,this.$get=["$injector",function(e){return function(t){return e.get(t+"Filter")}}],t("currency",vn),t("date",Pn),t("filter",fn),t("json",Dn),t("limitTo",An),t("lowercase",Or),t("number",bn),t("orderBy",Mn),t("uppercase",Rr)}function fn(){return function(e,i,r){if(!n(e)){if(null==e)return e;throw t("filter")("notarray",e)}var o;switch(gn(i)){case"function":break;case"boolean":case"null":case"number":case"string":o=!0;case"object":i=hn(i,r,o);break;default:return e}return Array.prototype.filter.call(e,i)}}function hn(e,t,n){var i=b(e)&&"$"in e;return!0===t?t=N:S(t)||(t=function(e,t){return g(e)?!1:null===e||null===t?e===t:b(t)||b(e)&&!m(e)?!1:(e=Yn(""+e),t=Yn(""+t),-1!==e.indexOf(t))}),function(r){return i&&!b(r)?mn(r,e.$,t,!1):mn(r,e,t,n)}}function mn(e,t,n,i,r){var o=gn(e),a=gn(t);if("string"===a&&"!"===t.charAt(0))return!mn(e,t.substring(1),n,i);if(oi(e))return e.some(function(e){return mn(e,t,n,i)});switch(o){case"object":var s;if(i){for(s in e)if("$"!==s.charAt(0)&&mn(e[s],t,n,!0))return!0;return r?!1:mn(e,t,n,!1)}if("object"===a){for(s in t)if(r=t[s],!S(r)&&!g(r)&&(o="$"===s,!mn(o?e:e[s],r,n,o,o)))return!1;return!0}return n(e,t);case"function":return!1;default:return n(e,t)}}function gn(e){return null===e?"null":typeof e}function vn(e){var t=e.NUMBER_FORMATS;return function(e,n,i){return g(n)&&(n=t.CURRENCY_SYM),g(i)&&(i=t.PATTERNS[1].maxFrac),null==e?e:wn(e,t.PATTERNS[1],t.GROUP_SEP,t.DECIMAL_SEP,i).replace(/\u00A4/g,n)}}function bn(e){var t=e.NUMBER_FORMATS;return function(e,n){return null==e?e:wn(e,t.PATTERNS[0],t.GROUP_SEP,t.DECIMAL_SEP,n)}}function $n(e){var t,n,i,r,o,a=0;for(-1<(n=e.indexOf(Tr))&&(e=e.replace(Tr,"")),0<(i=e.search(/e/i))?(0>n&&(n=i),n+=+e.slice(i+1),e=e.substring(0,i)):0>n&&(n=e.length),i=0;e.charAt(i)==Pr;i++);if(i==(o=e.length))t=[0],n=1;else{for(o--;e.charAt(o)==Pr;)o--;for(n-=i,t=[],r=0;o>=i;i++,r++)t[r]=+e.charAt(i)}return n>Er&&(t=t.splice(0,Er-1),a=n-1,n=1),{d:t,e:a,i:n}}function yn(e,t,n,i){var r=e.d,o=r.length-e.i;if(t=g(t)?Math.min(Math.max(n,o),i):+t,n=t+e.i,i=r[n],n>0){r.splice(Math.max(e.i,n));for(var a=n;a<r.length;a++)r[a]=0}else for(o=Math.max(0,o),e.i=1,r.length=Math.max(1,n=t+1),r[0]=0,a=1;n>a;a++)r[a]=0;if(i>=5)if(0>n-1){for(i=0;i>n;i--)r.unshift(0),e.i++;r.unshift(1),e.i++}else r[n-1]++;for(;o<Math.max(0,t);o++)r.push(0);(t=r.reduceRight(function(e,t,n,i){return t+=e,i[n]=t%10,Math.floor(t/10)},0))&&(r.unshift(t),e.i++)}function wn(e,t,n,i,r){if(!y(e)&&!w(e)||isNaN(e))return"";var o=!isFinite(e),a=!1,s=Math.abs(e)+"",l="";if(o)l="∞";else{for(a=$n(s),yn(a,r,t.minFrac,t.maxFrac),l=a.d,s=a.i,r=a.e,o=[],a=l.reduce(function(e,t){return e&&!t},!0);0>s;)l.unshift(0),s++;for(s>0?o=l.splice(s,l.length):(o=l,l=[0]),s=[],l.length>=t.lgSize&&s.unshift(l.splice(-t.lgSize,l.length).join(""));l.length>t.gSize;)s.unshift(l.splice(-t.gSize,l.length).join(""));l.length&&s.unshift(l.join("")),l=s.join(n),o.length&&(l+=i+o.join("")),r&&(l+="e+"+r)}return 0>e&&!a?t.negPre+l+t.negSuf:t.posPre+l+t.posSuf}function xn(e,t,n,i){var r="";for((0>e||i&&0>=e)&&(i?e=-e+1:(e=-e,r="-")),e=""+e;e.length<t;)e=Pr+e;return n&&(e=e.substr(e.length-t)),r+e}function Sn(e,t,n,i,r){return n=n||0,function(o){return o=o["get"+e](),(n>0||o>-n)&&(o+=n),0===o&&-12==n&&(o=12),xn(o,t,i,r)}}function Cn(e,t,n){return function(i,r){var o=i["get"+e](),a=Kn((n?"STANDALONE":"")+(t?"SHORT":"")+e);return r[a][o]}}function kn(e){var t=new Date(e,0,1).getDay();return new Date(e,0,(4>=t?5:12)-t)}function En(e){return function(t){var n=kn(t.getFullYear());return t=+new Date(t.getFullYear(),t.getMonth(),t.getDate()+(4-t.getDay()))-+n,t=1+Math.round(t/6048e5),xn(t,e)}}function Tn(e,t){return 0>=e.getFullYear()?t.ERAS[0]:t.ERAS[1]}function Pn(e){function t(e){var t;if(t=e.match(n)){e=new Date(0);var i=0,r=0,o=t[8]?e.setUTCFullYear:e.setFullYear,a=t[8]?e.setUTCHours:e.setHours;t[9]&&(i=c(t[9]+t[10]),r=c(t[9]+t[11])),o.call(e,c(t[1]),c(t[2])-1,c(t[3])),i=c(t[4]||0)-i,r=c(t[5]||0)-r,o=c(t[6]||0),t=Math.round(1e3*parseFloat("0."+(t[7]||0))),a.call(e,i,r,o,t)}return e}var n=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(n,r,o){var a,s,l="",u=[];if(r=r||"mediumDate",r=e.DATETIME_FORMATS[r]||r,y(n)&&(n=Mr.test(n)?c(n):t(n)),w(n)&&(n=new Date(n)),!x(n)||!isFinite(n.getTime()))return n;for(;r;)(s=Ar.exec(r))?(u=L(u,s,1),r=u.pop()):(u.push(r),r=null);var p=n.getTimezoneOffset();return o&&(p=q(o,p),n=H(n,o,!0)),i(u,function(t){a=Dr[t],l+=a?a(n,e.DATETIME_FORMATS,p):"''"===t?"'":t.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),l}}function Dn(){return function(e,t){return g(t)&&(t=2),j(e,t)}}function An(){return function(e,t,n){return t=1/0===Math.abs(Number(t))?Number(t):c(t),isNaN(t)?e:(w(e)&&(e=e.toString()),oi(e)||y(e)?(n=!n||isNaN(n)?0:c(n),n=0>n?Math.max(0,e.length+n):n,t>=0?e.slice(n,n+t):0===n?e.slice(t,e.length):e.slice(Math.max(0,n+t),n)):e)}}function Mn(e){function i(t,n){return n=n?-1:1,t.map(function(t){var i=1,r=f;if(S(t))r=t;else if(y(t)&&("+"!=t.charAt(0)&&"-"!=t.charAt(0)||(i="-"==t.charAt(0)?-1:1,t=t.substring(1)),""!==t&&(r=e(t),r.constant)))var o=r(),r=function(e){return e[o]};return{get:r,descending:i*n}})}function r(e){switch(typeof e){case"number":case"boolean":case"string":return!0;default:return!1}}return function(e,o,a){if(null==e)return e;if(!n(e))throw t("orderBy")("notarray",e);oi(o)||(o=[o]),0===o.length&&(o=["+"]);var s=i(o,a);return s.push({get:function(){return{}},descending:a?-1:1}),e=Array.prototype.map.call(e,function(e,t){return{value:e,predicateValues:s.map(function(n){var i=n.get(e);return n=typeof i,null===i?(n="string",i="null"):"string"===n?i=i.toLowerCase():"object"===n&&("function"==typeof i.valueOf&&(i=i.valueOf(),r(i))||m(i)&&(i=i.toString(),r(i))||(i=t)),{value:i,type:n}})}}),e.sort(function(e,t){for(var n=0,i=0,r=s.length;r>i;++i){var n=e.predicateValues[i],o=t.predicateValues[i],a=0;if(n.type===o.type?n.value!==o.value&&(a=n.value<o.value?-1:1):a=n.type<o.type?-1:1,n=a*s[i].descending)break}return n}),e=e.map(function(e){return e.value})}}function On(e){return S(e)&&(e={link:e}),e.restrict=e.restrict||"AC",h(e)}function Rn(e,t,n,r,o){var a=this,s=[];a.$error={},a.$$success={},a.$pending=void 0,a.$name=o(t.name||t.ngForm||"")(n),a.$dirty=!1,a.$pristine=!0,a.$valid=!0,a.$invalid=!1,a.$submitted=!1,a.$$parentForm=Lr,a.$rollbackViewValue=function(){i(s,function(e){e.$rollbackViewValue()})},a.$commitViewValue=function(){i(s,function(e){e.$commitViewValue()})},a.$addControl=function(e){re(e.$name,"input"),s.push(e),e.$name&&(a[e.$name]=e),e.$$parentForm=a},a.$$renameControl=function(e,t){var n=e.$name;a[n]===e&&delete a[n],a[t]=e,e.$name=t},a.$removeControl=function(e){e.$name&&a[e.$name]===e&&delete a[e.$name],i(a.$pending,function(t,n){a.$setValidity(n,null,e)}),i(a.$error,function(t,n){a.$setValidity(n,null,e)}),i(a.$$success,function(t,n){a.$setValidity(n,null,e)}),O(s,e),e.$$parentForm=Lr},qn({ctrl:this,$element:e,set:function(e,t,n){var i=e[t];i?-1===i.indexOf(n)&&i.push(n):e[t]=[n]},unset:function(e,t,n){var i=e[t];i&&(O(i,n),0===i.length&&delete e[t])},$animate:r}),a.$setDirty=function(){r.removeClass(e,$o),r.addClass(e,yo),a.$dirty=!0,a.$pristine=!1,a.$$parentForm.$setDirty()},a.$setPristine=function(){r.setClass(e,$o,yo+" ng-submitted"),a.$dirty=!1,a.$pristine=!0,a.$submitted=!1,i(s,function(e){e.$setPristine()})},a.$setUntouched=function(){i(s,function(e){e.$setUntouched()})},a.$setSubmitted=function(){r.addClass(e,"ng-submitted"),a.$submitted=!0,a.$$parentForm.$setSubmitted()}}function In(e){e.$formatters.push(function(t){return e.$isEmpty(t)?t:t.toString()})}function Nn(e,t,n,i,r,o){var a=Yn(t[0].type);if(!r.android){var s=!1;t.on("compositionstart",function(){s=!0}),t.on("compositionend",function(){s=!1,u()})}var l,u=function(e){if(l&&(o.defer.cancel(l),l=null),!s){var r=t.val();e=e&&e.type,"password"===a||n.ngTrim&&"false"===n.ngTrim||(r=si(r)),(i.$viewValue!==r||""===r&&i.$$hasNativeValidators)&&i.$setViewValue(r,e)}};if(r.hasEvent("input"))t.on("input",u);else{var c=function(e,t,n){l||(l=o.defer(function(){l=null,t&&t.value===n||u(e)}))};t.on("keydown",function(e){var t=e.keyCode;91===t||t>15&&19>t||t>=37&&40>=t||c(e,this,this.value)}),r.hasEvent("paste")&&t.on("paste cut",c)}t.on("change",u),Yr[a]&&i.$$hasNativeValidators&&a===n.type&&t.on("keydown wheel mousedown",function(e){if(!l){var t=this.validity,n=t.badInput,i=t.typeMismatch;l=o.defer(function(){l=null,t.badInput===n&&t.typeMismatch===i||u(e)})}}),i.$render=function(){var e=i.$isEmpty(i.$viewValue)?"":i.$viewValue;t.val()!==e&&t.val(e)}}function Ln(e,t){return function(n,r){var o,a;if(x(n))return n;if(y(n)){if('"'==n.charAt(0)&&'"'==n.charAt(n.length-1)&&(n=n.substring(1,n.length-1)),_r.test(n))return new Date(n);if(e.lastIndex=0,o=e.exec(n))return o.shift(),a=r?{yyyy:r.getFullYear(),MM:r.getMonth()+1,dd:r.getDate(),HH:r.getHours(),mm:r.getMinutes(),ss:r.getSeconds(),sss:r.getMilliseconds()/1e3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},i(o,function(e,n){n<t.length&&(a[t[n]]=+e)}),new Date(a.yyyy,a.MM-1,a.dd,a.HH,a.mm,a.ss||0,1e3*a.sss||0)}return NaN}}function Un(e,t,n,i){return function(r,o,a,s,l,u,c){function p(e){return e&&!(e.getTime&&e.getTime()!==e.getTime())}function d(e){return v(e)&&!x(e)?n(e)||void 0:e}Fn(r,o,a,s),Nn(r,o,a,s,l,u);var f,h=s&&s.$options&&s.$options.timezone;if(s.$$parserName=e,s.$parsers.push(function(e){return s.$isEmpty(e)?null:t.test(e)?(e=n(e,f),h&&(e=H(e,h)),e):void 0}),s.$formatters.push(function(e){if(e&&!x(e))throw xo("datefmt",e);return p(e)?((f=e)&&h&&(f=H(f,h,!0)),c("date")(e,i,h)):(f=null,"")}),v(a.min)||a.ngMin){var m;s.$validators.min=function(e){return!p(e)||g(m)||n(e)>=m},a.$observe("min",function(e){m=d(e),s.$validate()})}if(v(a.max)||a.ngMax){var b;s.$validators.max=function(e){return!p(e)||g(b)||n(e)<=b},a.$observe("max",function(e){b=d(e),s.$validate()})}}}function Fn(e,t,n,i){(i.$$hasNativeValidators=b(t[0].validity))&&i.$parsers.push(function(e){var n=t.prop("validity")||{};return n.badInput||n.typeMismatch?void 0:e})}function jn(e,t,n,i,r){if(v(i)){if(e=e(i),!e.constant)throw xo("constexpr",n,i);return e(t)}return r}function _n(e,t){return e="ngClass"+e,["$animate",function(n){function r(e,t){var n=[],i=0;e:for(;i<e.length;i++){for(var r=e[i],o=0;o<t.length;o++)if(r==t[o])continue e;n.push(r)}return n}function o(e){var t=[];return oi(e)?(i(e,function(e){t=t.concat(o(e))}),t):y(e)?e.split(" "):b(e)?(i(e,function(e,n){e&&(t=t.concat(n.split(" ")))}),t):e}return{restrict:"AC",link:function(a,s,l){function u(e){e=c(e,1),l.$addClass(e)}function c(e,t){var n=s.data("$classCounts")||se(),r=[];return i(e,function(e){(t>0||n[e])&&(n[e]=(n[e]||0)+t,n[e]===+(t>0)&&r.push(e))}),s.data("$classCounts",n),r.join(" ")}function p(e,t){var i=r(t,e),o=r(e,t),i=c(i,1),o=c(o,-1);i&&i.length&&n.addClass(s,i),o&&o.length&&n.removeClass(s,o)}function d(e){if(!0===t||(1&a.$index)===t){var n=o(e||[]);if(f){if(!N(e,f)){var i=o(f);p(i,n)}}else u(n)}f=oi(e)?e.map(function(e){return I(e)}):I(e)}var f;a.$watch(l[e],d,!0),l.$observe("class",function(t){d(a.$eval(l[e]))}),"ngClass"!==e&&a.$watch("$index",function(n,i){var r=1&n;if(r!==(1&i)){var s=o(a.$eval(l[e]));r===t?u(s):(r=c(s,-1),l.$removeClass(r))}})}}}]}function qn(e){function t(e,t){t&&!o[e]?(l.addClass(r,e),o[e]=!0):!t&&o[e]&&(l.removeClass(r,e),o[e]=!1)}function n(e,n){e=e?"-"+ee(e,"-"):"",t(vo+e,!0===n),t(bo+e,!1===n)}var i=e.ctrl,r=e.$element,o={},a=e.set,s=e.unset,l=e.$animate;o[bo]=!(o[vo]=r.hasClass(vo)),i.$setValidity=function(e,r,o){g(r)?(i.$pending||(i.$pending={}),a(i.$pending,e,o)):(i.$pending&&s(i.$pending,e,o),Hn(i.$pending)&&(i.$pending=void 0)),T(r)?r?(s(i.$error,e,o),a(i.$$success,e,o)):(a(i.$error,e,o),s(i.$$success,e,o)):(s(i.$error,e,o),s(i.$$success,e,o)),i.$pending?(t(wo,!0),i.$valid=i.$invalid=void 0,n("",null)):(t(wo,!1),i.$valid=Hn(i.$error),i.$invalid=!i.$valid,n("",i.$valid)),r=i.$pending&&i.$pending[e]?void 0:i.$error[e]?!1:i.$$success[e]?!0:null,n(e,r),i.$$parentForm.$setValidity(e,r,i)}}function Hn(e){if(e)for(var t in e)if(e.hasOwnProperty(t))return!1;
return!0}var zn,Vn,Bn,Wn,Gn=/^\/(.+)\/([a-z]*)$/,Xn=Object.prototype.hasOwnProperty,Yn=function(e){return y(e)?e.toLowerCase():e},Kn=function(e){return y(e)?e.toUpperCase():e},Jn=[].slice,Qn=[].splice,Zn=[].push,ei=Object.prototype.toString,ti=Object.getPrototypeOf,ni=t("ng"),ii=e.angular||(e.angular={}),ri=0;zn=e.document.documentMode,d.$inject=[],f.$inject=[];var oi=Array.isArray,ai=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,si=function(e){return y(e)?e.trim():e},li=function(e){return e.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},ui=function(){if(!v(ui.rules)){var t=e.document.querySelector("[ng-csp]")||e.document.querySelector("[data-ng-csp]");if(t){var n=t.getAttribute("ng-csp")||t.getAttribute("data-ng-csp");ui.rules={noUnsafeEval:!n||-1!==n.indexOf("no-unsafe-eval"),noInlineStyle:!n||-1!==n.indexOf("no-inline-style")}}else{t=ui;try{new Function(""),n=!1}catch(i){n=!0}t.rules={noUnsafeEval:n,noInlineStyle:!1}}}return ui.rules},ci=function(){if(v(ci.name_))return ci.name_;var t,n,i,r,o=di.length;for(n=0;o>n;++n)if(i=di[n],t=e.document.querySelector("["+i.replace(":","\\:")+"jq]")){r=t.getAttribute(i+"jq");break}return ci.name_=r},pi=/:/g,di=["ng-","data-ng-","ng:","x-ng-"],fi=/[A-Z]/g,hi=!1,mi=3,gi={full:"1.5.6",major:1,minor:5,dot:6,codeName:"arrow-stringification"};he.expando="ng339";var vi=he.cache={},bi=1;he._data=function(e){return this.cache[e[this.expando]]||{}};var $i=/([\:\-\_]+(.))/g,yi=/^moz([A-Z])/,wi={mouseleave:"mouseout",mouseenter:"mouseover"},xi=t("jqLite"),Si=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Ci=/<|&#?\w+;/,ki=/<([\w:-]+)/,Ei=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,Ti={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Ti.optgroup=Ti.option,Ti.tbody=Ti.tfoot=Ti.colgroup=Ti.caption=Ti.thead,Ti.th=Ti.td;var Pi=e.Node.prototype.contains||function(e){return!!(16&this.compareDocumentPosition(e))},Di=he.prototype={ready:function(t){function n(){i||(i=!0,t())}var i=!1;"complete"===e.document.readyState?e.setTimeout(n):(this.on("DOMContentLoaded",n),he(e).on("load",n))},toString:function(){var e=[];return i(this,function(t){e.push(""+t)}),"["+e.join(", ")+"]"},eq:function(e){return Vn(e>=0?this[e]:this[this.length+e])},length:0,push:Zn,sort:[].sort,splice:[].splice},Ai={};i("multiple selected checked disabled readOnly required open".split(" "),function(e){Ai[Yn(e)]=e});var Mi={};i("input select option textarea button form details".split(" "),function(e){Mi[e]=!0});var Oi={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};i({data:ye,removeData:be,hasData:function(e){for(var t in vi[e.ng339])return!0;return!1},cleanData:function(e){for(var t=0,n=e.length;n>t;t++)be(e[t])}},function(e,t){he[t]=e}),i({data:ye,inheritedData:Ee,scope:function(e){return Vn.data(e,"$scope")||Ee(e.parentNode||e,["$isolateScope","$scope"])},isolateScope:function(e){return Vn.data(e,"$isolateScope")||Vn.data(e,"$isolateScopeNoTemplate")},controller:ke,injector:function(e){return Ee(e,"$injector")},removeAttr:function(e,t){e.removeAttribute(t)},hasClass:we,css:function(e,t,n){return t=ce(t),v(n)?void(e.style[t]=n):e.style[t]},attr:function(e,t,n){var i=e.nodeType;if(i!==mi&&2!==i&&8!==i)if(i=Yn(t),Ai[i]){if(!v(n))return e[t]||(e.attributes.getNamedItem(t)||d).specified?i:void 0;n?(e[t]=!0,e.setAttribute(t,i)):(e[t]=!1,e.removeAttribute(i))}else if(v(n))e.setAttribute(t,n);else if(e.getAttribute)return e=e.getAttribute(t,2),null===e?void 0:e},prop:function(e,t,n){return v(n)?void(e[t]=n):e[t]},text:function(){function e(e,t){if(g(t)){var n=e.nodeType;return 1===n||n===mi?e.textContent:""}e.textContent=t}return e.$dv="",e}(),val:function(e,t){if(g(t)){if(e.multiple&&"select"===M(e)){var n=[];return i(e.options,function(e){e.selected&&n.push(e.value||e.text)}),0===n.length?null:n}return e.value}e.value=t},html:function(e,t){return g(t)?e.innerHTML:(ge(e,!0),void(e.innerHTML=t))},empty:Te},function(e,t){he.prototype[t]=function(t,n){var i,r,o=this.length;if(e!==Te&&g(2==e.length&&e!==we&&e!==ke?t:n)){if(b(t)){for(i=0;o>i;i++)if(e===ye)e(this[i],t);else for(r in t)e(this[i],r,t[r]);return this}for(i=e.$dv,o=g(i)?Math.min(o,1):o,r=0;o>r;r++){var a=e(this[r],t,n);i=i?i+a:a}return i}for(i=0;o>i;i++)e(this[i],t,n);return this}}),i({removeData:be,on:function(e,t,n,i){if(v(i))throw xi("onargs");if(pe(e)){i=$e(e,!0);var r=i.events,o=i.handle;o||(o=i.handle=Me(e,r)),i=0<=t.indexOf(" ")?t.split(" "):[t];for(var a=i.length,s=function(t,i,a){var s=r[t];s||(s=r[t]=[],s.specialHandlerWrapper=i,"$destroy"===t||a||e.addEventListener(t,o,!1)),s.push(n)};a--;)t=i[a],wi[t]?(s(wi[t],Re),s(t,void 0,!0)):s(t)}},off:ve,one:function(e,t,n){e=Vn(e),e.on(t,function i(){e.off(t,n),e.off(t,i)}),e.on(t,n)},replaceWith:function(e,t){var n,r=e.parentNode;ge(e),i(new he(t),function(t){n?r.insertBefore(t,n.nextSibling):r.replaceChild(t,e),n=t})},children:function(e){var t=[];return i(e.childNodes,function(e){1===e.nodeType&&t.push(e)}),t},contents:function(e){return e.contentDocument||e.childNodes||[]},append:function(e,t){var n=e.nodeType;if(1===n||11===n){t=new he(t);for(var n=0,i=t.length;i>n;n++)e.appendChild(t[n])}},prepend:function(e,t){if(1===e.nodeType){var n=e.firstChild;i(new he(t),function(t){e.insertBefore(t,n)})}},wrap:function(e,t){fe(e,Vn(t).eq(0).clone()[0])},remove:Pe,detach:function(e){Pe(e,!0)},after:function(e,t){var n=e,i=e.parentNode;t=new he(t);for(var r=0,o=t.length;o>r;r++){var a=t[r];i.insertBefore(a,n.nextSibling),n=a}},addClass:Se,removeClass:xe,toggleClass:function(e,t,n){t&&i(t.split(" "),function(t){var i=n;g(i)&&(i=!we(e,t)),(i?Se:xe)(e,t)})},parent:function(e){return(e=e.parentNode)&&11!==e.nodeType?e:null},next:function(e){return e.nextElementSibling},find:function(e,t){return e.getElementsByTagName?e.getElementsByTagName(t):[]},clone:me,triggerHandler:function(e,t,n){var r,o,a=t.type||t,s=$e(e);(s=(s=s&&s.events)&&s[a])&&(r={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:d,type:a,target:e},t.type&&(r=l(r,t)),t=I(s),o=n?[r].concat(n):[r],i(t,function(t){r.isImmediatePropagationStopped()||t.apply(e,o)}))}},function(e,t){he.prototype[t]=function(t,n,i){for(var r,o=0,a=this.length;a>o;o++)g(r)?(r=e(this[o],t,n,i),v(r)&&(r=Vn(r))):Ce(r,e(this[o],t,n,i));return v(r)?r:this},he.prototype.bind=he.prototype.on,he.prototype.unbind=he.prototype.off}),Le.prototype={put:function(e,t){this[Ne(e,this.nextUid)]=t},get:function(e){return this[Ne(e,this.nextUid)]},remove:function(e){var t=this[e=Ne(e,this.nextUid)];return delete this[e],t}};var Ri=[function(){this.$get=[function(){return Le}]}],Ii=/^([^\(]+?)=>/,Ni=/^[^\(]*\(\s*([^\)]*)\)/m,Li=/,/,Ui=/^\s*(_?)(\S+?)\1\s*$/,Fi=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,ji=t("$injector");je.$$annotate=function(e,t,n){var r;if("function"==typeof e){if(!(r=e.$inject)){if(r=[],e.length){if(t)throw y(n)&&n||(n=e.name||Fe(e)),ji("strictdi",n);t=Ue(e),i(t[1].split(Li),function(e){e.replace(Ui,function(e,t,n){r.push(n)})})}e.$inject=r}}else oi(e)?(t=e.length-1,ie(e[t],"fn"),r=e.slice(0,t)):ie(e,"fn",!0);return r};var _i=t("$animate"),qi=function(){this.$get=d},Hi=function(){var e=new Le,t=[];this.$get=["$$AnimateRunner","$rootScope",function(n,r){function o(e,t,n){var r=!1;return t&&(t=y(t)?t.split(" "):oi(t)?t:[],i(t,function(t){t&&(r=!0,e[t]=n)})),r}function a(){i(t,function(t){var n=e.get(t);if(n){var r=He(t.attr("class")),o="",a="";i(n,function(e,t){e!==!!r[t]&&(e?o+=(o.length?" ":"")+t:a+=(a.length?" ":"")+t)}),i(t,function(e){o&&Se(e,o),a&&xe(e,a)}),e.remove(t)}}),t.length=0}return{enabled:d,on:d,off:d,pin:d,push:function(i,s,l,u){return u&&u(),l=l||{},l.from&&i.css(l.from),l.to&&i.css(l.to),(l.addClass||l.removeClass)&&(s=l.addClass,u=l.removeClass,l=e.get(i)||{},s=o(l,s,!0),u=o(l,u,!1),(s||u)&&(e.put(i,l),t.push(i),1===t.length&&r.$$postDigest(a))),i=new n,i.complete(),i}}}]},zi=["$provide",function(e){var t=this;this.$$registeredAnimations=Object.create(null),this.register=function(n,i){if(n&&"."!==n.charAt(0))throw _i("notcsel",n);var r=n+"-animation";t.$$registeredAnimations[n.substr(1)]=r,e.factory(r,i)},this.classNameFilter=function(e){if(1===arguments.length&&(this.$$classNameFilter=e instanceof RegExp?e:null)&&/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw _i("nongcls","ng-animate");return this.$$classNameFilter},this.$get=["$$animateQueue",function(e){function t(e,t,n){if(n){var i;e:{for(i=0;i<n.length;i++){var r=n[i];if(1===r.nodeType){i=r;break e}}i=void 0}!i||i.parentNode||i.previousElementSibling||(n=null)}n?n.after(e):t.prepend(e)}return{on:e.on,off:e.off,pin:e.pin,enabled:e.enabled,cancel:function(e){e.end&&e.end()},enter:function(n,i,r,o){return i=i&&Vn(i),r=r&&Vn(r),i=i||r.parent(),t(n,i,r),e.push(n,"enter",ze(o))},move:function(n,i,r,o){return i=i&&Vn(i),r=r&&Vn(r),i=i||r.parent(),t(n,i,r),e.push(n,"move",ze(o))},leave:function(t,n){return e.push(t,"leave",ze(n),function(){t.remove()})},addClass:function(t,n,i){return i=ze(i),i.addClass=qe(i.addclass,n),e.push(t,"addClass",i)},removeClass:function(t,n,i){return i=ze(i),i.removeClass=qe(i.removeClass,n),e.push(t,"removeClass",i)},setClass:function(t,n,i,r){return r=ze(r),r.addClass=qe(r.addClass,n),r.removeClass=qe(r.removeClass,i),e.push(t,"setClass",r)},animate:function(t,n,i,r,o){return o=ze(o),o.from=o.from?l(o.from,n):n,o.to=o.to?l(o.to,i):i,o.tempClasses=qe(o.tempClasses,r||"ng-inline-animate"),e.push(t,"animate",o)}}}]}],Vi=function(){this.$get=["$$rAF",function(e){function t(t){n.push(t),1<n.length||e(function(){for(var e=0;e<n.length;e++)n[e]();n=[]})}var n=[];return function(){var e=!1;return t(function(){e=!0}),function(n){e?n():t(n)}}}]},Bi=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(e,t,n,r,o){function a(e){this.setHost(e);var t=n();this._doneCallbacks=[],this._tick=function(e){var n=r[0];n&&n.hidden?o(e,0,!1):t(e)},this._state=0}return a.chain=function(e,t){function n(){i===e.length?t(!0):e[i](function(e){!1===e?t(!1):(i++,n())})}var i=0;n()},a.all=function(e,t){function n(n){o=o&&n,++r===e.length&&t(o)}var r=0,o=!0;i(e,function(e){e.done(n)})},a.prototype={setHost:function(e){this.host=e||{}},done:function(e){2===this._state?e():this._doneCallbacks.push(e)},progress:d,getPromise:function(){if(!this.promise){var t=this;this.promise=e(function(e,n){t.done(function(t){!1===t?n():e()})})}return this.promise},then:function(e,t){return this.getPromise().then(e,t)},"catch":function(e){return this.getPromise()["catch"](e)},"finally":function(e){return this.getPromise()["finally"](e)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end(),this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel(),this._resolve(!1)},complete:function(e){var t=this;0===t._state&&(t._state=1,t._tick(function(){t._resolve(e)}))},_resolve:function(e){2!==this._state&&(i(this._doneCallbacks,function(t){t(e)}),this._doneCallbacks.length=0,this._state=2)}},a}]},Wi=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(e,t,n){return function(t,i){function r(){return e(function(){o.addClass&&(t.addClass(o.addClass),o.addClass=null),o.removeClass&&(t.removeClass(o.removeClass),o.removeClass=null),o.to&&(t.css(o.to),o.to=null),a||s.complete(),a=!0}),s}var o=i||{};o.$$prepared||(o=R(o)),o.cleanupStyles&&(o.from=o.to=null),o.from&&(t.css(o.from),o.from=null);var a,s=new n;return{start:r,end:r}}}]},Gi=t("$compile"),Xi=new function(){};Xe.$inject=["$provide","$$sanitizeUriProvider"],Ye.prototype.isFirstChange=function(){return this.previousValue===Xi};var Yi=/^((?:x|data)[\:\-_])/i,Ki=t("$controller"),Ji=/^(\S+)(\s+as\s+([\w$]+))?$/,Qi=function(){this.$get=["$document",function(e){return function(t){return t?!t.nodeType&&t instanceof Vn&&(t=t[0]):t=e[0].body,t.offsetWidth+1}}]},Zi="application/json",er={"Content-Type":Zi+";charset=utf-8"},tr=/^\[|^\{(?!\{)/,nr={"[":/]$/,"{":/}$/},ir=/^\)\]\}',?\n/,rr=t("$http"),or=function(e){return function(){throw rr("legacy",e)}},ar=ii.$interpolateMinErr=t("$interpolate");ar.throwNoconcat=function(e){throw ar("noconcat",e)},ar.interr=function(e,t){return ar("interr",e,t.toString())};var sr=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,lr={http:80,https:443,ftp:21},ur=t("$location"),cr={$$html5:!1,$$replace:!1,absUrl:kt("$$absUrl"),url:function(e){if(g(e))return this.$$url;var t=sr.exec(e);return(t[1]||""===e)&&this.path(decodeURIComponent(t[1])),(t[2]||t[1]||""===e)&&this.search(t[3]||""),this.hash(t[5]||""),this},protocol:kt("$$protocol"),host:kt("$$host"),port:kt("$$port"),path:Et("$$path",function(e){return e=null!==e?e.toString():"","/"==e.charAt(0)?e:"/"+e}),search:function(e,t){switch(arguments.length){case 0:return this.$$search;case 1:if(y(e)||w(e))e=e.toString(),this.$$search=B(e);else{if(!b(e))throw ur("isrcharg");e=R(e,{}),i(e,function(t,n){null==t&&delete e[n]}),this.$$search=e}break;default:g(t)||null===t?delete this.$$search[e]:this.$$search[e]=t}return this.$$compose(),this},hash:Et("$$hash",function(e){return null!==e?e.toString():""}),replace:function(){return this.$$replace=!0,this}};i([Ct,St,xt],function(e){e.prototype=Object.create(cr),e.prototype.state=function(t){if(!arguments.length)return this.$$state;if(e!==xt||!this.$$html5)throw ur("nostate");return this.$$state=g(t)?null:t,this}});var pr=t("$parse"),dr=Function.prototype.call,fr=Function.prototype.apply,hr=Function.prototype.bind,mr=se();i("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(e){mr[e]=!0});var gr={n:"\n",f:"\f",r:"\r",t:"	",v:"\x0B","'":"'",'"':'"'},vr=function(e){this.options=e};vr.prototype={constructor:vr,lex:function(e){for(this.text=e,this.index=0,this.tokens=[];this.index<this.text.length;)if(e=this.text.charAt(this.index),'"'===e||"'"===e)this.readString(e);else if(this.isNumber(e)||"."===e&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(e,"(){}[].,;:?"))this.tokens.push({index:this.index,text:e}),this.index++;else if(this.isWhitespace(e))this.index++;else{var t=e+this.peek(),n=t+this.peek(2),i=mr[t],r=mr[n];mr[e]||i||r?(e=r?n:i?t:e,this.tokens.push({index:this.index,text:e,operator:!0}),this.index+=e.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(e,t){return-1!==t.indexOf(e)},peek:function(e){return e=e||1,this.index+e<this.text.length?this.text.charAt(this.index+e):!1},isNumber:function(e){return e>="0"&&"9">=e&&"string"==typeof e},isWhitespace:function(e){return" "===e||"\r"===e||"	"===e||"\n"===e||"\x0B"===e||" "===e},isIdentifierStart:function(e){return this.options.isIdentifierStart?this.options.isIdentifierStart(e,this.codePointAt(e)):this.isValidIdentifierStart(e)},isValidIdentifierStart:function(e){return e>="a"&&"z">=e||e>="A"&&"Z">=e||"_"===e||"$"===e},isIdentifierContinue:function(e){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(e,this.codePointAt(e)):this.isValidIdentifierContinue(e)},isValidIdentifierContinue:function(e,t){return this.isValidIdentifierStart(e,t)||this.isNumber(e)},codePointAt:function(e){return 1===e.length?e.charCodeAt(0):(e.charCodeAt(0)<<10)+e.charCodeAt(1)-56613888},peekMultichar:function(){var e=this.text.charAt(this.index),t=this.peek();if(!t)return e;var n=e.charCodeAt(0),i=t.charCodeAt(0);return n>=55296&&56319>=n&&i>=56320&&57343>=i?e+t:e},isExpOperator:function(e){return"-"===e||"+"===e||this.isNumber(e)},throwError:function(e,t,n){throw n=n||this.index,t=v(t)?"s "+t+"-"+this.index+" ["+this.text.substring(t,n)+"]":" "+n,pr("lexerr",e,t,this.text)},readNumber:function(){for(var e="",t=this.index;this.index<this.text.length;){var n=Yn(this.text.charAt(this.index));if("."==n||this.isNumber(n))e+=n;else{var i=this.peek();if("e"==n&&this.isExpOperator(i))e+=n;else if(this.isExpOperator(n)&&i&&this.isNumber(i)&&"e"==e.charAt(e.length-1))e+=n;else{if(!this.isExpOperator(n)||i&&this.isNumber(i)||"e"!=e.charAt(e.length-1))break;this.throwError("Invalid exponent")}}this.index++}this.tokens.push({index:t,text:e,constant:!0,value:Number(e)})},readIdent:function(){var e=this.index;for(this.index+=this.peekMultichar().length;this.index<this.text.length;){var t=this.peekMultichar();if(!this.isIdentifierContinue(t))break;this.index+=t.length}this.tokens.push({index:e,text:this.text.slice(e,this.index),identifier:!0})},readString:function(e){var t=this.index;this.index++;for(var n="",i=e,r=!1;this.index<this.text.length;){var o=this.text.charAt(this.index),i=i+o;if(r)"u"===o?(r=this.text.substring(this.index+1,this.index+5),r.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+r+"]"),this.index+=4,n+=String.fromCharCode(parseInt(r,16))):n+=gr[o]||o,r=!1;else if("\\"===o)r=!0;else{if(o===e)return this.index++,void this.tokens.push({index:t,text:i,constant:!0,value:n});n+=o}this.index++}this.throwError("Unterminated quote",t)}};var br=function(e,t){this.lexer=e,this.options=t};br.Program="Program",br.ExpressionStatement="ExpressionStatement",br.AssignmentExpression="AssignmentExpression",br.ConditionalExpression="ConditionalExpression",br.LogicalExpression="LogicalExpression",br.BinaryExpression="BinaryExpression",br.UnaryExpression="UnaryExpression",br.CallExpression="CallExpression",br.MemberExpression="MemberExpression",br.Identifier="Identifier",br.Literal="Literal",br.ArrayExpression="ArrayExpression",br.Property="Property",br.ObjectExpression="ObjectExpression",br.ThisExpression="ThisExpression",br.LocalsExpression="LocalsExpression",br.NGValueParameter="NGValueParameter",br.prototype={ast:function(e){return this.text=e,this.tokens=this.lexer.lex(e),e=this.program(),0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]),e},program:function(){for(var e=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&e.push(this.expressionStatement()),!this.expect(";"))return{type:br.Program,body:e}},expressionStatement:function(){return{type:br.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var e=this.expression();this.expect("|");)e=this.filter(e);return e},expression:function(){return this.assignment()},assignment:function(){var e=this.ternary();return this.expect("=")&&(e={type:br.AssignmentExpression,left:e,right:this.assignment(),operator:"="}),e},ternary:function(){var e,t,n=this.logicalOR();return this.expect("?")&&(e=this.expression(),this.consume(":"))?(t=this.expression(),{type:br.ConditionalExpression,test:n,alternate:e,consequent:t}):n},logicalOR:function(){for(var e=this.logicalAND();this.expect("||");)e={type:br.LogicalExpression,operator:"||",left:e,right:this.logicalAND()};return e},logicalAND:function(){for(var e=this.equality();this.expect("&&");)e={type:br.LogicalExpression,operator:"&&",left:e,right:this.equality()};return e},equality:function(){for(var e,t=this.relational();e=this.expect("==","!=","===","!==");)t={type:br.BinaryExpression,operator:e.text,left:t,right:this.relational()};return t},relational:function(){for(var e,t=this.additive();e=this.expect("<",">","<=",">=");)t={type:br.BinaryExpression,operator:e.text,left:t,right:this.additive()};return t},additive:function(){for(var e,t=this.multiplicative();e=this.expect("+","-");)t={type:br.BinaryExpression,operator:e.text,left:t,right:this.multiplicative()};return t},multiplicative:function(){for(var e,t=this.unary();e=this.expect("*","/","%");)t={type:br.BinaryExpression,operator:e.text,left:t,right:this.unary()};return t},unary:function(){var e;return(e=this.expect("+","-","!"))?{type:br.UnaryExpression,operator:e.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var e;this.expect("(")?(e=this.filterChain(),this.consume(")")):this.expect("[")?e=this.arrayDeclaration():this.expect("{")?e=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?e=R(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?e={type:br.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?e=this.identifier():this.peek().constant?e=this.constant():this.throwError("not a primary expression",this.peek());for(var t;t=this.expect("(","[",".");)"("===t.text?(e={type:br.CallExpression,callee:e,arguments:this.parseArguments()},this.consume(")")):"["===t.text?(e={type:br.MemberExpression,object:e,property:this.expression(),computed:!0},this.consume("]")):"."===t.text?e={type:br.MemberExpression,object:e,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return e},filter:function(e){e=[e];for(var t={type:br.CallExpression,callee:this.identifier(),arguments:e,filter:!0};this.expect(":");)e.push(this.expression());return t},parseArguments:function(){var e=[];if(")"!==this.peekToken().text)do e.push(this.expression());while(this.expect(","));return e},identifier:function(){var e=this.consume();return e.identifier||this.throwError("is not a valid identifier",e),{type:br.Identifier,name:e.text}},constant:function(){return{type:br.Literal,value:this.consume().value}},arrayDeclaration:function(){var e=[];if("]"!==this.peekToken().text)do{if(this.peek("]"))break;e.push(this.expression())}while(this.expect(","));return this.consume("]"),{type:br.ArrayExpression,elements:e}},object:function(){var e,t=[];if("}"!==this.peekToken().text)do{if(this.peek("}"))break;e={type:br.Property,kind:"init"},this.peek().constant?(e.key=this.constant(),e.computed=!1,this.consume(":"),e.value=this.expression()):this.peek().identifier?(e.key=this.identifier(),e.computed=!1,this.peek(":")?(this.consume(":"),e.value=this.expression()):e.value=e.key):this.peek("[")?(this.consume("["),e.key=this.expression(),this.consume("]"),e.computed=!0,this.consume(":"),e.value=this.expression()):this.throwError("invalid key",this.peek()),t.push(e)}while(this.expect(","));return this.consume("}"),{type:br.ObjectExpression,properties:t}},throwError:function(e,t){throw pr("syntax",t.text,e,t.index+1,this.text,this.text.substring(t.index))},consume:function(e){if(0===this.tokens.length)throw pr("ueoe",this.text);var t=this.expect(e);return t||this.throwError("is unexpected, expecting ["+e+"]",this.peek()),t},peekToken:function(){if(0===this.tokens.length)throw pr("ueoe",this.text);return this.tokens[0]},peek:function(e,t,n,i){return this.peekAhead(0,e,t,n,i)},peekAhead:function(e,t,n,i,r){if(this.tokens.length>e){e=this.tokens[e];var o=e.text;if(o===t||o===n||o===i||o===r||!(t||n||i||r))return e}return!1},expect:function(e,t,n,i){return(e=this.peek(e,t,n,i))?(this.tokens.shift(),e):!1},selfReferential:{"this":{type:br.ThisExpression},$locals:{type:br.LocalsExpression}}},qt.prototype={compile:function(e,t){var n=this,r=this.astBuilder.ast(e);this.state={nextId:0,filters:{},expensiveChecks:t,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]},Lt(r,n.$filter);var o,a="";return this.stage="assign",(o=jt(r))&&(this.state.computing="assign",a=this.nextId(),this.recurse(o,a),this.return_(a),a="fn.assign="+this.generateFunction("assign","s,v,l")),o=Ut(r.body),n.stage="inputs",i(o,function(e,t){var i="fn"+t;n.state[i]={vars:[],body:[],own:{}},n.state.computing=i;var r=n.nextId();n.recurse(e,r),n.return_(r),n.state.inputs.push(i),e.watchId=t}),this.state.computing="fn",this.stage="main",this.recurse(r),a='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+a+this.watchFns()+"return fn;",a=new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",a)(this.$filter,Dt,Mt,Ot,At,Rt,It,Nt,e),this.state=this.stage=void 0,a.literal=_t(r),a.constant=r.constant,a},USE:"use",STRICT:"strict",watchFns:function(){var e=[],t=this.state.inputs,n=this;return i(t,function(t){e.push("var "+t+"="+n.generateFunction(t,"s"))}),t.length&&e.push("fn.inputs=["+t.join(",")+"];"),e.join("")},generateFunction:function(e,t){return"function("+t+"){"+this.varsPrefix(e)+this.body(e)+"};"},filterPrefix:function(){var e=[],t=this;return i(this.state.filters,function(n,i){e.push(n+"=$filter("+t.escape(i)+")")}),e.length?"var "+e.join(",")+";":""},varsPrefix:function(e){return this.state[e].vars.length?"var "+this.state[e].vars.join(",")+";":""},body:function(e){return this.state[e].body.join("")},recurse:function(e,t,n,r,o,a){var s,l,u,c,p,f=this;if(r=r||d,!a&&v(e.watchId))t=t||this.nextId(),this.if_("i",this.lazyAssign(t,this.computedMember("i",e.watchId)),this.lazyRecurse(e,t,n,r,o,!0));else switch(e.type){case br.Program:i(e.body,function(t,n){f.recurse(t.expression,void 0,void 0,function(e){l=e}),n!==e.body.length-1?f.current().body.push(l,";"):f.return_(l)});break;case br.Literal:c=this.escape(e.value),this.assign(t,c),r(c);break;case br.UnaryExpression:this.recurse(e.argument,void 0,void 0,function(e){l=e}),c=e.operator+"("+this.ifDefined(l,0)+")",this.assign(t,c),r(c);break;case br.BinaryExpression:this.recurse(e.left,void 0,void 0,function(e){s=e}),this.recurse(e.right,void 0,void 0,function(e){l=e}),c="+"===e.operator?this.plus(s,l):"-"===e.operator?this.ifDefined(s,0)+e.operator+this.ifDefined(l,0):"("+s+")"+e.operator+"("+l+")",this.assign(t,c),r(c);break;case br.LogicalExpression:t=t||this.nextId(),f.recurse(e.left,t),f.if_("&&"===e.operator?t:f.not(t),f.lazyRecurse(e.right,t)),r(t);break;case br.ConditionalExpression:t=t||this.nextId(),f.recurse(e.test,t),f.if_(t,f.lazyRecurse(e.alternate,t),f.lazyRecurse(e.consequent,t)),r(t);break;case br.Identifier:t=t||this.nextId(),n&&(n.context="inputs"===f.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",e.name)+"?l:s"),n.computed=!1,n.name=e.name),Dt(e.name),f.if_("inputs"===f.stage||f.not(f.getHasOwnProperty("l",e.name)),function(){f.if_("inputs"===f.stage||"s",function(){o&&1!==o&&f.if_(f.not(f.nonComputedMember("s",e.name)),f.lazyAssign(f.nonComputedMember("s",e.name),"{}")),f.assign(t,f.nonComputedMember("s",e.name))})},t&&f.lazyAssign(t,f.nonComputedMember("l",e.name))),(f.state.expensiveChecks||zt(e.name))&&f.addEnsureSafeObject(t),r(t);break;case br.MemberExpression:s=n&&(n.context=this.nextId())||this.nextId(),t=t||this.nextId(),f.recurse(e.object,s,void 0,function(){f.if_(f.notNull(s),function(){o&&1!==o&&f.addEnsureSafeAssignContext(s),e.computed?(l=f.nextId(),f.recurse(e.property,l),f.getStringValue(l),f.addEnsureSafeMemberName(l),o&&1!==o&&f.if_(f.not(f.computedMember(s,l)),f.lazyAssign(f.computedMember(s,l),"{}")),c=f.ensureSafeObject(f.computedMember(s,l)),f.assign(t,c),n&&(n.computed=!0,n.name=l)):(Dt(e.property.name),o&&1!==o&&f.if_(f.not(f.nonComputedMember(s,e.property.name)),f.lazyAssign(f.nonComputedMember(s,e.property.name),"{}")),c=f.nonComputedMember(s,e.property.name),(f.state.expensiveChecks||zt(e.property.name))&&(c=f.ensureSafeObject(c)),f.assign(t,c),n&&(n.computed=!1,n.name=e.property.name))},function(){f.assign(t,"undefined")}),r(t)},!!o);break;case br.CallExpression:t=t||this.nextId(),e.filter?(l=f.filter(e.callee.name),u=[],i(e.arguments,function(e){var t=f.nextId();f.recurse(e,t),u.push(t)}),c=l+"("+u.join(",")+")",f.assign(t,c),r(t)):(l=f.nextId(),s={},u=[],f.recurse(e.callee,l,s,function(){f.if_(f.notNull(l),function(){f.addEnsureSafeFunction(l),i(e.arguments,function(e){f.recurse(e,f.nextId(),void 0,function(e){u.push(f.ensureSafeObject(e))})}),s.name?(f.state.expensiveChecks||f.addEnsureSafeObject(s.context),c=f.member(s.context,s.name,s.computed)+"("+u.join(",")+")"):c=l+"("+u.join(",")+")",c=f.ensureSafeObject(c),f.assign(t,c)},function(){f.assign(t,"undefined")}),r(t)}));break;case br.AssignmentExpression:if(l=this.nextId(),s={},!Ft(e.left))throw pr("lval");this.recurse(e.left,void 0,s,function(){f.if_(f.notNull(s.context),function(){f.recurse(e.right,l),f.addEnsureSafeObject(f.member(s.context,s.name,s.computed)),f.addEnsureSafeAssignContext(s.context),c=f.member(s.context,s.name,s.computed)+e.operator+l,f.assign(t,c),r(t||c)})},1);break;case br.ArrayExpression:u=[],i(e.elements,function(e){f.recurse(e,f.nextId(),void 0,function(e){u.push(e)})}),c="["+u.join(",")+"]",this.assign(t,c),r(c);break;case br.ObjectExpression:u=[],p=!1,i(e.properties,function(e){e.computed&&(p=!0)}),p?(t=t||this.nextId(),this.assign(t,"{}"),i(e.properties,function(e){e.computed?(s=f.nextId(),f.recurse(e.key,s)):s=e.key.type===br.Identifier?e.key.name:""+e.key.value,l=f.nextId(),f.recurse(e.value,l),f.assign(f.member(t,s,e.computed),l)})):(i(e.properties,function(t){f.recurse(t.value,e.constant?void 0:f.nextId(),void 0,function(e){u.push(f.escape(t.key.type===br.Identifier?t.key.name:""+t.key.value)+":"+e)})}),c="{"+u.join(",")+"}",this.assign(t,c)),r(t||c);break;case br.ThisExpression:this.assign(t,"s"),r("s");break;case br.LocalsExpression:this.assign(t,"l"),r("l");break;case br.NGValueParameter:this.assign(t,"v"),r("v")}},getHasOwnProperty:function(e,t){var n=e+"."+t,i=this.current().own;return i.hasOwnProperty(n)||(i[n]=this.nextId(!1,e+"&&("+this.escape(t)+" in "+e+")")),i[n]},assign:function(e,t){return e?(this.current().body.push(e,"=",t,";"),e):void 0},filter:function(e){return this.state.filters.hasOwnProperty(e)||(this.state.filters[e]=this.nextId(!0)),this.state.filters[e]},ifDefined:function(e,t){return"ifDefined("+e+","+this.escape(t)+")"},plus:function(e,t){return"plus("+e+","+t+")"},return_:function(e){this.current().body.push("return ",e,";")},if_:function(e,t,n){if(!0===e)t();else{var i=this.current().body;i.push("if(",e,"){"),t(),i.push("}"),n&&(i.push("else{"),n(),i.push("}"))}},not:function(e){return"!("+e+")"},notNull:function(e){return e+"!=null"},nonComputedMember:function(e,t){var n=/[^$_a-zA-Z0-9]/g;return/[$_a-zA-Z][$_a-zA-Z0-9]*/.test(t)?e+"."+t:e+'["'+t.replace(n,this.stringEscapeFn)+'"]'},computedMember:function(e,t){return e+"["+t+"]"},member:function(e,t,n){return n?this.computedMember(e,t):this.nonComputedMember(e,t)},addEnsureSafeObject:function(e){this.current().body.push(this.ensureSafeObject(e),";")},addEnsureSafeMemberName:function(e){this.current().body.push(this.ensureSafeMemberName(e),";")},addEnsureSafeFunction:function(e){this.current().body.push(this.ensureSafeFunction(e),";")},addEnsureSafeAssignContext:function(e){this.current().body.push(this.ensureSafeAssignContext(e),";")},ensureSafeObject:function(e){return"ensureSafeObject("+e+",text)"},ensureSafeMemberName:function(e){return"ensureSafeMemberName("+e+",text)"},ensureSafeFunction:function(e){return"ensureSafeFunction("+e+",text)"},getStringValue:function(e){this.assign(e,"getStringValue("+e+")")},ensureSafeAssignContext:function(e){return"ensureSafeAssignContext("+e+",text)"},lazyRecurse:function(e,t,n,i,r,o){var a=this;return function(){a.recurse(e,t,n,i,r,o)}},lazyAssign:function(e,t){var n=this;return function(){n.assign(e,t)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)},escape:function(e){if(y(e))return"'"+e.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(w(e))return e.toString();if(!0===e)return"true";if(!1===e)return"false";if(null===e)return"null";if("undefined"==typeof e)return"undefined";throw pr("esc")},nextId:function(e,t){var n="v"+this.state.nextId++;return e||this.current().vars.push(n+(t?"="+t:"")),n},current:function(){return this.state[this.state.computing]}},Ht.prototype={compile:function(e,t){var n=this,r=this.astBuilder.ast(e);this.expression=e,this.expensiveChecks=t,Lt(r,n.$filter);var o,a;(o=jt(r))&&(a=this.recurse(o)),o=Ut(r.body);
var s;o&&(s=[],i(o,function(e,t){var i=n.recurse(e);e.input=i,s.push(i),e.watchId=t}));var l=[];return i(r.body,function(e){l.push(n.recurse(e.expression))}),o=0===r.body.length?d:1===r.body.length?l[0]:function(e,t){var n;return i(l,function(i){n=i(e,t)}),n},a&&(o.assign=function(e,t,n){return a(e,n,t)}),s&&(o.inputs=s),o.literal=_t(r),o.constant=r.constant,o},recurse:function(e,t,n){var r,o,a,s=this;if(e.input)return this.inputs(e.input,e.watchId);switch(e.type){case br.Literal:return this.value(e.value,t);case br.UnaryExpression:return o=this.recurse(e.argument),this["unary"+e.operator](o,t);case br.BinaryExpression:return r=this.recurse(e.left),o=this.recurse(e.right),this["binary"+e.operator](r,o,t);case br.LogicalExpression:return r=this.recurse(e.left),o=this.recurse(e.right),this["binary"+e.operator](r,o,t);case br.ConditionalExpression:return this["ternary?:"](this.recurse(e.test),this.recurse(e.alternate),this.recurse(e.consequent),t);case br.Identifier:return Dt(e.name,s.expression),s.identifier(e.name,s.expensiveChecks||zt(e.name),t,n,s.expression);case br.MemberExpression:return r=this.recurse(e.object,!1,!!n),e.computed||(Dt(e.property.name,s.expression),o=e.property.name),e.computed&&(o=this.recurse(e.property)),e.computed?this.computedMember(r,o,t,n,s.expression):this.nonComputedMember(r,o,s.expensiveChecks,t,n,s.expression);case br.CallExpression:return a=[],i(e.arguments,function(e){a.push(s.recurse(e))}),e.filter&&(o=this.$filter(e.callee.name)),e.filter||(o=this.recurse(e.callee,!0)),e.filter?function(e,n,i,r){for(var s=[],l=0;l<a.length;++l)s.push(a[l](e,n,i,r));return e=o.apply(void 0,s,r),t?{context:void 0,name:void 0,value:e}:e}:function(e,n,i,r){var l,u=o(e,n,i,r);if(null!=u.value){Mt(u.context,s.expression),Ot(u.value,s.expression),l=[];for(var c=0;c<a.length;++c)l.push(Mt(a[c](e,n,i,r),s.expression));l=Mt(u.value.apply(u.context,l),s.expression)}return t?{value:l}:l};case br.AssignmentExpression:return r=this.recurse(e.left,!0,1),o=this.recurse(e.right),function(e,n,i,a){var l=r(e,n,i,a);return e=o(e,n,i,a),Mt(l.value,s.expression),Rt(l.context),l.context[l.name]=e,t?{value:e}:e};case br.ArrayExpression:return a=[],i(e.elements,function(e){a.push(s.recurse(e))}),function(e,n,i,r){for(var o=[],s=0;s<a.length;++s)o.push(a[s](e,n,i,r));return t?{value:o}:o};case br.ObjectExpression:return a=[],i(e.properties,function(e){e.computed?a.push({key:s.recurse(e.key),computed:!0,value:s.recurse(e.value)}):a.push({key:e.key.type===br.Identifier?e.key.name:""+e.key.value,computed:!1,value:s.recurse(e.value)})}),function(e,n,i,r){for(var o={},s=0;s<a.length;++s)a[s].computed?o[a[s].key(e,n,i,r)]=a[s].value(e,n,i,r):o[a[s].key]=a[s].value(e,n,i,r);return t?{value:o}:o};case br.ThisExpression:return function(e){return t?{value:e}:e};case br.LocalsExpression:return function(e,n){return t?{value:n}:n};case br.NGValueParameter:return function(e,n,i){return t?{value:i}:i}}},"unary+":function(e,t){return function(n,i,r,o){return n=e(n,i,r,o),n=v(n)?+n:0,t?{value:n}:n}},"unary-":function(e,t){return function(n,i,r,o){return n=e(n,i,r,o),n=v(n)?-n:0,t?{value:n}:n}},"unary!":function(e,t){return function(n,i,r,o){return n=!e(n,i,r,o),t?{value:n}:n}},"binary+":function(e,t,n){return function(i,r,o,a){var s=e(i,r,o,a);return i=t(i,r,o,a),s=Nt(s,i),n?{value:s}:s}},"binary-":function(e,t,n){return function(i,r,o,a){var s=e(i,r,o,a);return i=t(i,r,o,a),s=(v(s)?s:0)-(v(i)?i:0),n?{value:s}:s}},"binary*":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)*t(i,r,o,a),n?{value:i}:i}},"binary/":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)/t(i,r,o,a),n?{value:i}:i}},"binary%":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)%t(i,r,o,a),n?{value:i}:i}},"binary===":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)===t(i,r,o,a),n?{value:i}:i}},"binary!==":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)!==t(i,r,o,a),n?{value:i}:i}},"binary==":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)==t(i,r,o,a),n?{value:i}:i}},"binary!=":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)!=t(i,r,o,a),n?{value:i}:i}},"binary<":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)<t(i,r,o,a),n?{value:i}:i}},"binary>":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)>t(i,r,o,a),n?{value:i}:i}},"binary<=":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)<=t(i,r,o,a),n?{value:i}:i}},"binary>=":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)>=t(i,r,o,a),n?{value:i}:i}},"binary&&":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)&&t(i,r,o,a),n?{value:i}:i}},"binary||":function(e,t,n){return function(i,r,o,a){return i=e(i,r,o,a)||t(i,r,o,a),n?{value:i}:i}},"ternary?:":function(e,t,n,i){return function(r,o,a,s){return r=e(r,o,a,s)?t(r,o,a,s):n(r,o,a,s),i?{value:r}:r}},value:function(e,t){return function(){return t?{context:void 0,name:void 0,value:e}:e}},identifier:function(e,t,n,i,r){return function(o,a,s,l){return o=a&&e in a?a:o,i&&1!==i&&o&&!o[e]&&(o[e]={}),a=o?o[e]:void 0,t&&Mt(a,r),n?{context:o,name:e,value:a}:a}},computedMember:function(e,t,n,i,r){return function(o,a,s,l){var u,c,p=e(o,a,s,l);return null!=p&&(u=t(o,a,s,l),u+="",Dt(u,r),i&&1!==i&&(Rt(p),p&&!p[u]&&(p[u]={})),c=p[u],Mt(c,r)),n?{context:p,name:u,value:c}:c}},nonComputedMember:function(e,t,n,i,r,o){return function(a,s,l,u){return a=e(a,s,l,u),r&&1!==r&&(Rt(a),a&&!a[t]&&(a[t]={})),s=null!=a?a[t]:void 0,(n||zt(t))&&Mt(s,o),i?{context:a,name:t,value:s}:s}},inputs:function(e,t){return function(n,i,r,o){return o?o[t]:e(n,i,r)}}};var $r=function(e,t,n){this.lexer=e,this.$filter=t,this.options=n,this.ast=new br(e,n),this.astCompiler=n.csp?new Ht(this.ast,t):new qt(this.ast,t)};$r.prototype={constructor:$r,parse:function(e){return this.astCompiler.compile(e,this.options.expensiveChecks)}};var yr=Object.prototype.valueOf,wr=t("$sce"),xr={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},Sr=t("$compile"),Cr=e.document.createElement("a"),kr=sn(e.location.href);cn.$inject=["$document"],dn.$inject=["$provide"];var Er=22,Tr=".",Pr="0";vn.$inject=["$locale"],bn.$inject=["$locale"];var Dr={yyyy:Sn("FullYear",4,0,!1,!0),yy:Sn("FullYear",2,0,!0,!0),y:Sn("FullYear",1,0,!1,!0),MMMM:Cn("Month"),MMM:Cn("Month",!0),MM:Sn("Month",2,1),M:Sn("Month",1,1),LLLL:Cn("Month",!1,!0),dd:Sn("Date",2),d:Sn("Date",1),HH:Sn("Hours",2),H:Sn("Hours",1),hh:Sn("Hours",2,-12),h:Sn("Hours",1,-12),mm:Sn("Minutes",2),m:Sn("Minutes",1),ss:Sn("Seconds",2),s:Sn("Seconds",1),sss:Sn("Milliseconds",3),EEEE:Cn("Day"),EEE:Cn("Day",!0),a:function(e,t){return 12>e.getHours()?t.AMPMS[0]:t.AMPMS[1]},Z:function(e,t,n){return e=-1*n,e=(e>=0?"+":"")+(xn(Math[e>0?"floor":"ceil"](e/60),2)+xn(Math.abs(e%60),2))},ww:En(2),w:En(1),G:Tn,GG:Tn,GGG:Tn,GGGG:function(e,t){return 0>=e.getFullYear()?t.ERANAMES[0]:t.ERANAMES[1]}},Ar=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,Mr=/^\-?\d+$/;Pn.$inject=["$locale"];var Or=h(Yn),Rr=h(Kn);Mn.$inject=["$parse"];var Ir=h({restrict:"E",compile:function(e,t){return t.href||t.xlinkHref?void 0:function(e,t){if("a"===t[0].nodeName.toLowerCase()){var n="[object SVGAnimatedString]"===ei.call(t.prop("href"))?"xlink:href":"href";t.on("click",function(e){t.attr(n)||e.preventDefault()})}}}}),Nr={};i(Ai,function(e,t){function n(e,n,r){e.$watch(r[i],function(e){r.$set(t,!!e)})}if("multiple"!=e){var i=Ke("ng-"+t),r=n;"checked"===e&&(r=function(e,t,r){r.ngModel!==r[i]&&n(e,t,r)}),Nr[i]=function(){return{restrict:"A",priority:100,link:r}}}}),i(Oi,function(e,t){Nr[t]=function(){return{priority:100,link:function(e,n,i){return"ngPattern"===t&&"/"==i.ngPattern.charAt(0)&&(n=i.ngPattern.match(Gn))?void i.$set("ngPattern",new RegExp(n[1],n[2])):void e.$watch(i[t],function(e){i.$set(t,e)})}}}}),i(["src","srcset","href"],function(e){var t=Ke("ng-"+e);Nr[t]=function(){return{priority:99,link:function(n,i,r){var o=e,a=e;"href"===e&&"[object SVGAnimatedString]"===ei.call(i.prop("href"))&&(a="xlinkHref",r.$attr[a]="xlink:href",o=null),r.$observe(t,function(t){t?(r.$set(a,t),zn&&o&&i.prop(o,r[a])):"href"===e&&r.$set(a,null)})}}}});var Lr={$addControl:d,$$renameControl:function(e,t){e.$name=t},$removeControl:d,$setValidity:d,$setDirty:d,$setPristine:d,$setSubmitted:d};Rn.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var Ur=function(e){return["$timeout","$parse",function(t,n){function i(e){return""===e?n('this[""]').assign:n(e).assign||d}return{name:"form",restrict:e?"EAC":"E",require:["form","^^?form"],controller:Rn,compile:function(n,r){n.addClass($o).addClass(vo);var o=r.name?"name":e&&r.ngForm?"ngForm":!1;return{pre:function(e,n,r,a){var s=a[0];if(!("action"in r)){var u=function(t){e.$apply(function(){s.$commitViewValue(),s.$setSubmitted()}),t.preventDefault()};n[0].addEventListener("submit",u,!1),n.on("$destroy",function(){t(function(){n[0].removeEventListener("submit",u,!1)},0,!1)})}(a[1]||s.$$parentForm).$addControl(s);var c=o?i(s.$name):d;o&&(c(e,s),r.$observe(o,function(t){s.$name!==t&&(c(e,void 0),s.$$parentForm.$$renameControl(s,t),(c=i(s.$name))(e,s))})),n.on("$destroy",function(){s.$$parentForm.$removeControl(s),c(e,void 0),l(s,Lr)})}}}}}]},Fr=Ur(),jr=Ur(!0),_r=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,qr=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,Hr=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,zr=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,Vr=/^(\d{4,})-(\d{2})-(\d{2})$/,Br=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Wr=/^(\d{4,})-W(\d\d)$/,Gr=/^(\d{4,})-(\d\d)$/,Xr=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Yr=se();i(["date","datetime-local","month","time","week"],function(e){Yr[e]=!0});var Kr={text:function(e,t,n,i,r,o){Nn(e,t,n,i,r,o),In(i)},date:Un("date",Vr,Ln(Vr,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":Un("datetimelocal",Br,Ln(Br,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:Un("time",Xr,Ln(Xr,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:Un("week",Wr,function(e,t){if(x(e))return e;if(y(e)){Wr.lastIndex=0;var n=Wr.exec(e);if(n){var i=+n[1],r=+n[2],o=n=0,a=0,s=0,l=kn(i),r=7*(r-1);return t&&(n=t.getHours(),o=t.getMinutes(),a=t.getSeconds(),s=t.getMilliseconds()),new Date(i,0,l.getDate()+r,n,o,a,s)}}return NaN},"yyyy-Www"),month:Un("month",Gr,Ln(Gr,["yyyy","MM"]),"yyyy-MM"),number:function(e,t,n,i,r,o){if(Fn(e,t,n,i),Nn(e,t,n,i,r,o),i.$$parserName="number",i.$parsers.push(function(e){return i.$isEmpty(e)?null:zr.test(e)?parseFloat(e):void 0}),i.$formatters.push(function(e){if(!i.$isEmpty(e)){if(!w(e))throw xo("numfmt",e);e=e.toString()}return e}),v(n.min)||n.ngMin){var a;i.$validators.min=function(e){return i.$isEmpty(e)||g(a)||e>=a},n.$observe("min",function(e){v(e)&&!w(e)&&(e=parseFloat(e,10)),a=w(e)&&!isNaN(e)?e:void 0,i.$validate()})}if(v(n.max)||n.ngMax){var s;i.$validators.max=function(e){return i.$isEmpty(e)||g(s)||s>=e},n.$observe("max",function(e){v(e)&&!w(e)&&(e=parseFloat(e,10)),s=w(e)&&!isNaN(e)?e:void 0,i.$validate()})}},url:function(e,t,n,i,r,o){Nn(e,t,n,i,r,o),In(i),i.$$parserName="url",i.$validators.url=function(e,t){var n=e||t;return i.$isEmpty(n)||qr.test(n)}},email:function(e,t,n,i,r,o){Nn(e,t,n,i,r,o),In(i),i.$$parserName="email",i.$validators.email=function(e,t){var n=e||t;return i.$isEmpty(n)||Hr.test(n)}},radio:function(e,t,n,i){g(n.name)&&t.attr("name",++ri),t.on("click",function(e){t[0].checked&&i.$setViewValue(n.value,e&&e.type)}),i.$render=function(){t[0].checked=n.value==i.$viewValue},n.$observe("value",i.$render)},checkbox:function(e,t,n,i,r,o,a,s){var l=jn(s,e,"ngTrueValue",n.ngTrueValue,!0),u=jn(s,e,"ngFalseValue",n.ngFalseValue,!1);t.on("click",function(e){i.$setViewValue(t[0].checked,e&&e.type)}),i.$render=function(){t[0].checked=i.$viewValue},i.$isEmpty=function(e){return!1===e},i.$formatters.push(function(e){return N(e,l)}),i.$parsers.push(function(e){return e?l:u})},hidden:d,button:d,submit:d,reset:d,file:d},Jr=["$browser","$sniffer","$filter","$parse",function(e,t,n,i){return{restrict:"E",require:["?ngModel"],link:{pre:function(r,o,a,s){s[0]&&(Kr[Yn(a.type)]||Kr.text)(r,o,a,s[0],t,e,n,i)}}}}],Qr=/^(true|false|\d+)$/,Zr=function(){return{restrict:"A",priority:100,compile:function(e,t){return Qr.test(t.ngValue)?function(e,t,n){n.$set("value",e.$eval(n.ngValue))}:function(e,t,n){e.$watch(n.ngValue,function(e){n.$set("value",e)})}}}},eo=["$compile",function(e){return{restrict:"AC",compile:function(t){return e.$$addBindingClass(t),function(t,n,i){e.$$addBindingInfo(n,i.ngBind),n=n[0],t.$watch(i.ngBind,function(e){n.textContent=g(e)?"":e})}}}}],to=["$interpolate","$compile",function(e,t){return{compile:function(n){return t.$$addBindingClass(n),function(n,i,r){n=e(i.attr(r.$attr.ngBindTemplate)),t.$$addBindingInfo(i,n.expressions),i=i[0],r.$observe("ngBindTemplate",function(e){i.textContent=g(e)?"":e})}}}}],no=["$sce","$parse","$compile",function(e,t,n){return{restrict:"A",compile:function(i,r){var o=t(r.ngBindHtml),a=t(r.ngBindHtml,function(t){return e.valueOf(t)});return n.$$addBindingClass(i),function(t,i,r){n.$$addBindingInfo(i,r.ngBindHtml),t.$watch(a,function(){var n=o(t);i.html(e.getTrustedHtml(n)||"")})}}}}],io=h({restrict:"A",require:"ngModel",link:function(e,t,n,i){i.$viewChangeListeners.push(function(){e.$eval(n.ngChange)})}}),ro=_n("",!0),oo=_n("Odd",0),ao=_n("Even",1),so=On({compile:function(e,t){t.$set("ngCloak",void 0),e.removeClass("ng-cloak")}}),lo=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],uo={},co={blur:!0,focus:!0};i("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),function(e){var t=Ke("ng-"+e);uo[t]=["$parse","$rootScope",function(n,i){return{restrict:"A",compile:function(r,o){var a=n(o[t],null,!0);return function(t,n){n.on(e,function(n){var r=function(){a(t,{$event:n})};co[e]&&i.$$phase?t.$evalAsync(r):t.$apply(r)})}}}}]});var po=["$animate","$compile",function(e,t){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(n,i,r,o,a){var s,l,u;n.$watch(r.ngIf,function(n){n?l||a(function(n,o){l=o,n[n.length++]=t.$$createComment("end ngIf",r.ngIf),s={clone:n},e.enter(n,i.parent(),i)}):(u&&(u.remove(),u=null),l&&(l.$destroy(),l=null),s&&(u=ae(s.clone),e.leave(u).then(function(){u=null}),s=null))})}}}],fo=["$templateRequest","$anchorScroll","$animate",function(e,t,n){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:ii.noop,compile:function(i,r){var o=r.ngInclude||r.src,a=r.onload||"",s=r.autoscroll;return function(i,r,l,u,c){var p,d,f,h=0,m=function(){d&&(d.remove(),d=null),p&&(p.$destroy(),p=null),f&&(n.leave(f).then(function(){d=null}),d=f,f=null)};i.$watch(o,function(o){var l=function(){!v(s)||s&&!i.$eval(s)||t()},d=++h;o?(e(o,!0).then(function(e){if(!i.$$destroyed&&d===h){var t=i.$new();u.template=e,e=c(t,function(e){m(),n.enter(e,null,r).then(l)}),p=t,f=e,p.$emit("$includeContentLoaded",o),i.$eval(a)}},function(){i.$$destroyed||d!==h||(m(),i.$emit("$includeContentError",o))}),i.$emit("$includeContentRequested",o)):(m(),u.template=null)})}}}}],ho=["$compile",function(t){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(n,i,r,o){ei.call(i[0]).match(/SVG/)?(i.empty(),t(de(o.template,e.document).childNodes)(n,function(e){i.append(e)},{futureParentElement:i})):(i.html(o.template),t(i.contents())(n))}}}],mo=On({priority:450,compile:function(){return{pre:function(e,t,n){e.$eval(n.ngInit)}}}}),go=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(e,t,n,r){var o=t.attr(n.$attr.ngList)||", ",a="false"!==n.ngTrim,s=a?si(o):o;r.$parsers.push(function(e){if(!g(e)){var t=[];return e&&i(e.split(s),function(e){e&&t.push(a?si(e):e)}),t}}),r.$formatters.push(function(e){return oi(e)?e.join(o):void 0}),r.$isEmpty=function(e){return!e||!e.length}}}},vo="ng-valid",bo="ng-invalid",$o="ng-pristine",yo="ng-dirty",wo="ng-pending",xo=t("ngModel"),So=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(e,t,n,r,o,a,s,l,u,c){this.$modelValue=this.$viewValue=Number.NaN,this.$$rawModelValue=void 0,this.$validators={},this.$asyncValidators={},this.$parsers=[],this.$formatters=[],this.$viewChangeListeners=[],this.$untouched=!0,this.$touched=!1,this.$pristine=!0,this.$dirty=!1,this.$valid=!0,this.$invalid=!1,this.$error={},this.$$success={},this.$pending=void 0,this.$name=c(n.name||"",!1)(e),this.$$parentForm=Lr;var p,f=o(n.ngModel),h=f.assign,m=f,b=h,$=null,y=this;this.$$setOptions=function(e){if((y.$options=e)&&e.getterSetter){var t=o(n.ngModel+"()"),i=o(n.ngModel+"($$$p)");m=function(e){var n=f(e);return S(n)&&(n=t(e)),n},b=function(e,t){S(f(e))?i(e,{$$$p:t}):h(e,t)}}else if(!f.assign)throw xo("nonassign",n.ngModel,z(r))},this.$render=d,this.$isEmpty=function(e){return g(e)||""===e||null===e||e!==e},this.$$updateEmptyClasses=function(e){y.$isEmpty(e)?(a.removeClass(r,"ng-not-empty"),a.addClass(r,"ng-empty")):(a.removeClass(r,"ng-empty"),a.addClass(r,"ng-not-empty"))};var x=0;qn({ctrl:this,$element:r,set:function(e,t){e[t]=!0},unset:function(e,t){delete e[t]},$animate:a}),this.$setPristine=function(){y.$dirty=!1,y.$pristine=!0,a.removeClass(r,yo),a.addClass(r,$o)},this.$setDirty=function(){y.$dirty=!0,y.$pristine=!1,a.removeClass(r,$o),a.addClass(r,yo),y.$$parentForm.$setDirty()},this.$setUntouched=function(){y.$touched=!1,y.$untouched=!0,a.setClass(r,"ng-untouched","ng-touched")},this.$setTouched=function(){y.$touched=!0,y.$untouched=!1,a.setClass(r,"ng-touched","ng-untouched")},this.$rollbackViewValue=function(){s.cancel($),y.$viewValue=y.$$lastCommittedViewValue,y.$render()},this.$validate=function(){if(!w(y.$modelValue)||!isNaN(y.$modelValue)){var e=y.$$rawModelValue,t=y.$valid,n=y.$modelValue,i=y.$options&&y.$options.allowInvalid;y.$$runValidators(e,y.$$lastCommittedViewValue,function(r){i||t===r||(y.$modelValue=r?e:void 0,y.$modelValue!==n&&y.$$writeModelToScope())})}},this.$$runValidators=function(e,t,n){function r(){var n=!0;return i(y.$validators,function(i,r){var o=i(e,t);n=n&&o,a(r,o)}),n?!0:(i(y.$asyncValidators,function(e,t){a(t,null)}),!1)}function o(){var n=[],r=!0;i(y.$asyncValidators,function(i,o){var s=i(e,t);if(!s||!S(s.then))throw xo("nopromise",s);a(o,void 0),n.push(s.then(function(){a(o,!0)},function(){r=!1,a(o,!1)}))}),n.length?u.all(n).then(function(){s(r)},d):s(!0)}function a(e,t){l===x&&y.$setValidity(e,t)}function s(e){l===x&&n(e)}x++;var l=x;(function(){var e=y.$$parserName||"parse";return g(p)?(a(e,null),!0):(p||(i(y.$validators,function(e,t){a(t,null)}),i(y.$asyncValidators,function(e,t){a(t,null)})),a(e,p),p)})()&&r()?o():s(!1)},this.$commitViewValue=function(){var e=y.$viewValue;s.cancel($),(y.$$lastCommittedViewValue!==e||""===e&&y.$$hasNativeValidators)&&(y.$$updateEmptyClasses(e),y.$$lastCommittedViewValue=e,y.$pristine&&this.$setDirty(),this.$$parseAndValidate())},this.$$parseAndValidate=function(){var t=y.$$lastCommittedViewValue;if(p=g(t)?void 0:!0)for(var n=0;n<y.$parsers.length;n++)if(t=y.$parsers[n](t),g(t)){p=!1;break}w(y.$modelValue)&&isNaN(y.$modelValue)&&(y.$modelValue=m(e));var i=y.$modelValue,r=y.$options&&y.$options.allowInvalid;y.$$rawModelValue=t,r&&(y.$modelValue=t,y.$modelValue!==i&&y.$$writeModelToScope()),y.$$runValidators(t,y.$$lastCommittedViewValue,function(e){r||(y.$modelValue=e?t:void 0,y.$modelValue!==i&&y.$$writeModelToScope())})},this.$$writeModelToScope=function(){b(e,y.$modelValue),i(y.$viewChangeListeners,function(e){try{e()}catch(n){t(n)}})},this.$setViewValue=function(e,t){y.$viewValue=e,y.$options&&!y.$options.updateOnDefault||y.$$debounceViewValueCommit(t)},this.$$debounceViewValueCommit=function(t){var n=0,i=y.$options;i&&v(i.debounce)&&(i=i.debounce,w(i)?n=i:w(i[t])?n=i[t]:w(i["default"])&&(n=i["default"])),s.cancel($),n?$=s(function(){y.$commitViewValue()},n):l.$$phase?y.$commitViewValue():e.$apply(function(){y.$commitViewValue()})},e.$watch(function(){var t=m(e);if(t!==y.$modelValue&&(y.$modelValue===y.$modelValue||t===t)){y.$modelValue=y.$$rawModelValue=t,p=void 0;for(var n=y.$formatters,i=n.length,r=t;i--;)r=n[i](r);y.$viewValue!==r&&(y.$$updateEmptyClasses(r),y.$viewValue=y.$$lastCommittedViewValue=r,y.$render(),y.$$runValidators(t,r,d))}return t})}],Co=["$rootScope",function(e){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:So,priority:1,compile:function(t){return t.addClass($o).addClass("ng-untouched").addClass(vo),{pre:function(e,t,n,i){var r=i[0];t=i[1]||r.$$parentForm,r.$$setOptions(i[2]&&i[2].$options),t.$addControl(r),n.$observe("name",function(e){r.$name!==e&&r.$$parentForm.$$renameControl(r,e)}),e.$on("$destroy",function(){r.$$parentForm.$removeControl(r)})},post:function(t,n,i,r){var o=r[0];o.$options&&o.$options.updateOn&&n.on(o.$options.updateOn,function(e){o.$$debounceViewValueCommit(e&&e.type)}),n.on("blur",function(){o.$touched||(e.$$phase?t.$evalAsync(o.$setTouched):t.$apply(o.$setTouched))})}}}}}],ko=/(\s+|^)default(\s+|$)/,Eo=function(){return{restrict:"A",controller:["$scope","$attrs",function(e,t){var n=this;this.$options=R(e.$eval(t.ngModelOptions)),v(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=si(this.$options.updateOn.replace(ko,function(){return n.$options.updateOnDefault=!0," "}))):this.$options.updateOnDefault=!0}]}},To=On({terminal:!0,priority:1e3}),Po=t("ngOptions"),Do=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,Ao=["$compile","$document","$parse",function(t,r,o){function a(e,t,i){function r(e,t,n,i,r){this.selectValue=e,this.viewValue=t,this.label=n,this.group=i,this.disabled=r}function a(e){var t;if(!u&&n(e))t=e;else{t=[];for(var i in e)e.hasOwnProperty(i)&&"$"!==i.charAt(0)&&t.push(i)}return t}var s=e.match(Do);if(!s)throw Po("iexp",e,z(t));var l=s[5]||s[7],u=s[6];e=/ as /.test(s[0])&&s[1];var c=s[9];t=o(s[2]?s[1]:l);var p=e&&o(e)||t,d=c&&o(c),f=c?function(e,t){return d(i,t)}:function(e){return Ne(e)},h=function(e,t){return f(e,y(e,t))},m=o(s[2]||s[1]),g=o(s[3]||""),v=o(s[4]||""),b=o(s[8]),$={},y=u?function(e,t){return $[u]=t,$[l]=e,$}:function(e){return $[l]=e,$};return{trackBy:c,getTrackByValue:h,getWatchables:o(b,function(e){var t=[];e=e||[];for(var n=a(e),r=n.length,o=0;r>o;o++){var l=e===n?o:n[o],u=e[l],l=y(u,l),u=f(u,l);t.push(u),(s[2]||s[1])&&(u=m(i,l),t.push(u)),s[4]&&(l=v(i,l),t.push(l))}return t}),getOptions:function(){for(var e=[],t={},n=b(i)||[],o=a(n),s=o.length,l=0;s>l;l++){var u=n===o?l:o[l],d=y(n[u],u),$=p(i,d),u=f($,d),w=m(i,d),x=g(i,d),d=v(i,d),$=new r(u,$,w,x,d);e.push($),t[u]=$}return{items:e,selectValueMap:t,getOptionFromViewValue:function(e){return t[h(e)]},getViewValueFromOption:function(e){return c?ii.copy(e.viewValue):e.viewValue}}}}}var s=e.document.createElement("option"),l=e.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(e,t,n,i){i[0].registerOption=d},post:function(e,n,o,u){function c(e,t){e.element=t,t.disabled=e.disabled,e.label!==t.label&&(t.label=e.label,t.textContent=e.label),e.value!==t.value&&(t.value=e.selectValue)}function p(){var e=w&&f.readValue();if(w)for(var t=w.items.length-1;t>=0;t--){var i=w.items[t];Pe(i.group?i.element.parentNode:i.element)}w=x.getOptions();var r={};$&&n.prepend(d),w.items.forEach(function(e){var t;if(v(e.group)){t=r[e.group],t||(t=l.cloneNode(!1),S.appendChild(t),t.label=e.group,r[e.group]=t);var n=s.cloneNode(!1)}else t=S,n=s.cloneNode(!1);t.appendChild(n),c(e,n)}),n[0].appendChild(S),h.$render(),h.$isEmpty(e)||(t=f.readValue(),(x.trackBy||m?N(e,t):e===t)||(h.$setViewValue(t),h.$render()))}var d,f=u[0],h=u[1],m=o.multiple;u=0;for(var g=n.children(),b=g.length;b>u;u++)if(""===g[u].value){d=g.eq(u);break}var $=!!d,y=Vn(s.cloneNode(!1));y.val("?");var w,x=a(o.ngOptions,n,e),S=r[0].createDocumentFragment();m?(h.$isEmpty=function(e){return!e||0===e.length},f.writeValue=function(e){w.items.forEach(function(e){e.element.selected=!1}),e&&e.forEach(function(e){(e=w.getOptionFromViewValue(e))&&(e.element.selected=!0)})},f.readValue=function(){var e=n.val()||[],t=[];return i(e,function(e){(e=w.selectValueMap[e])&&!e.disabled&&t.push(w.getViewValueFromOption(e))}),t},x.trackBy&&e.$watchCollection(function(){return oi(h.$viewValue)?h.$viewValue.map(function(e){return x.getTrackByValue(e)}):void 0},function(){h.$render()})):(f.writeValue=function(e){var t=w.getOptionFromViewValue(e);t?(n[0].value!==t.selectValue&&(y.remove(),$||d.remove(),n[0].value=t.selectValue,t.element.selected=!0),t.element.setAttribute("selected","selected")):null===e||$?(y.remove(),$||n.prepend(d),n.val(""),d.prop("selected",!0),d.attr("selected",!0)):($||d.remove(),n.prepend(y),n.val("?"),y.prop("selected",!0),y.attr("selected",!0))},f.readValue=function(){var e=w.selectValueMap[n.val()];return e&&!e.disabled?($||d.remove(),y.remove(),w.getViewValueFromOption(e)):null},x.trackBy&&e.$watch(function(){return x.getTrackByValue(h.$viewValue)},function(){h.$render()})),$?(d.remove(),t(d)(e),d.removeClass("ng-scope")):d=Vn(s.cloneNode(!1)),n.empty(),p(),e.$watchCollection(x.getWatchables,p)}}}}],Mo=["$locale","$interpolate","$log",function(e,t,n){var r=/{}/g,o=/^when(Minus)?(.+)$/;return{link:function(a,s,l){function u(e){s.text(e||"")}var c,p=l.count,f=l.$attr.when&&s.attr(l.$attr.when),h=l.offset||0,m=a.$eval(f)||{},v={},b=t.startSymbol(),$=t.endSymbol(),y=b+p+"-"+h+$,x=ii.noop;i(l,function(e,t){var n=o.exec(t);n&&(n=(n[1]?"-":"")+Yn(n[2]),m[n]=s.attr(l.$attr[t]))}),i(m,function(e,n){v[n]=t(e.replace(r,y))}),a.$watch(p,function(t){var i=parseFloat(t),r=isNaN(i);r||i in m||(i=e.pluralCat(i-h)),i===c||r&&w(c)&&isNaN(c)||(x(),r=v[i],g(r)?(null!=t&&n.debug("ngPluralize: no rule defined for '"+i+"' in "+f),x=d,u()):x=a.$watch(r,u),c=i)})}}}],Oo=["$parse","$animate","$compile",function(e,r,o){var a=t("ngRepeat"),s=function(e,t,n,i,r,o,a){e[n]=i,r&&(e[r]=o),e.$index=t,e.$first=0===t,e.$last=t===a-1,e.$middle=!(e.$first||e.$last),e.$odd=!(e.$even=0===(1&t))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1e3,terminal:!0,$$tlb:!0,compile:function(t,l){var u=l.ngRepeat,c=o.$$createComment("end ngRepeat",u),p=u.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!p)throw a("iexp",u);var d=p[1],f=p[2],h=p[3],m=p[4],p=d.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!p)throw a("iidexp",d);var g=p[3]||p[1],v=p[2];if(h&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(h)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(h)))throw a("badident",h);var b,$,y,w,x={$id:Ne};return m?b=e(m):(y=function(e,t){return Ne(t)},w=function(e){return e}),function(e,t,o,l,p){b&&($=function(t,n,i){return v&&(x[v]=t),x[g]=n,x.$index=i,b(e,x)});var d=se();e.$watchCollection(f,function(o){var l,f,m,b,x,S,C,k,E,T,P=t[0],D=se();if(h&&(e[h]=o),n(o))k=o,f=$||y;else for(T in f=$||w,k=[],o)Xn.call(o,T)&&"$"!==T.charAt(0)&&k.push(T);for(b=k.length,T=Array(b),l=0;b>l;l++)if(x=o===k?l:k[l],S=o[x],C=f(x,S,l),d[C])E=d[C],delete d[C],D[C]=E,T[l]=E;else{if(D[C])throw i(T,function(e){e&&e.scope&&(d[e.id]=e)}),a("dupes",u,C,S);T[l]={id:C,scope:void 0,clone:void 0},D[C]=!0}for(m in d){if(E=d[m],C=ae(E.clone),r.leave(C),C[0].parentNode)for(l=0,f=C.length;f>l;l++)C[l].$$NG_REMOVED=!0;E.scope.$destroy()}for(l=0;b>l;l++)if(x=o===k?l:k[l],S=o[x],E=T[l],E.scope){m=P;do m=m.nextSibling;while(m&&m.$$NG_REMOVED);E.clone[0]!=m&&r.move(ae(E.clone),null,P),P=E.clone[E.clone.length-1],s(E.scope,l,g,S,v,x,b)}else p(function(e,t){E.scope=t;var n=c.cloneNode(!1);e[e.length++]=n,r.enter(e,null,P),P=n,E.clone=e,D[E.id]=E,s(E.scope,l,g,S,v,x,b)});d=D})}}}}],Ro=["$animate",function(e){return{restrict:"A",multiElement:!0,link:function(t,n,i){t.$watch(i.ngShow,function(t){e[t?"removeClass":"addClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Io=["$animate",function(e){return{restrict:"A",multiElement:!0,link:function(t,n,i){t.$watch(i.ngHide,function(t){e[t?"addClass":"removeClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],No=On(function(e,t,n){e.$watch(n.ngStyle,function(e,n){n&&e!==n&&i(n,function(e,n){t.css(n,"")}),e&&t.css(e)},!0)}),Lo=["$animate","$compile",function(e,t){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(n,r,o,a){var s=[],l=[],u=[],c=[],p=function(e,t){return function(){e.splice(t,1)}};n.$watch(o.ngSwitch||o.on,function(n){var r,o;for(r=0,o=u.length;o>r;++r)e.cancel(u[r]);for(r=u.length=0,o=c.length;o>r;++r){var d=ae(l[r].clone);c[r].$destroy(),(u[r]=e.leave(d)).then(p(u,r))}l.length=0,c.length=0,(s=a.cases["!"+n]||a.cases["?"])&&i(s,function(n){n.transclude(function(i,r){c.push(r);var o=n.element;i[i.length++]=t.$$createComment("end ngSwitchWhen"),l.push({clone:i}),e.enter(i,o.parent(),o)})})})}}}],Uo=On({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(e,t,n,i,r){i.cases["!"+n.ngSwitchWhen]=i.cases["!"+n.ngSwitchWhen]||[],i.cases["!"+n.ngSwitchWhen].push({transclude:r,element:t})}}),Fo=On({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(e,t,n,i,r){i.cases["?"]=i.cases["?"]||[],i.cases["?"].push({transclude:r,element:t})}}),jo=t("ngTransclude"),_o=On({restrict:"EAC",link:function(e,t,n,i,r){if(n.ngTransclude===n.$attr.ngTransclude&&(n.ngTransclude=""),!r)throw jo("orphan",z(t));r(function(e){e.length&&(t.empty(),t.append(e))},null,n.ngTransclude||n.ngTranscludeSlot)}}),qo=["$templateCache",function(e){return{restrict:"E",terminal:!0,compile:function(t,n){"text/ng-template"==n.type&&e.put(n.id,t[0].text)}}}],Ho={$setViewValue:d,$render:d},zo=["$element","$scope",function(t,n){var i=this,r=new Le;i.ngModelCtrl=Ho,i.unknownOption=Vn(e.document.createElement("option")),i.renderUnknownOption=function(e){e="? "+Ne(e)+" ?",i.unknownOption.val(e),t.prepend(i.unknownOption),t.val(e)},n.$on("$destroy",function(){i.renderUnknownOption=d}),i.removeUnknownOption=function(){i.unknownOption.parent()&&i.unknownOption.remove()},i.readValue=function(){return i.removeUnknownOption(),t.val()},i.writeValue=function(e){i.hasOption(e)?(i.removeUnknownOption(),t.val(e),""===e&&i.emptyOption.prop("selected",!0)):null==e&&i.emptyOption?(i.removeUnknownOption(),t.val("")):i.renderUnknownOption(e)},i.addOption=function(e,t){if(8!==t[0].nodeType){re(e,'"option value"'),""===e&&(i.emptyOption=t);var n=r.get(e)||0;r.put(e,n+1),i.ngModelCtrl.$render(),t[0].hasAttribute("selected")&&(t[0].selected=!0)}},i.removeOption=function(e){var t=r.get(e);t&&(1===t?(r.remove(e),""===e&&(i.emptyOption=void 0)):r.put(e,t-1))},i.hasOption=function(e){return!!r.get(e)},i.registerOption=function(e,t,n,r,o){if(r){var a;n.$observe("value",function(e){v(a)&&i.removeOption(a),a=e,i.addOption(e,t)})}else o?e.$watch(o,function(e,r){n.$set("value",e),r!==e&&i.removeOption(r),i.addOption(e,t)}):i.addOption(n.value,t);t.on("$destroy",function(){i.removeOption(n.value),i.ngModelCtrl.$render()})}}],Vo=function(){return{restrict:"E",require:["select","?ngModel"],controller:zo,priority:1,link:{pre:function(e,t,n,r){var o=r[1];if(o){var a=r[0];if(a.ngModelCtrl=o,t.on("change",function(){e.$apply(function(){o.$setViewValue(a.readValue())})}),n.multiple){a.readValue=function(){var e=[];return i(t.find("option"),function(t){t.selected&&e.push(t.value)}),e},a.writeValue=function(e){var n=new Le(e);i(t.find("option"),function(e){e.selected=v(n.get(e.value))})};var s,l=NaN;e.$watch(function(){l!==o.$viewValue||N(s,o.$viewValue)||(s=I(o.$viewValue),o.$render()),l=o.$viewValue}),o.$isEmpty=function(e){return!e||0===e.length;
}}}},post:function(e,t,n,i){var r=i[1];if(r){var o=i[0];r.$render=function(){o.writeValue(r.$viewValue)}}}}}},Bo=["$interpolate",function(e){return{restrict:"E",priority:100,compile:function(t,n){if(v(n.value))var i=e(n.value,!0);else{var r=e(t.text(),!0);r||n.$set("value",t.text())}return function(e,t,n){var o=t.parent();(o=o.data("$selectController")||o.parent().data("$selectController"))&&o.registerOption(e,t,n,i,r)}}}}],Wo=h({restrict:"E",terminal:!1}),Go=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,i){i&&(n.required=!0,i.$validators.required=function(e,t){return!n.required||!i.$isEmpty(t)},n.$observe("required",function(){i.$validate()}))}}},Xo=function(){return{restrict:"A",require:"?ngModel",link:function(e,n,i,r){if(r){var o,a=i.ngPattern||i.pattern;i.$observe("pattern",function(e){if(y(e)&&0<e.length&&(e=new RegExp("^"+e+"$")),e&&!e.test)throw t("ngPattern")("noregexp",a,e,z(n));o=e||void 0,r.$validate()}),r.$validators.pattern=function(e,t){return r.$isEmpty(t)||g(o)||o.test(t)}}}}},Yo=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,i){if(i){var r=-1;n.$observe("maxlength",function(e){e=c(e),r=isNaN(e)?-1:e,i.$validate()}),i.$validators.maxlength=function(e,t){return 0>r||i.$isEmpty(t)||t.length<=r}}}}},Ko=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,i){if(i){var r=0;n.$observe("minlength",function(e){r=c(e)||0,i.$validate()}),i.$validators.minlength=function(e,t){return i.$isEmpty(t)||t.length>=r}}}}};e.angular.bootstrap?e.console&&console.log("WARNING: Tried to load angular more than once."):(te(),ue(ii),ii.module("ngLocale",[],["$provide",function(e){function t(e){e+="";var t=e.indexOf(".");return-1==t?0:e.length-t-1}e.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-¤",negSuf:"",posPre:"¤",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(e,n){var i=0|e,r=n;return void 0===r&&(r=Math.min(t(e),3)),Math.pow(10,r),1==i&&0==r?"one":"other"}})}]),Vn(e.document).ready(function(){K(e.document,J)}))}(window),!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>'),angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.collapse","ui.bootstrap.accordion","ui.bootstrap.alert","ui.bootstrap.buttons","ui.bootstrap.carousel","ui.bootstrap.dateparser","ui.bootstrap.isClass","ui.bootstrap.datepicker","ui.bootstrap.position","ui.bootstrap.datepickerPopup","ui.bootstrap.debounce","ui.bootstrap.dropdown","ui.bootstrap.stackedMap","ui.bootstrap.modal","ui.bootstrap.paging","ui.bootstrap.pager","ui.bootstrap.pagination","ui.bootstrap.tooltip","ui.bootstrap.popover","ui.bootstrap.progressbar","ui.bootstrap.rating","ui.bootstrap.tabs","ui.bootstrap.timepicker","ui.bootstrap.typeahead"]),angular.module("ui.bootstrap.tpls",["uib/template/accordion/accordion-group.html","uib/template/accordion/accordion.html","uib/template/alert/alert.html","uib/template/carousel/carousel.html","uib/template/carousel/slide.html","uib/template/datepicker/datepicker.html","uib/template/datepicker/day.html","uib/template/datepicker/month.html","uib/template/datepicker/year.html","uib/template/datepickerPopup/popup.html","uib/template/modal/backdrop.html","uib/template/modal/window.html","uib/template/pager/pager.html","uib/template/pagination/pagination.html","uib/template/tooltip/tooltip-html-popup.html","uib/template/tooltip/tooltip-popup.html","uib/template/tooltip/tooltip-template-popup.html","uib/template/popover/popover-html.html","uib/template/popover/popover-template.html","uib/template/popover/popover.html","uib/template/progressbar/bar.html","uib/template/progressbar/progress.html","uib/template/progressbar/progressbar.html","uib/template/rating/rating.html","uib/template/tabs/tab.html","uib/template/tabs/tabset.html","uib/template/timepicker/timepicker.html","uib/template/typeahead/typeahead-match.html","uib/template/typeahead/typeahead-popup.html"]),angular.module("ui.bootstrap.collapse",[]).directive("uibCollapse",["$animate","$q","$parse","$injector",function(e,t,n,i){var r=i.has("$animateCss")?i.get("$animateCss"):null;return{link:function(i,o,a){function s(){o.hasClass("collapse")&&o.hasClass("in")||t.resolve(p(i)).then(function(){o.removeClass("collapse").addClass("collapsing").attr("aria-expanded",!0).attr("aria-hidden",!1),r?r(o,{addClass:"in",easing:"ease",to:{height:o[0].scrollHeight+"px"}}).start()["finally"](l):e.addClass(o,"in",{to:{height:o[0].scrollHeight+"px"}}).then(l)})}function l(){o.removeClass("collapsing").addClass("collapse").css({height:"auto"}),d(i)}function u(){return o.hasClass("collapse")||o.hasClass("in")?void t.resolve(f(i)).then(function(){o.css({height:o[0].scrollHeight+"px"}).removeClass("collapse").addClass("collapsing").attr("aria-expanded",!1).attr("aria-hidden",!0),r?r(o,{removeClass:"in",to:{height:"0"}}).start()["finally"](c):e.removeClass(o,"in",{to:{height:"0"}}).then(c)}):c()}function c(){o.css({height:"0"}),o.removeClass("collapsing").addClass("collapse"),h(i)}var p=n(a.expanding),d=n(a.expanded),f=n(a.collapsing),h=n(a.collapsed);i.$eval(a.uibCollapse)||o.addClass("in").addClass("collapse").attr("aria-expanded",!0).attr("aria-hidden",!1).css({height:"auto"}),i.$watch(a.uibCollapse,function(e){e?u():s()})}}}]),angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("uibAccordionConfig",{closeOthers:!0}).controller("UibAccordionController",["$scope","$attrs","uibAccordionConfig",function(e,t,n){this.groups=[],this.closeOthers=function(i){var r=angular.isDefined(t.closeOthers)?e.$eval(t.closeOthers):n.closeOthers;r&&angular.forEach(this.groups,function(e){e!==i&&(e.isOpen=!1)})},this.addGroup=function(e){var t=this;this.groups.push(e),e.$on("$destroy",function(n){t.removeGroup(e)})},this.removeGroup=function(e){var t=this.groups.indexOf(e);-1!==t&&this.groups.splice(t,1)}}]).directive("uibAccordion",function(){return{controller:"UibAccordionController",controllerAs:"accordion",transclude:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/accordion/accordion.html"}}}).directive("uibAccordionGroup",function(){return{require:"^uibAccordion",transclude:!0,replace:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/accordion/accordion-group.html"},scope:{heading:"@",panelClass:"@?",isOpen:"=?",isDisabled:"=?"},controller:function(){this.setHeading=function(e){this.heading=e}},link:function(e,t,n,i){i.addGroup(e),e.openClass=n.openClass||"panel-open",e.panelClass=n.panelClass||"panel-default",e.$watch("isOpen",function(n){t.toggleClass(e.openClass,!!n),n&&i.closeOthers(e)}),e.toggleOpen=function(t){e.isDisabled||t&&32!==t.which||(e.isOpen=!e.isOpen)};var r="accordiongroup-"+e.$id+"-"+Math.floor(1e4*Math.random());e.headingId=r+"-tab",e.panelId=r+"-panel"}}}).directive("uibAccordionHeading",function(){return{transclude:!0,template:"",replace:!0,require:"^uibAccordionGroup",link:function(e,t,n,i,r){i.setHeading(r(e,angular.noop))}}}).directive("uibAccordionTransclude",function(){return{require:"^uibAccordionGroup",link:function(e,t,n,i){e.$watch(function(){return i[n.uibAccordionTransclude]},function(e){if(e){var n=angular.element(t[0].querySelector("[uib-accordion-header]"));n.html(""),n.append(e)}})}}}),angular.module("ui.bootstrap.alert",[]).controller("UibAlertController",["$scope","$attrs","$interpolate","$timeout",function(e,t,n,i){e.closeable=!!t.close;var r=angular.isDefined(t.dismissOnTimeout)?n(t.dismissOnTimeout)(e.$parent):null;r&&i(function(){e.close()},parseInt(r,10))}]).directive("uibAlert",function(){return{controller:"UibAlertController",controllerAs:"alert",templateUrl:function(e,t){return t.templateUrl||"uib/template/alert/alert.html"},transclude:!0,replace:!0,scope:{type:"@",close:"&"}}}),angular.module("ui.bootstrap.buttons",[]).constant("uibButtonConfig",{activeClass:"active",toggleEvent:"click"}).controller("UibButtonsController",["uibButtonConfig",function(e){this.activeClass=e.activeClass||"active",this.toggleEvent=e.toggleEvent||"click"}]).directive("uibBtnRadio",["$parse",function(e){return{require:["uibBtnRadio","ngModel"],controller:"UibButtonsController",controllerAs:"buttons",link:function(t,n,i,r){var o=r[0],a=r[1],s=e(i.uibUncheckable);n.find("input").css({display:"none"}),a.$render=function(){n.toggleClass(o.activeClass,angular.equals(a.$modelValue,t.$eval(i.uibBtnRadio)))},n.on(o.toggleEvent,function(){if(!i.disabled){var e=n.hasClass(o.activeClass);e&&!angular.isDefined(i.uncheckable)||t.$apply(function(){a.$setViewValue(e?null:t.$eval(i.uibBtnRadio)),a.$render()})}}),i.uibUncheckable&&t.$watch(s,function(e){i.$set("uncheckable",e?"":void 0)})}}}]).directive("uibBtnCheckbox",function(){return{require:["uibBtnCheckbox","ngModel"],controller:"UibButtonsController",controllerAs:"button",link:function(e,t,n,i){function r(){return a(n.btnCheckboxTrue,!0)}function o(){return a(n.btnCheckboxFalse,!1)}function a(t,n){return angular.isDefined(t)?e.$eval(t):n}var s=i[0],l=i[1];t.find("input").css({display:"none"}),l.$render=function(){t.toggleClass(s.activeClass,angular.equals(l.$modelValue,r()))},t.on(s.toggleEvent,function(){n.disabled||e.$apply(function(){l.$setViewValue(t.hasClass(s.activeClass)?o():r()),l.$render()})})}}}),angular.module("ui.bootstrap.carousel",[]).controller("UibCarouselController",["$scope","$element","$interval","$timeout","$animate",function(e,t,n,i,r){function o(){for(;$.length;)$.shift()}function a(e){for(var t=0;t<g.length;t++)g[t].slide.active=t===e}function s(n,i,l){if(!y){if(angular.extend(n,{direction:l}),angular.extend(g[b].slide||{},{direction:l}),r.enabled(t)&&!e.$currentTransition&&g[i].element&&m.slides.length>1){g[i].element.data(v,n.direction);var u=m.getCurrentIndex();angular.isNumber(u)&&g[u].element&&g[u].element.data(v,n.direction),e.$currentTransition=!0,r.on("addClass",g[i].element,function(t,n){if("close"===n&&(e.$currentTransition=null,r.off("addClass",t),$.length)){var i=$.pop().slide,a=i.index,l=a>m.getCurrentIndex()?"next":"prev";o(),s(i,a,l)}})}e.active=n.index,b=n.index,a(i),p()}}function l(e){for(var t=0;t<g.length;t++)if(g[t].slide===e)return t}function u(){f&&(n.cancel(f),f=null)}function c(t){t.length||(e.$currentTransition=null,o())}function p(){u();var t=+e.interval;!isNaN(t)&&t>0&&(f=n(d,t))}function d(){var t=+e.interval;h&&!isNaN(t)&&t>0&&g.length?e.next():e.pause()}var f,h,m=this,g=m.slides=e.slides=[],v="uib-slideDirection",b=e.active,$=[],y=!1;m.addSlide=function(t,n){g.push({slide:t,element:n}),g.sort(function(e,t){return+e.slide.index-+t.slide.index}),(t.index===e.active||1===g.length&&!angular.isNumber(e.active))&&(e.$currentTransition&&(e.$currentTransition=null),b=t.index,e.active=t.index,a(b),m.select(g[l(t)]),1===g.length&&e.play())},m.getCurrentIndex=function(){for(var e=0;e<g.length;e++)if(g[e].slide.index===b)return e},m.next=e.next=function(){var t=(m.getCurrentIndex()+1)%g.length;return 0===t&&e.noWrap()?void e.pause():m.select(g[t],"next")},m.prev=e.prev=function(){var t=m.getCurrentIndex()-1<0?g.length-1:m.getCurrentIndex()-1;return e.noWrap()&&t===g.length-1?void e.pause():m.select(g[t],"prev")},m.removeSlide=function(t){var n=l(t),i=$.indexOf(g[n]);-1!==i&&$.splice(i,1),g.splice(n,1),g.length>0&&b===n?n>=g.length?(b=g.length-1,e.active=b,a(b),m.select(g[g.length-1])):(b=n,e.active=b,a(b),m.select(g[n])):b>n&&(b--,e.active=b),0===g.length&&(b=null,e.active=null,o())},m.select=e.select=function(t,n){var i=l(t.slide);void 0===n&&(n=i>m.getCurrentIndex()?"next":"prev"),t.slide.index===b||e.$currentTransition?t&&t.slide.index!==b&&e.$currentTransition&&$.push(g[i]):s(t.slide,i,n)},e.indexOfSlide=function(e){return+e.slide.index},e.isActive=function(t){return e.active===t.slide.index},e.isPrevDisabled=function(){return 0===e.active&&e.noWrap()},e.isNextDisabled=function(){return e.active===g.length-1&&e.noWrap()},e.pause=function(){e.noPause||(h=!1,u())},e.play=function(){h||(h=!0,p())},e.$on("$destroy",function(){y=!0,u()}),e.$watch("noTransition",function(e){r.enabled(t,!e)}),e.$watch("interval",p),e.$watchCollection("slides",c),e.$watch("active",function(e){if(angular.isNumber(e)&&b!==e){for(var t=0;t<g.length;t++)if(g[t].slide.index===e){e=t;break}var n=g[e];n&&(a(e),m.select(g[e]),b=e)}})}]).directive("uibCarousel",function(){return{transclude:!0,replace:!0,controller:"UibCarouselController",controllerAs:"carousel",templateUrl:function(e,t){return t.templateUrl||"uib/template/carousel/carousel.html"},scope:{active:"=",interval:"=",noTransition:"=",noPause:"=",noWrap:"&"}}}).directive("uibSlide",function(){return{require:"^uibCarousel",transclude:!0,replace:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/carousel/slide.html"},scope:{actual:"=?",index:"=?"},link:function(e,t,n,i){i.addSlide(e,t),e.$on("$destroy",function(){i.removeSlide(e)})}}}).animation(".item",["$animateCss",function(e){function t(e,t,n){e.removeClass(t),n&&n()}var n="uib-slideDirection";return{beforeAddClass:function(i,r,o){if("active"===r){var a=!1,s=i.data(n),l="next"===s?"left":"right",u=t.bind(this,i,l+" "+s,o);return i.addClass(s),e(i,{addClass:l}).start().done(u),function(){a=!0}}o()},beforeRemoveClass:function(i,r,o){if("active"===r){var a=!1,s=i.data(n),l="next"===s?"left":"right",u=t.bind(this,i,l,o);return e(i,{addClass:l}).start().done(u),function(){a=!0}}o()}}}]),angular.module("ui.bootstrap.dateparser",[]).service("uibDateParser",["$log","$locale","dateFilter","orderByFilter",function(e,t,n,i){function r(e,t){var n=[],r=e.split(""),o=e.indexOf("'");if(o>-1){var a=!1;e=e.split("");for(var s=o;s<e.length;s++)a?("'"===e[s]&&(s+1<e.length&&"'"===e[s+1]?(e[s+1]="$",r[s+1]=""):(r[s]="",a=!1)),e[s]="$"):"'"===e[s]&&(e[s]="$",r[s]="",a=!0);e=e.join("")}return angular.forEach(f,function(i){var o=e.indexOf(i.key);if(o>-1){e=e.split(""),r[o]="("+i.regex+")",e[o]="$";for(var a=o+1,s=o+i.key.length;s>a;a++)r[a]="",e[a]="$";e=e.join(""),n.push({index:o,key:i.key,apply:i[t],matcher:i.regex})}}),{regex:new RegExp("^"+r.join("")+"$"),map:i(n,"index")}}function o(e,t,n){return 1>n?!1:1===t&&n>28?29===n&&(e%4===0&&e%100!==0||e%400===0):3===t||5===t||8===t||10===t?31>n:!0}function a(e){return parseInt(e,10)}function s(e,t){return e&&t?p(e,t):e}function l(e,t){return e&&t?p(e,t,!0):e}function u(e,t){var n=Date.parse("Jan 01, 1970 00:00:00 "+e)/6e4;return isNaN(n)?t:n}function c(e,t){return e=new Date(e.getTime()),e.setMinutes(e.getMinutes()+t),e}function p(e,t,n){n=n?-1:1;var i=u(t,e.getTimezoneOffset());return c(e,n*(i-e.getTimezoneOffset()))}var d,f,h=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;this.init=function(){d=t.id,this.parsers={},this.formatters={},f=[{key:"yyyy",regex:"\\d{4}",apply:function(e){this.year=+e},formatter:function(e){var t=new Date;return t.setFullYear(Math.abs(e.getFullYear())),n(t,"yyyy")}},{key:"yy",regex:"\\d{2}",apply:function(e){e=+e,this.year=69>e?e+2e3:e+1900},formatter:function(e){var t=new Date;return t.setFullYear(Math.abs(e.getFullYear())),n(t,"yy")}},{key:"y",regex:"\\d{1,4}",apply:function(e){this.year=+e},formatter:function(e){var t=new Date;return t.setFullYear(Math.abs(e.getFullYear())),n(t,"y")}},{key:"M!",regex:"0?[1-9]|1[0-2]",apply:function(e){this.month=e-1},formatter:function(e){var t=e.getMonth();return/^[0-9]$/.test(t)?n(e,"MM"):n(e,"M")}},{key:"MMMM",regex:t.DATETIME_FORMATS.MONTH.join("|"),apply:function(e){this.month=t.DATETIME_FORMATS.MONTH.indexOf(e)},formatter:function(e){return n(e,"MMMM")}},{key:"MMM",regex:t.DATETIME_FORMATS.SHORTMONTH.join("|"),apply:function(e){this.month=t.DATETIME_FORMATS.SHORTMONTH.indexOf(e)},formatter:function(e){return n(e,"MMM")}},{key:"MM",regex:"0[1-9]|1[0-2]",apply:function(e){this.month=e-1},formatter:function(e){return n(e,"MM")}},{key:"M",regex:"[1-9]|1[0-2]",apply:function(e){this.month=e-1},formatter:function(e){return n(e,"M")}},{key:"d!",regex:"[0-2]?[0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e},formatter:function(e){var t=e.getDate();return/^[1-9]$/.test(t)?n(e,"dd"):n(e,"d")}},{key:"dd",regex:"[0-2][0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e},formatter:function(e){return n(e,"dd")}},{key:"d",regex:"[1-2]?[0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e},formatter:function(e){return n(e,"d")}},{key:"EEEE",regex:t.DATETIME_FORMATS.DAY.join("|"),formatter:function(e){return n(e,"EEEE")}},{key:"EEE",regex:t.DATETIME_FORMATS.SHORTDAY.join("|"),formatter:function(e){return n(e,"EEE")}},{key:"HH",regex:"(?:0|1)[0-9]|2[0-3]",apply:function(e){this.hours=+e},formatter:function(e){return n(e,"HH")}},{key:"hh",regex:"0[0-9]|1[0-2]",apply:function(e){this.hours=+e},formatter:function(e){return n(e,"hh")}},{key:"H",regex:"1?[0-9]|2[0-3]",apply:function(e){this.hours=+e},formatter:function(e){return n(e,"H")}},{key:"h",regex:"[0-9]|1[0-2]",apply:function(e){this.hours=+e},formatter:function(e){return n(e,"h")}},{key:"mm",regex:"[0-5][0-9]",apply:function(e){this.minutes=+e},formatter:function(e){return n(e,"mm")}},{key:"m",regex:"[0-9]|[1-5][0-9]",apply:function(e){this.minutes=+e},formatter:function(e){return n(e,"m")}},{key:"sss",regex:"[0-9][0-9][0-9]",apply:function(e){this.milliseconds=+e},formatter:function(e){return n(e,"sss")}},{key:"ss",regex:"[0-5][0-9]",apply:function(e){this.seconds=+e},formatter:function(e){return n(e,"ss")}},{key:"s",regex:"[0-9]|[1-5][0-9]",apply:function(e){this.seconds=+e},formatter:function(e){return n(e,"s")}},{key:"a",regex:t.DATETIME_FORMATS.AMPMS.join("|"),apply:function(e){12===this.hours&&(this.hours=0),"PM"===e&&(this.hours+=12)},formatter:function(e){return n(e,"a")}},{key:"Z",regex:"[+-]\\d{4}",apply:function(e){var t=e.match(/([+-])(\d{2})(\d{2})/),n=t[1],i=t[2],r=t[3];this.hours+=a(n+i),this.minutes+=a(n+r)},formatter:function(e){return n(e,"Z")}},{key:"ww",regex:"[0-4][0-9]|5[0-3]",formatter:function(e){return n(e,"ww")}},{key:"w",regex:"[0-9]|[1-4][0-9]|5[0-3]",formatter:function(e){return n(e,"w")}},{key:"GGGG",regex:t.DATETIME_FORMATS.ERANAMES.join("|").replace(/\s/g,"\\s"),formatter:function(e){return n(e,"GGGG")}},{key:"GGG",regex:t.DATETIME_FORMATS.ERAS.join("|"),formatter:function(e){return n(e,"GGG")}},{key:"GG",regex:t.DATETIME_FORMATS.ERAS.join("|"),formatter:function(e){return n(e,"GG")}},{key:"G",regex:t.DATETIME_FORMATS.ERAS.join("|"),formatter:function(e){return n(e,"G")}}]},this.init(),this.filter=function(e,n){if(!angular.isDate(e)||isNaN(e)||!n)return"";n=t.DATETIME_FORMATS[n]||n,t.id!==d&&this.init(),this.formatters[n]||(this.formatters[n]=r(n,"formatter"));var i=this.formatters[n],o=i.map,a=n;return o.reduce(function(t,n,i){var r=a.match(new RegExp("(.*)"+n.key));r&&angular.isString(r[1])&&(t+=r[1],a=a.replace(r[1]+n.key,""));var s=i===o.length-1?a:"";return n.apply?t+n.apply.call(null,e)+s:t+s},"")},this.parse=function(n,i,a){if(!angular.isString(n)||!i)return n;i=t.DATETIME_FORMATS[i]||i,i=i.replace(h,"\\$&"),t.id!==d&&this.init(),this.parsers[i]||(this.parsers[i]=r(i,"apply"));var s=this.parsers[i],l=s.regex,u=s.map,c=n.match(l),p=!1;if(c&&c.length){var f,m;angular.isDate(a)&&!isNaN(a.getTime())?f={year:a.getFullYear(),month:a.getMonth(),date:a.getDate(),hours:a.getHours(),minutes:a.getMinutes(),seconds:a.getSeconds(),milliseconds:a.getMilliseconds()}:(a&&e.warn("dateparser:","baseDate is not a valid date"),f={year:1900,month:0,date:1,hours:0,minutes:0,seconds:0,milliseconds:0});for(var g=1,v=c.length;v>g;g++){var b=u[g-1];"Z"===b.matcher&&(p=!0),b.apply&&b.apply.call(f,c[g])}var $=p?Date.prototype.setUTCFullYear:Date.prototype.setFullYear,y=p?Date.prototype.setUTCHours:Date.prototype.setHours;return o(f.year,f.month,f.date)&&(!angular.isDate(a)||isNaN(a.getTime())||p?(m=new Date(0),$.call(m,f.year,f.month,f.date),y.call(m,f.hours||0,f.minutes||0,f.seconds||0,f.milliseconds||0)):(m=new Date(a),$.call(m,f.year,f.month,f.date),y.call(m,f.hours,f.minutes,f.seconds,f.milliseconds))),m}},this.toTimezone=s,this.fromTimezone=l,this.timezoneToOffset=u,this.addDateMinutes=c,this.convertTimezoneToLocal=p}]),angular.module("ui.bootstrap.isClass",[]).directive("uibIsClass",["$animate",function(e){var t=/^\s*([\s\S]+?)\s+on\s+([\s\S]+?)\s*$/,n=/^\s*([\s\S]+?)\s+for\s+([\s\S]+?)\s*$/;return{restrict:"A",compile:function(i,r){function o(e,t,n){l.push(e),u.push({scope:e,element:t}),h.forEach(function(t,n){a(t,e)}),e.$on("$destroy",s)}function a(t,i){var r=t.match(n),o=i.$eval(r[1]),a=r[2],s=c[t];if(!s){var l=function(t){var n=null;u.some(function(e){var i=e.scope.$eval(d);return i===t?(n=e,!0):void 0}),s.lastActivated!==n&&(s.lastActivated&&e.removeClass(s.lastActivated.element,o),n&&e.addClass(n.element,o),s.lastActivated=n)};c[t]=s={lastActivated:null,scope:i,watchFn:l,compareWithExp:a,watcher:i.$watch(a,l)}}s.watchFn(i.$eval(a))}function s(e){var t=e.targetScope,n=l.indexOf(t);if(l.splice(n,1),u.splice(n,1),l.length){var i=l[0];angular.forEach(c,function(e){e.scope===t&&(e.watcher=i.$watch(e.compareWithExp,e.watchFn),e.scope=i)})}else c={}}var l=[],u=[],c={},p=r.uibIsClass.match(t),d=p[2],f=p[1],h=f.split(",");return o}}}]),angular.module("ui.bootstrap.datepicker",["ui.bootstrap.dateparser","ui.bootstrap.isClass"]).value("$datepickerSuppressError",!1).value("$datepickerLiteralWarning",!0).constant("uibDatepickerConfig",{datepickerMode:"day",formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",formatDayHeader:"EEE",formatDayTitle:"MMMM yyyy",formatMonthTitle:"yyyy",maxDate:null,maxMode:"year",minDate:null,minMode:"day",ngModelOptions:{},shortcutPropagation:!1,showWeeks:!0,yearColumns:5,yearRows:4}).controller("UibDatepickerController",["$scope","$attrs","$parse","$interpolate","$locale","$log","dateFilter","uibDatepickerConfig","$datepickerLiteralWarning","$datepickerSuppressError","uibDateParser",function(e,t,n,i,r,o,a,s,l,u,c){function p(t){e.datepickerMode=t,e.datepickerOptions.datepickerMode=t}var d=this,f={$setViewValue:angular.noop},h={},m=[];!!t.datepickerOptions,e.datepickerOptions||(e.datepickerOptions={}),this.modes=["day","month","year"],["customClass","dateDisabled","datepickerMode","formatDay","formatDayHeader","formatDayTitle","formatMonth","formatMonthTitle","formatYear","maxDate","maxMode","minDate","minMode","showWeeks","shortcutPropagation","startingDay","yearColumns","yearRows"].forEach(function(t){switch(t){case"customClass":case"dateDisabled":e[t]=e.datepickerOptions[t]||angular.noop;break;case"datepickerMode":e.datepickerMode=angular.isDefined(e.datepickerOptions.datepickerMode)?e.datepickerOptions.datepickerMode:s.datepickerMode;break;case"formatDay":case"formatDayHeader":case"formatDayTitle":case"formatMonth":case"formatMonthTitle":case"formatYear":d[t]=angular.isDefined(e.datepickerOptions[t])?i(e.datepickerOptions[t])(e.$parent):s[t];break;case"showWeeks":case"shortcutPropagation":case"yearColumns":case"yearRows":d[t]=angular.isDefined(e.datepickerOptions[t])?e.datepickerOptions[t]:s[t];break;case"startingDay":angular.isDefined(e.datepickerOptions.startingDay)?d.startingDay=e.datepickerOptions.startingDay:angular.isNumber(s.startingDay)?d.startingDay=s.startingDay:d.startingDay=(r.DATETIME_FORMATS.FIRSTDAYOFWEEK+8)%7;break;case"maxDate":case"minDate":e.$watch("datepickerOptions."+t,function(e){e?angular.isDate(e)?d[t]=c.fromTimezone(new Date(e),h.timezone):(l&&o.warn("Literal date support has been deprecated, please switch to date object usage"),d[t]=new Date(a(e,"medium"))):d[t]=s[t]?c.fromTimezone(new Date(s[t]),h.timezone):null,d.refreshView()});break;case"maxMode":case"minMode":e.datepickerOptions[t]?e.$watch(function(){return e.datepickerOptions[t]},function(n){d[t]=e[t]=angular.isDefined(n)?n:datepickerOptions[t],("minMode"===t&&d.modes.indexOf(e.datepickerOptions.datepickerMode)<d.modes.indexOf(d[t])||"maxMode"===t&&d.modes.indexOf(e.datepickerOptions.datepickerMode)>d.modes.indexOf(d[t]))&&(e.datepickerMode=d[t],e.datepickerOptions.datepickerMode=d[t])}):d[t]=e[t]=s[t]||null}}),e.uniqueId="datepicker-"+e.$id+"-"+Math.floor(1e4*Math.random()),e.disabled=angular.isDefined(t.disabled)||!1,angular.isDefined(t.ngDisabled)&&m.push(e.$parent.$watch(t.ngDisabled,function(t){e.disabled=t,d.refreshView()})),e.isActive=function(t){return 0===d.compare(t.date,d.activeDate)?(e.activeDateId=t.uid,!0):!1},this.init=function(t){f=t,h=t.$options||s.ngModelOptions,e.datepickerOptions.initDate?(d.activeDate=c.fromTimezone(e.datepickerOptions.initDate,h.timezone)||new Date,e.$watch("datepickerOptions.initDate",function(e){e&&(f.$isEmpty(f.$modelValue)||f.$invalid)&&(d.activeDate=c.fromTimezone(e,h.timezone),d.refreshView())})):d.activeDate=new Date,this.activeDate=f.$modelValue?c.fromTimezone(new Date(f.$modelValue),h.timezone):c.fromTimezone(new Date,h.timezone),f.$render=function(){d.render()}},this.render=function(){if(f.$viewValue){var e=new Date(f.$viewValue),t=!isNaN(e);t?this.activeDate=c.fromTimezone(e,h.timezone):u||o.error('Datepicker directive: "ng-model" value must be a Date object')}this.refreshView()},this.refreshView=function(){if(this.element){e.selectedDt=null,this._refreshView(),e.activeDt&&(e.activeDateId=e.activeDt.uid);var t=f.$viewValue?new Date(f.$viewValue):null;t=c.fromTimezone(t,h.timezone),f.$setValidity("dateDisabled",!t||this.element&&!this.isDisabled(t))}},this.createDateObject=function(t,n){var i=f.$viewValue?new Date(f.$viewValue):null;i=c.fromTimezone(i,h.timezone);var r=new Date;r=c.fromTimezone(r,h.timezone);var o=this.compare(t,r),a={date:t,label:c.filter(t,n),selected:i&&0===this.compare(t,i),disabled:this.isDisabled(t),past:0>o,current:0===o,future:o>0,customClass:this.customClass(t)||null};return i&&0===this.compare(t,i)&&(e.selectedDt=a),d.activeDate&&0===this.compare(a.date,d.activeDate)&&(e.activeDt=a),a},this.isDisabled=function(t){return e.disabled||this.minDate&&this.compare(t,this.minDate)<0||this.maxDate&&this.compare(t,this.maxDate)>0||e.dateDisabled&&e.dateDisabled({date:t,mode:e.datepickerMode})},this.customClass=function(t){return e.customClass({date:t,mode:e.datepickerMode})},this.split=function(e,t){for(var n=[];e.length>0;)n.push(e.splice(0,t));return n},e.select=function(t){if(e.datepickerMode===d.minMode){var n=f.$viewValue?c.fromTimezone(new Date(f.$viewValue),h.timezone):new Date(0,0,0,0,0,0,0);n.setFullYear(t.getFullYear(),t.getMonth(),t.getDate()),n=c.toTimezone(n,h.timezone),f.$setViewValue(n),f.$render()}else d.activeDate=t,p(d.modes[d.modes.indexOf(e.datepickerMode)-1]),e.$emit("uib:datepicker.mode");e.$broadcast("uib:datepicker.focus")},e.move=function(e){var t=d.activeDate.getFullYear()+e*(d.step.years||0),n=d.activeDate.getMonth()+e*(d.step.months||0);d.activeDate.setFullYear(t,n,1),d.refreshView()},e.toggleMode=function(t){t=t||1,e.datepickerMode===d.maxMode&&1===t||e.datepickerMode===d.minMode&&-1===t||(p(d.modes[d.modes.indexOf(e.datepickerMode)+t]),e.$emit("uib:datepicker.mode"))},e.keys={13:"enter",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down"};var g=function(){d.element[0].focus()};e.$on("uib:datepicker.focus",g),e.keydown=function(t){var n=e.keys[t.which];if(n&&!t.shiftKey&&!t.altKey&&!e.disabled)if(t.preventDefault(),d.shortcutPropagation||t.stopPropagation(),"enter"===n||"space"===n){if(d.isDisabled(d.activeDate))return;e.select(d.activeDate)}else!t.ctrlKey||"up"!==n&&"down"!==n?(d.handleKeyDown(n,t),d.refreshView()):e.toggleMode("up"===n?1:-1)},e.$on("$destroy",function(){for(;m.length;)m.shift()()})}]).controller("UibDaypickerController",["$scope","$element","dateFilter",function(e,t,n){function i(e,t){return 1!==t||e%4!==0||e%100===0&&e%400!==0?o[t]:29}function r(e){var t=new Date(e);t.setDate(t.getDate()+4-(t.getDay()||7));var n=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((n-t)/864e5)/7)+1}var o=[31,28,31,30,31,30,31,31,30,31,30,31];this.step={months:1},this.element=t,this.init=function(t){angular.extend(t,this),e.showWeeks=t.showWeeks,t.refreshView()},this.getDates=function(e,t){for(var n,i=new Array(t),r=new Date(e),o=0;t>o;)n=new Date(r),i[o++]=n,r.setDate(r.getDate()+1);return i},this._refreshView=function(){var t=this.activeDate.getFullYear(),i=this.activeDate.getMonth(),o=new Date(this.activeDate);o.setFullYear(t,i,1);var a=this.startingDay-o.getDay(),s=a>0?7-a:-a,l=new Date(o);s>0&&l.setDate(-s+1);for(var u=this.getDates(l,42),c=0;42>c;c++)u[c]=angular.extend(this.createDateObject(u[c],this.formatDay),{secondary:u[c].getMonth()!==i,uid:e.uniqueId+"-"+c});e.labels=new Array(7);for(var p=0;7>p;p++)e.labels[p]={abbr:n(u[p].date,this.formatDayHeader),full:n(u[p].date,"EEEE")};if(e.title=n(this.activeDate,this.formatDayTitle),e.rows=this.split(u,7),e.showWeeks){e.weekNumbers=[];for(var d=(11-this.startingDay)%7,f=e.rows.length,h=0;f>h;h++)e.weekNumbers.push(r(e.rows[h][d].date))}},this.compare=function(e,t){var n=new Date(e.getFullYear(),e.getMonth(),e.getDate()),i=new Date(t.getFullYear(),t.getMonth(),t.getDate());return n.setFullYear(e.getFullYear()),i.setFullYear(t.getFullYear()),n-i},this.handleKeyDown=function(e,t){var n=this.activeDate.getDate();if("left"===e)n-=1;else if("up"===e)n-=7;else if("right"===e)n+=1;else if("down"===e)n+=7;else if("pageup"===e||"pagedown"===e){var r=this.activeDate.getMonth()+("pageup"===e?-1:1);this.activeDate.setMonth(r,1),n=Math.min(i(this.activeDate.getFullYear(),this.activeDate.getMonth()),n)}else"home"===e?n=1:"end"===e&&(n=i(this.activeDate.getFullYear(),this.activeDate.getMonth()));this.activeDate.setDate(n)}}]).controller("UibMonthpickerController",["$scope","$element","dateFilter",function(e,t,n){this.step={years:1},this.element=t,this.init=function(e){angular.extend(e,this),e.refreshView()},this._refreshView=function(){for(var t,i=new Array(12),r=this.activeDate.getFullYear(),o=0;12>o;o++)t=new Date(this.activeDate),t.setFullYear(r,o,1),i[o]=angular.extend(this.createDateObject(t,this.formatMonth),{uid:e.uniqueId+"-"+o});e.title=n(this.activeDate,this.formatMonthTitle),e.rows=this.split(i,3)},this.compare=function(e,t){var n=new Date(e.getFullYear(),e.getMonth()),i=new Date(t.getFullYear(),t.getMonth());return n.setFullYear(e.getFullYear()),i.setFullYear(t.getFullYear()),n-i},this.handleKeyDown=function(e,t){var n=this.activeDate.getMonth();if("left"===e)n-=1;else if("up"===e)n-=3;else if("right"===e)n+=1;else if("down"===e)n+=3;else if("pageup"===e||"pagedown"===e){var i=this.activeDate.getFullYear()+("pageup"===e?-1:1);this.activeDate.setFullYear(i)}else"home"===e?n=0:"end"===e&&(n=11);this.activeDate.setMonth(n)}}]).controller("UibYearpickerController",["$scope","$element","dateFilter",function(e,t,n){function i(e){return parseInt((e-1)/o,10)*o+1}var r,o;this.element=t,this.yearpickerInit=function(){r=this.yearColumns,o=this.yearRows*r,this.step={years:o}},this._refreshView=function(){for(var t,n=new Array(o),a=0,s=i(this.activeDate.getFullYear());o>a;a++)t=new Date(this.activeDate),t.setFullYear(s+a,0,1),n[a]=angular.extend(this.createDateObject(t,this.formatYear),{uid:e.uniqueId+"-"+a});e.title=[n[0].label,n[o-1].label].join(" - "),
e.rows=this.split(n,r),e.columns=r},this.compare=function(e,t){return e.getFullYear()-t.getFullYear()},this.handleKeyDown=function(e,t){var n=this.activeDate.getFullYear();"left"===e?n-=1:"up"===e?n-=r:"right"===e?n+=1:"down"===e?n+=r:"pageup"===e||"pagedown"===e?n+=("pageup"===e?-1:1)*o:"home"===e?n=i(this.activeDate.getFullYear()):"end"===e&&(n=i(this.activeDate.getFullYear())+o-1),this.activeDate.setFullYear(n)}}]).directive("uibDatepicker",function(){return{replace:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/datepicker/datepicker.html"},scope:{datepickerOptions:"=?"},require:["uibDatepicker","^ngModel"],controller:"UibDatepickerController",controllerAs:"datepicker",link:function(e,t,n,i){var r=i[0],o=i[1];r.init(o)}}}).directive("uibDaypicker",function(){return{replace:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/datepicker/day.html"},require:["^uibDatepicker","uibDaypicker"],controller:"UibDaypickerController",link:function(e,t,n,i){var r=i[0],o=i[1];o.init(r)}}}).directive("uibMonthpicker",function(){return{replace:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/datepicker/month.html"},require:["^uibDatepicker","uibMonthpicker"],controller:"UibMonthpickerController",link:function(e,t,n,i){var r=i[0],o=i[1];o.init(r)}}}).directive("uibYearpicker",function(){return{replace:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/datepicker/year.html"},require:["^uibDatepicker","uibYearpicker"],controller:"UibYearpickerController",link:function(e,t,n,i){var r=i[0];angular.extend(r,i[1]),r.yearpickerInit(),r.refreshView()}}}),angular.module("ui.bootstrap.position",[]).factory("$uibPosition",["$document","$window",function(e,t){var n,i,r={normal:/(auto|scroll)/,hidden:/(auto|scroll|hidden)/},o={auto:/\s?auto?\s?/i,primary:/^(top|bottom|left|right)$/,secondary:/^(top|bottom|left|right|center)$/,vertical:/^(top|bottom)$/},a=/(HTML|BODY)/;return{getRawNode:function(e){return e.nodeName?e:e[0]||e},parseStyle:function(e){return e=parseFloat(e),isFinite(e)?e:0},offsetParent:function(n){function i(e){return"static"===(t.getComputedStyle(e).position||"static")}n=this.getRawNode(n);for(var r=n.offsetParent||e[0].documentElement;r&&r!==e[0].documentElement&&i(r);)r=r.offsetParent;return r||e[0].documentElement},scrollbarWidth:function(r){if(r){if(angular.isUndefined(i)){var o=e.find("body");o.addClass("uib-position-body-scrollbar-measure"),i=t.innerWidth-o[0].clientWidth,i=isFinite(i)?i:0,o.removeClass("uib-position-body-scrollbar-measure")}return i}if(angular.isUndefined(n)){var a=angular.element('<div class="uib-position-scrollbar-measure"></div>');e.find("body").append(a),n=a[0].offsetWidth-a[0].clientWidth,n=isFinite(n)?n:0,a.remove()}return n},scrollbarPadding:function(e){e=this.getRawNode(e);var n=t.getComputedStyle(e),i=this.parseStyle(n.paddingRight),r=this.parseStyle(n.paddingBottom),o=this.scrollParent(e,!1,!0),s=this.scrollbarWidth(o,a.test(o.tagName));return{scrollbarWidth:s,widthOverflow:o.scrollWidth>o.clientWidth,right:i+s,originalRight:i,heightOverflow:o.scrollHeight>o.clientHeight,bottom:r+s,originalBottom:r}},isScrollable:function(e,n){e=this.getRawNode(e);var i=n?r.hidden:r.normal,o=t.getComputedStyle(e);return i.test(o.overflow+o.overflowY+o.overflowX)},scrollParent:function(n,i,o){n=this.getRawNode(n);var a=i?r.hidden:r.normal,s=e[0].documentElement,l=t.getComputedStyle(n);if(o&&a.test(l.overflow+l.overflowY+l.overflowX))return n;var u="absolute"===l.position,c=n.parentElement||s;if(c===s||"fixed"===l.position)return s;for(;c.parentElement&&c!==s;){var p=t.getComputedStyle(c);if(u&&"static"!==p.position&&(u=!1),!u&&a.test(p.overflow+p.overflowY+p.overflowX))break;c=c.parentElement}return c},position:function(n,i){n=this.getRawNode(n);var r=this.offset(n);if(i){var o=t.getComputedStyle(n);r.top-=this.parseStyle(o.marginTop),r.left-=this.parseStyle(o.marginLeft)}var a=this.offsetParent(n),s={top:0,left:0};return a!==e[0].documentElement&&(s=this.offset(a),s.top+=a.clientTop-a.scrollTop,s.left+=a.clientLeft-a.scrollLeft),{width:Math.round(angular.isNumber(r.width)?r.width:n.offsetWidth),height:Math.round(angular.isNumber(r.height)?r.height:n.offsetHeight),top:Math.round(r.top-s.top),left:Math.round(r.left-s.left)}},offset:function(n){n=this.getRawNode(n);var i=n.getBoundingClientRect();return{width:Math.round(angular.isNumber(i.width)?i.width:n.offsetWidth),height:Math.round(angular.isNumber(i.height)?i.height:n.offsetHeight),top:Math.round(i.top+(t.pageYOffset||e[0].documentElement.scrollTop)),left:Math.round(i.left+(t.pageXOffset||e[0].documentElement.scrollLeft))}},viewportOffset:function(n,i,r){n=this.getRawNode(n),r=r!==!1;var o=n.getBoundingClientRect(),a={top:0,left:0,bottom:0,right:0},s=i?e[0].documentElement:this.scrollParent(n),l=s.getBoundingClientRect();if(a.top=l.top+s.clientTop,a.left=l.left+s.clientLeft,s===e[0].documentElement&&(a.top+=t.pageYOffset,a.left+=t.pageXOffset),a.bottom=a.top+s.clientHeight,a.right=a.left+s.clientWidth,r){var u=t.getComputedStyle(s);a.top+=this.parseStyle(u.paddingTop),a.bottom-=this.parseStyle(u.paddingBottom),a.left+=this.parseStyle(u.paddingLeft),a.right-=this.parseStyle(u.paddingRight)}return{top:Math.round(o.top-a.top),bottom:Math.round(a.bottom-o.bottom),left:Math.round(o.left-a.left),right:Math.round(a.right-o.right)}},parsePlacement:function(e){var t=o.auto.test(e);return t&&(e=e.replace(o.auto,"")),e=e.split("-"),e[0]=e[0]||"top",o.primary.test(e[0])||(e[0]="top"),e[1]=e[1]||"center",o.secondary.test(e[1])||(e[1]="center"),t?e[2]=!0:e[2]=!1,e},positionElements:function(e,n,i,r){e=this.getRawNode(e),n=this.getRawNode(n);var a=angular.isDefined(n.offsetWidth)?n.offsetWidth:n.prop("offsetWidth"),s=angular.isDefined(n.offsetHeight)?n.offsetHeight:n.prop("offsetHeight");i=this.parsePlacement(i);var l=r?this.offset(e):this.position(e),u={top:0,left:0,placement:""};if(i[2]){var c=this.viewportOffset(e,r),p=t.getComputedStyle(n),d={width:a+Math.round(Math.abs(this.parseStyle(p.marginLeft)+this.parseStyle(p.marginRight))),height:s+Math.round(Math.abs(this.parseStyle(p.marginTop)+this.parseStyle(p.marginBottom)))};if(i[0]="top"===i[0]&&d.height>c.top&&d.height<=c.bottom?"bottom":"bottom"===i[0]&&d.height>c.bottom&&d.height<=c.top?"top":"left"===i[0]&&d.width>c.left&&d.width<=c.right?"right":"right"===i[0]&&d.width>c.right&&d.width<=c.left?"left":i[0],i[1]="top"===i[1]&&d.height-l.height>c.bottom&&d.height-l.height<=c.top?"bottom":"bottom"===i[1]&&d.height-l.height>c.top&&d.height-l.height<=c.bottom?"top":"left"===i[1]&&d.width-l.width>c.right&&d.width-l.width<=c.left?"right":"right"===i[1]&&d.width-l.width>c.left&&d.width-l.width<=c.right?"left":i[1],"center"===i[1])if(o.vertical.test(i[0])){var f=l.width/2-a/2;c.left+f<0&&d.width-l.width<=c.right?i[1]="left":c.right+f<0&&d.width-l.width<=c.left&&(i[1]="right")}else{var h=l.height/2-d.height/2;c.top+h<0&&d.height-l.height<=c.bottom?i[1]="top":c.bottom+h<0&&d.height-l.height<=c.top&&(i[1]="bottom")}}switch(i[0]){case"top":u.top=l.top-s;break;case"bottom":u.top=l.top+l.height;break;case"left":u.left=l.left-a;break;case"right":u.left=l.left+l.width}switch(i[1]){case"top":u.top=l.top;break;case"bottom":u.top=l.top+l.height-s;break;case"left":u.left=l.left;break;case"right":u.left=l.left+l.width-a;break;case"center":o.vertical.test(i[0])?u.left=l.left+l.width/2-a/2:u.top=l.top+l.height/2-s/2}return u.top=Math.round(u.top),u.left=Math.round(u.left),u.placement="center"===i[1]?i[0]:i[0]+"-"+i[1],u},positionArrow:function(e,n){e=this.getRawNode(e);var i=e.querySelector(".tooltip-inner, .popover-inner");if(i){var r=angular.element(i).hasClass("tooltip-inner"),a=r?e.querySelector(".tooltip-arrow"):e.querySelector(".arrow");if(a){var s={top:"",bottom:"",left:"",right:""};if(n=this.parsePlacement(n),"center"===n[1])return void angular.element(a).css(s);var l="border-"+n[0]+"-width",u=t.getComputedStyle(a)[l],c="border-";c+=o.vertical.test(n[0])?n[0]+"-"+n[1]:n[1]+"-"+n[0],c+="-radius";var p=t.getComputedStyle(r?i:e)[c];switch(n[0]){case"top":s.bottom=r?"0":"-"+u;break;case"bottom":s.top=r?"0":"-"+u;break;case"left":s.right=r?"0":"-"+u;break;case"right":s.left=r?"0":"-"+u}s[n[1]]=p,angular.element(a).css(s)}}}}}]),angular.module("ui.bootstrap.datepickerPopup",["ui.bootstrap.datepicker","ui.bootstrap.position"]).value("$datepickerPopupLiteralWarning",!0).constant("uibDatepickerPopupConfig",{altInputFormats:[],appendToBody:!1,clearText:"Clear",closeOnDateSelection:!0,closeText:"Done",currentText:"Today",datepickerPopup:"yyyy-MM-dd",datepickerPopupTemplateUrl:"uib/template/datepickerPopup/popup.html",datepickerTemplateUrl:"uib/template/datepicker/datepicker.html",html5Types:{date:"yyyy-MM-dd","datetime-local":"yyyy-MM-ddTHH:mm:ss.sss",month:"yyyy-MM"},onOpenFocus:!0,showButtonBar:!0,placement:"auto bottom-left"}).controller("UibDatepickerPopupController",["$scope","$element","$attrs","$compile","$log","$parse","$window","$document","$rootScope","$uibPosition","dateFilter","uibDateParser","uibDatepickerPopupConfig","$timeout","uibDatepickerConfig","$datepickerPopupLiteralWarning",function(e,t,n,i,r,o,a,s,l,u,c,p,d,f,h,m){function g(t){var n=p.parse(t,x,e.date);if(isNaN(n))for(var i=0;i<I.length;i++)if(n=p.parse(t,I[i],e.date),!isNaN(n))return n;return n}function v(e){if(angular.isNumber(e)&&(e=new Date(e)),!e)return null;if(angular.isDate(e)&&!isNaN(e))return e;if(angular.isString(e)){var t=g(e);if(!isNaN(t))return p.toTimezone(t,N)}return M.$options&&M.$options.allowInvalid?e:void 0}function b(e,t){var i=e||t;return n.ngRequired||i?(angular.isNumber(i)&&(i=new Date(i)),i?angular.isDate(i)&&!isNaN(i)?!0:angular.isString(i)?!isNaN(g(t)):!1:!0):!0}function $(n){if(e.isOpen||!e.disabled){var i=R[0],r=t[0].contains(n.target),o=void 0!==i.contains&&i.contains(n.target);!e.isOpen||r||o||e.$apply(function(){e.isOpen=!1})}}function y(n){27===n.which&&e.isOpen?(n.preventDefault(),n.stopPropagation(),e.$apply(function(){e.isOpen=!1}),t[0].focus()):40!==n.which||e.isOpen||(n.preventDefault(),n.stopPropagation(),e.$apply(function(){e.isOpen=!0}))}function w(){if(e.isOpen){var i=angular.element(R[0].querySelector(".uib-datepicker-popup")),r=n.popupPlacement?n.popupPlacement:d.placement,o=u.positionElements(t,i,r,C);i.css({top:o.top+"px",left:o.left+"px"}),i.hasClass("uib-position-measure")&&i.removeClass("uib-position-measure")}}var x,S,C,k,E,T,P,D,A,M,O,R,I,N,L=!1,U=[];this.init=function(r){if(M=r,O=r.$options,S=angular.isDefined(n.closeOnDateSelection)?e.$parent.$eval(n.closeOnDateSelection):d.closeOnDateSelection,C=angular.isDefined(n.datepickerAppendToBody)?e.$parent.$eval(n.datepickerAppendToBody):d.appendToBody,k=angular.isDefined(n.onOpenFocus)?e.$parent.$eval(n.onOpenFocus):d.onOpenFocus,E=angular.isDefined(n.datepickerPopupTemplateUrl)?n.datepickerPopupTemplateUrl:d.datepickerPopupTemplateUrl,T=angular.isDefined(n.datepickerTemplateUrl)?n.datepickerTemplateUrl:d.datepickerTemplateUrl,I=angular.isDefined(n.altInputFormats)?e.$parent.$eval(n.altInputFormats):d.altInputFormats,e.showButtonBar=angular.isDefined(n.showButtonBar)?e.$parent.$eval(n.showButtonBar):d.showButtonBar,d.html5Types[n.type]?(x=d.html5Types[n.type],L=!0):(x=n.uibDatepickerPopup||d.datepickerPopup,n.$observe("uibDatepickerPopup",function(e,t){var n=e||d.datepickerPopup;if(n!==x&&(x=n,M.$modelValue=null,!x))throw new Error("uibDatepickerPopup must have a date format specified.")})),!x)throw new Error("uibDatepickerPopup must have a date format specified.");if(L&&n.uibDatepickerPopup)throw new Error("HTML5 date input types do not support custom formats.");P=angular.element("<div uib-datepicker-popup-wrap><div uib-datepicker></div></div>"),O?(N=O.timezone,e.ngModelOptions=angular.copy(O),e.ngModelOptions.timezone=null,e.ngModelOptions.updateOnDefault===!0&&(e.ngModelOptions.updateOn=e.ngModelOptions.updateOn?e.ngModelOptions.updateOn+" default":"default"),P.attr("ng-model-options","ngModelOptions")):N=null,P.attr({"ng-model":"date","ng-change":"dateSelection(date)","template-url":E}),D=angular.element(P.children()[0]),D.attr("template-url",T),e.datepickerOptions||(e.datepickerOptions={}),L&&"month"===n.type&&(e.datepickerOptions.datepickerMode="month",e.datepickerOptions.minMode="month"),D.attr("datepicker-options","datepickerOptions"),L?M.$formatters.push(function(t){return e.date=p.fromTimezone(t,N),t}):(M.$$parserName="date",M.$validators.date=b,M.$parsers.unshift(v),M.$formatters.push(function(t){return M.$isEmpty(t)?(e.date=t,t):(e.date=p.fromTimezone(t,N),angular.isNumber(e.date)&&(e.date=new Date(e.date)),p.filter(e.date,x))})),M.$viewChangeListeners.push(function(){e.date=g(M.$viewValue)}),t.on("keydown",y),R=i(P)(e),P.remove(),C?s.find("body").append(R):t.after(R),e.$on("$destroy",function(){for(e.isOpen===!0&&(l.$$phase||e.$apply(function(){e.isOpen=!1})),R.remove(),t.off("keydown",y),s.off("click",$),A&&A.off("scroll",w),angular.element(a).off("resize",w);U.length;)U.shift()()})},e.getText=function(t){return e[t+"Text"]||d[t+"Text"]},e.isDisabled=function(t){"today"===t&&(t=p.fromTimezone(new Date,N));var n={};return angular.forEach(["minDate","maxDate"],function(t){e.datepickerOptions[t]?angular.isDate(e.datepickerOptions[t])?n[t]=p.fromTimezone(new Date(e.datepickerOptions[t]),N):(m&&r.warn("Literal date support has been deprecated, please switch to date object usage"),n[t]=new Date(c(e.datepickerOptions[t],"medium"))):n[t]=null}),e.datepickerOptions&&n.minDate&&e.compare(t,n.minDate)<0||n.maxDate&&e.compare(t,n.maxDate)>0},e.compare=function(e,t){return new Date(e.getFullYear(),e.getMonth(),e.getDate())-new Date(t.getFullYear(),t.getMonth(),t.getDate())},e.dateSelection=function(n){angular.isDefined(n)&&(e.date=n);var i=e.date?p.filter(e.date,x):null;t.val(i),M.$setViewValue(i),S&&(e.isOpen=!1,t[0].focus())},e.keydown=function(n){27===n.which&&(n.stopPropagation(),e.isOpen=!1,t[0].focus())},e.select=function(t,n){if(n.stopPropagation(),"today"===t){var i=new Date;angular.isDate(e.date)?(t=new Date(e.date),t.setFullYear(i.getFullYear(),i.getMonth(),i.getDate())):t=new Date(i.setHours(0,0,0,0))}e.dateSelection(t)},e.close=function(n){n.stopPropagation(),e.isOpen=!1,t[0].focus()},e.disabled=angular.isDefined(n.disabled)||!1,n.ngDisabled&&U.push(e.$parent.$watch(o(n.ngDisabled),function(t){e.disabled=t})),e.$watch("isOpen",function(i){i?e.disabled?e.isOpen=!1:f(function(){w(),k&&e.$broadcast("uib:datepicker.focus"),s.on("click",$);var i=n.popupPlacement?n.popupPlacement:d.placement;C||u.parsePlacement(i)[2]?(A=A||angular.element(u.scrollParent(t)),A&&A.on("scroll",w)):A=null,angular.element(a).on("resize",w)},0,!1):(s.off("click",$),A&&A.off("scroll",w),angular.element(a).off("resize",w))}),e.$on("uib:datepicker.mode",function(){f(w,0,!1)})}]).directive("uibDatepickerPopup",function(){return{require:["ngModel","uibDatepickerPopup"],controller:"UibDatepickerPopupController",scope:{datepickerOptions:"=?",isOpen:"=?",currentText:"@",clearText:"@",closeText:"@"},link:function(e,t,n,i){var r=i[0],o=i[1];o.init(r)}}}).directive("uibDatepickerPopupWrap",function(){return{replace:!0,transclude:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/datepickerPopup/popup.html"}}}),angular.module("ui.bootstrap.debounce",[]).factory("$$debounce",["$timeout",function(e){return function(t,n){var i;return function(){var r=this,o=Array.prototype.slice.call(arguments);i&&e.cancel(i),i=e(function(){t.apply(r,o)},n)}}}]),angular.module("ui.bootstrap.dropdown",["ui.bootstrap.position"]).constant("uibDropdownConfig",{appendToOpenClass:"uib-dropdown-open",openClass:"open"}).service("uibDropdownService",["$document","$rootScope",function(e,t){var n=null;this.open=function(t,o){n||(e.on("click",i),o.on("keydown",r)),n&&n!==t&&(n.isOpen=!1),n=t},this.close=function(t,o){n===t&&(n=null,e.off("click",i),o.off("keydown",r))};var i=function(e){if(n&&!(e&&"disabled"===n.getAutoClose()||e&&3===e.which)){var i=n.getToggleElement();if(!(e&&i&&i[0].contains(e.target))){var r=n.getDropdownElement();e&&"outsideClick"===n.getAutoClose()&&r&&r[0].contains(e.target)||(n.isOpen=!1,t.$$phase||n.$apply())}}},r=function(e){27===e.which?(e.stopPropagation(),n.focusToggleElement(),i()):n.isKeynavEnabled()&&-1!==[38,40].indexOf(e.which)&&n.isOpen&&(e.preventDefault(),e.stopPropagation(),n.focusDropdownEntry(e.which))}}]).controller("UibDropdownController",["$scope","$element","$attrs","$parse","uibDropdownConfig","uibDropdownService","$animate","$uibPosition","$document","$compile","$templateRequest",function(e,t,n,i,r,o,a,s,l,u,c){var p,d,f=this,h=e.$new(),m=r.appendToOpenClass,g=r.openClass,v=angular.noop,b=n.onToggle?i(n.onToggle):angular.noop,$=!1,y=null,w=!1,x=l.find("body");t.addClass("dropdown"),this.init=function(){if(n.isOpen&&(d=i(n.isOpen),v=d.assign,e.$watch(d,function(e){h.isOpen=!!e})),angular.isDefined(n.dropdownAppendTo)){var r=i(n.dropdownAppendTo)(h);r&&(y=angular.element(r))}$=angular.isDefined(n.dropdownAppendToBody),w=angular.isDefined(n.keyboardNav),$&&!y&&(y=x),y&&f.dropdownMenu&&(y.append(f.dropdownMenu),t.on("$destroy",function(){f.dropdownMenu.remove()}))},this.toggle=function(e){return h.isOpen=arguments.length?!!e:!h.isOpen,angular.isFunction(v)&&v(h,h.isOpen),h.isOpen},this.isOpen=function(){return h.isOpen},h.getToggleElement=function(){return f.toggleElement},h.getAutoClose=function(){return n.autoClose||"always"},h.getElement=function(){return t},h.isKeynavEnabled=function(){return w},h.focusDropdownEntry=function(e){var n=f.dropdownMenu?angular.element(f.dropdownMenu).find("a"):t.find("ul").eq(0).find("a");switch(e){case 40:angular.isNumber(f.selectedOption)?f.selectedOption=f.selectedOption===n.length-1?f.selectedOption:f.selectedOption+1:f.selectedOption=0;break;case 38:angular.isNumber(f.selectedOption)?f.selectedOption=0===f.selectedOption?0:f.selectedOption-1:f.selectedOption=n.length-1}n[f.selectedOption].focus()},h.getDropdownElement=function(){return f.dropdownMenu},h.focusToggleElement=function(){f.toggleElement&&f.toggleElement[0].focus()},h.$watch("isOpen",function(n,i){if(y&&f.dropdownMenu){var r,l,d=s.positionElements(t,f.dropdownMenu,"bottom-left",!0);if(r={top:d.top+"px",display:n?"block":"none"},l=f.dropdownMenu.hasClass("dropdown-menu-right"),l?(r.left="auto",r.right=window.innerWidth-(d.left+t.prop("offsetWidth"))+"px"):(r.left=d.left+"px",r.right="auto"),!$){var w=s.offset(y);r.top=d.top-w.top+"px",l?r.right=window.innerWidth-(d.left-w.left+t.prop("offsetWidth"))+"px":r.left=d.left-w.left+"px"}f.dropdownMenu.css(r)}var x=y?y:t,S=x.hasClass(y?m:g);if(S===!n&&a[n?"addClass":"removeClass"](x,y?m:g).then(function(){angular.isDefined(n)&&n!==i&&b(e,{open:!!n})}),n)f.dropdownMenuTemplateUrl&&c(f.dropdownMenuTemplateUrl).then(function(e){p=h.$new(),u(e.trim())(p,function(e){var t=e;f.dropdownMenu.replaceWith(t),f.dropdownMenu=t})}),h.focusToggleElement(),o.open(h,t);else{if(f.dropdownMenuTemplateUrl){p&&p.$destroy();var C=angular.element('<ul class="dropdown-menu"></ul>');f.dropdownMenu.replaceWith(C),f.dropdownMenu=C}o.close(h,t),f.selectedOption=null}angular.isFunction(v)&&v(e,n)})}]).directive("uibDropdown",function(){return{controller:"UibDropdownController",link:function(e,t,n,i){i.init()}}}).directive("uibDropdownMenu",function(){return{restrict:"A",require:"?^uibDropdown",link:function(e,t,n,i){if(i&&!angular.isDefined(n.dropdownNested)){t.addClass("dropdown-menu");var r=n.templateUrl;r&&(i.dropdownMenuTemplateUrl=r),i.dropdownMenu||(i.dropdownMenu=t)}}}}).directive("uibDropdownToggle",function(){return{require:"?^uibDropdown",link:function(e,t,n,i){if(i){t.addClass("dropdown-toggle"),i.toggleElement=t;var r=function(r){r.preventDefault(),t.hasClass("disabled")||n.disabled||e.$apply(function(){i.toggle()})};t.bind("click",r),t.attr({"aria-haspopup":!0,"aria-expanded":!1}),e.$watch(i.isOpen,function(e){t.attr("aria-expanded",!!e)}),e.$on("$destroy",function(){t.unbind("click",r)})}}}}),angular.module("ui.bootstrap.stackedMap",[]).factory("$$stackedMap",function(){return{createNew:function(){var e=[];return{add:function(t,n){e.push({key:t,value:n})},get:function(t){for(var n=0;n<e.length;n++)if(t===e[n].key)return e[n]},keys:function(){for(var t=[],n=0;n<e.length;n++)t.push(e[n].key);return t},top:function(){return e[e.length-1]},remove:function(t){for(var n=-1,i=0;i<e.length;i++)if(t===e[i].key){n=i;break}return e.splice(n,1)[0]},removeTop:function(){return e.splice(e.length-1,1)[0]},length:function(){return e.length}}}}}),angular.module("ui.bootstrap.modal",["ui.bootstrap.stackedMap","ui.bootstrap.position"]).factory("$$multiMap",function(){return{createNew:function(){var e={};return{entries:function(){return Object.keys(e).map(function(t){return{key:t,value:e[t]}})},get:function(t){return e[t]},hasKey:function(t){return!!e[t]},keys:function(){return Object.keys(e)},put:function(t,n){e[t]||(e[t]=[]),e[t].push(n)},remove:function(t,n){var i=e[t];if(i){var r=i.indexOf(n);-1!==r&&i.splice(r,1),i.length||delete e[t]}}}}}}).provider("$uibResolve",function(){var e=this;this.resolver=null,this.setResolver=function(e){this.resolver=e},this.$get=["$injector","$q",function(t,n){var i=e.resolver?t.get(e.resolver):null;return{resolve:function(e,r,o,a){if(i)return i.resolve(e,r,o,a);var s=[];return angular.forEach(e,function(e){angular.isFunction(e)||angular.isArray(e)?s.push(n.resolve(t.invoke(e))):angular.isString(e)?s.push(n.resolve(t.get(e))):s.push(n.resolve(e))}),n.all(s).then(function(t){var n={},i=0;return angular.forEach(e,function(e,r){n[r]=t[i++]}),n})}}}]}).directive("uibModalBackdrop",["$animate","$injector","$uibModalStack",function(e,t,n){function i(t,i,r){r.modalInClass&&(e.addClass(i,r.modalInClass),t.$on(n.NOW_CLOSING_EVENT,function(n,o){var a=o();t.modalOptions.animation?e.removeClass(i,r.modalInClass).then(a):a()}))}return{replace:!0,templateUrl:"uib/template/modal/backdrop.html",compile:function(e,t){return e.addClass(t.backdropClass),i}}}]).directive("uibModalWindow",["$uibModalStack","$q","$animateCss","$document",function(e,t,n,i){return{scope:{index:"@"},replace:!0,transclude:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/modal/window.html"},link:function(r,o,a){o.addClass(a.windowClass||""),o.addClass(a.windowTopClass||""),r.size=a.size,r.close=function(t){var n=e.getTop();n&&n.value.backdrop&&"static"!==n.value.backdrop&&t.target===t.currentTarget&&(t.preventDefault(),t.stopPropagation(),e.dismiss(n.key,"backdrop click"))},o.on("click",r.close),r.$isRendered=!0;var s=t.defer();a.$observe("modalRender",function(e){"true"===e&&s.resolve()}),s.promise.then(function(){var s=null;a.modalInClass&&(s=n(o,{addClass:a.modalInClass}).start(),r.$on(e.NOW_CLOSING_EVENT,function(e,t){var i=t();n(o,{removeClass:a.modalInClass}).start().then(i)})),t.when(s).then(function(){var t=e.getTop();if(t&&e.modalRendered(t.key),!i[0].activeElement||!o[0].contains(i[0].activeElement)){var n=o[0].querySelector("[autofocus]");n?n.focus():o[0].focus()}})})}}}]).directive("uibModalAnimationClass",function(){return{compile:function(e,t){t.modalAnimation&&e.addClass(t.uibModalAnimationClass)}}}).directive("uibModalTransclude",function(){return{link:function(e,t,n,i,r){r(e.$parent,function(e){t.empty(),t.append(e)})}}}).factory("$uibModalStack",["$animate","$animateCss","$document","$compile","$rootScope","$q","$$multiMap","$$stackedMap","$uibPosition",function(e,t,n,i,r,o,a,s,l){function u(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)}function c(){for(var e=-1,t=w.keys(),n=0;n<t.length;n++)w.get(t[n]).value.backdrop&&(e=n);return e>-1&&C>e&&(e=C),e}function p(e,t){var n=w.get(e).value,i=n.appendTo;w.remove(e),k=w.top(),k&&(C=parseInt(k.value.modalDomEl.attr("index"),10)),h(n.modalDomEl,n.modalScope,function(){var t=n.openedClass||y;x.remove(t,e);var r=x.hasKey(t);i.toggleClass(t,r),!r&&$&&$.heightOverflow&&$.scrollbarWidth&&($.originalRight?i.css({paddingRight:$.originalRight+"px"}):i.css({paddingRight:""}),$=null),d(!0)},n.closedDeferred),f(),t&&t.focus?t.focus():i.focus&&i.focus()}function d(e){var t;w.length()>0&&(t=w.top().value,t.modalDomEl.toggleClass(t.windowTopClass||"",e))}function f(){if(v&&-1===c()){var e=b;h(v,b,function(){e=null}),v=void 0,b=void 0}}function h(t,n,i,r){function a(){a.done||(a.done=!0,e.leave(t).then(function(){t.remove(),r&&r.resolve()}),n.$destroy(),i&&i())}var s,l=null,u=function(){return s||(s=o.defer(),l=s.promise),function(){s.resolve()}};return n.$broadcast(S.NOW_CLOSING_EVENT,u),o.when(l).then(a)}function m(e){if(e.isDefaultPrevented())return e;var t=w.top();if(t)switch(e.which){case 27:t.value.keyboard&&(e.preventDefault(),r.$apply(function(){S.dismiss(t.key,"escape key press")}));break;case 9:var n=S.loadFocusElementList(t),i=!1;e.shiftKey?(S.isFocusInFirstItem(e,n)||S.isModalFocused(e,t))&&(i=S.focusLastFocusableElement(n)):S.isFocusInLastItem(e,n)&&(i=S.focusFirstFocusableElement(n)),i&&(e.preventDefault(),e.stopPropagation())}}function g(e,t,n){return!e.value.modalScope.$broadcast("modal.closing",t,n).defaultPrevented}var v,b,$,y="modal-open",w=s.createNew(),x=a.createNew(),S={NOW_CLOSING_EVENT:"modal.stack.now-closing"},C=0,k=null,E="a[href], area[href], input:not([disabled]), button:not([disabled]),select:not([disabled]), textarea:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable=true]";return r.$watch(c,function(e){b&&(b.index=e)}),n.on("keydown",m),r.$on("$destroy",function(){n.off("keydown",m)}),S.open=function(t,o){var a=n[0].activeElement,s=o.openedClass||y;d(!1),k=w.top(),w.add(t,{deferred:o.deferred,renderDeferred:o.renderDeferred,closedDeferred:o.closedDeferred,modalScope:o.scope,backdrop:o.backdrop,keyboard:o.keyboard,openedClass:o.openedClass,windowTopClass:o.windowTopClass,animation:o.animation,appendTo:o.appendTo}),x.put(s,t);var u=o.appendTo,p=c();if(!u.length)throw new Error("appendTo element not found. Make sure that the element passed is in DOM.");p>=0&&!v&&(b=r.$new(!0),b.modalOptions=o,b.index=p,v=angular.element('<div uib-modal-backdrop="modal-backdrop"></div>'),v.attr("backdrop-class",o.backdropClass),o.animation&&v.attr("modal-animation","true"),i(v)(b),e.enter(v,u),$=l.scrollbarPadding(u),$.heightOverflow&&$.scrollbarWidth&&u.css({paddingRight:$.right+"px"})),C=k?parseInt(k.value.modalDomEl.attr("index"),10)+1:0;var f=angular.element('<div uib-modal-window="modal-window"></div>');f.attr({"template-url":o.windowTemplateUrl,"window-class":o.windowClass,"window-top-class":o.windowTopClass,size:o.size,index:C,animate:"animate"}).html(o.content),o.animation&&f.attr("modal-animation","true"),u.addClass(s),e.enter(i(f)(o.scope),u),w.top().value.modalDomEl=f,w.top().value.modalOpener=a},S.close=function(e,t){var n=w.get(e);return n&&g(n,t,!0)?(n.value.modalScope.$$uibDestructionScheduled=!0,n.value.deferred.resolve(t),p(e,n.value.modalOpener),!0):!n},S.dismiss=function(e,t){var n=w.get(e);return n&&g(n,t,!1)?(n.value.modalScope.$$uibDestructionScheduled=!0,n.value.deferred.reject(t),p(e,n.value.modalOpener),!0):!n},S.dismissAll=function(e){for(var t=this.getTop();t&&this.dismiss(t.key,e);)t=this.getTop()},S.getTop=function(){return w.top()},S.modalRendered=function(e){var t=w.get(e);t&&t.value.renderDeferred.resolve()},S.focusFirstFocusableElement=function(e){return e.length>0?(e[0].focus(),!0):!1},S.focusLastFocusableElement=function(e){return e.length>0?(e[e.length-1].focus(),!0):!1},S.isModalFocused=function(e,t){if(e&&t){var n=t.value.modalDomEl;if(n&&n.length)return(e.target||e.srcElement)===n[0]}return!1},S.isFocusInFirstItem=function(e,t){return t.length>0?(e.target||e.srcElement)===t[0]:!1},S.isFocusInLastItem=function(e,t){return t.length>0?(e.target||e.srcElement)===t[t.length-1]:!1},S.loadFocusElementList=function(e){if(e){var t=e.value.modalDomEl;if(t&&t.length){var n=t[0].querySelectorAll(E);return n?Array.prototype.filter.call(n,function(e){return u(e)}):n}}},S}]).provider("$uibModal",function(){var e={options:{animation:!0,backdrop:!0,keyboard:!0},$get:["$rootScope","$q","$document","$templateRequest","$controller","$uibResolve","$uibModalStack",function(t,n,i,r,o,a,s){function l(e){return e.template?n.when(e.template):r(angular.isFunction(e.templateUrl)?e.templateUrl():e.templateUrl)}var u={},c=null;return u.getPromiseChain=function(){return c},u.open=function(r){function u(){return v}var p=n.defer(),d=n.defer(),f=n.defer(),h=n.defer(),m={result:p.promise,opened:d.promise,closed:f.promise,rendered:h.promise,close:function(e){return s.close(m,e)},dismiss:function(e){return s.dismiss(m,e)}};if(r=angular.extend({},e.options,r),r.resolve=r.resolve||{},r.appendTo=r.appendTo||i.find("body").eq(0),!r.template&&!r.templateUrl)throw new Error("One of template or templateUrl options is required.");var g,v=n.all([l(r),a.resolve(r.resolve,{},null,null)]);return g=c=n.all([c]).then(u,u).then(function(e){var n=r.scope||t,i=n.$new();i.$close=m.close,i.$dismiss=m.dismiss,i.$on("$destroy",function(){i.$$uibDestructionScheduled||i.$dismiss("$uibUnscheduledDestruction")});var a,l,u={};r.controller&&(u.$scope=i,u.$uibModalInstance=m,angular.forEach(e[1],function(e,t){u[t]=e}),l=o(r.controller,u,!0),r.controllerAs?(a=l.instance,r.bindToController&&(a.$close=i.$close,a.$dismiss=i.$dismiss,angular.extend(a,n)),a=l(),i[r.controllerAs]=a):a=l(),angular.isFunction(a.$onInit)&&a.$onInit()),s.open(m,{scope:i,deferred:p,renderDeferred:h,closedDeferred:f,content:e[0],animation:r.animation,backdrop:r.backdrop,keyboard:r.keyboard,backdropClass:r.backdropClass,windowTopClass:r.windowTopClass,windowClass:r.windowClass,windowTemplateUrl:r.windowTemplateUrl,size:r.size,openedClass:r.openedClass,appendTo:r.appendTo}),d.resolve(!0)},function(e){d.reject(e),p.reject(e)})["finally"](function(){c===g&&(c=null)}),m},u}]};return e}),angular.module("ui.bootstrap.paging",[]).factory("uibPaging",["$parse",function(e){return{create:function(t,n,i){t.setNumPages=i.numPages?e(i.numPages).assign:angular.noop,t.ngModelCtrl={$setViewValue:angular.noop},t._watchers=[],t.init=function(e,r){t.ngModelCtrl=e,t.config=r,e.$render=function(){t.render()},i.itemsPerPage?t._watchers.push(n.$parent.$watch(i.itemsPerPage,function(e){t.itemsPerPage=parseInt(e,10),n.totalPages=t.calculateTotalPages(),t.updatePage()})):t.itemsPerPage=r.itemsPerPage,n.$watch("totalItems",function(e,i){(angular.isDefined(e)||e!==i)&&(n.totalPages=t.calculateTotalPages(),t.updatePage())})},t.calculateTotalPages=function(){var e=t.itemsPerPage<1?1:Math.ceil(n.totalItems/t.itemsPerPage);return Math.max(e||0,1)},t.render=function(){n.page=parseInt(t.ngModelCtrl.$viewValue,10)||1},n.selectPage=function(e,i){i&&i.preventDefault();var r=!n.ngDisabled||!i;r&&n.page!==e&&e>0&&e<=n.totalPages&&(i&&i.target&&i.target.blur(),t.ngModelCtrl.$setViewValue(e),t.ngModelCtrl.$render())},n.getText=function(e){return n[e+"Text"]||t.config[e+"Text"]},n.noPrevious=function(){return 1===n.page},n.noNext=function(){return n.page===n.totalPages},t.updatePage=function(){t.setNumPages(n.$parent,n.totalPages),n.page>n.totalPages?n.selectPage(n.totalPages):t.ngModelCtrl.$render()},n.$on("$destroy",function(){for(;t._watchers.length;)t._watchers.shift()()})}}}]),angular.module("ui.bootstrap.pager",["ui.bootstrap.paging"]).controller("UibPagerController",["$scope","$attrs","uibPaging","uibPagerConfig",function(e,t,n,i){e.align=angular.isDefined(t.align)?e.$parent.$eval(t.align):i.align,n.create(this,e,t)}]).constant("uibPagerConfig",{itemsPerPage:10,previousText:"« Previous",nextText:"Next »",align:!0}).directive("uibPager",["uibPagerConfig",function(e){return{scope:{totalItems:"=",previousText:"@",nextText:"@",ngDisabled:"="},require:["uibPager","?ngModel"],controller:"UibPagerController",controllerAs:"pager",templateUrl:function(e,t){return t.templateUrl||"uib/template/pager/pager.html"},replace:!0,link:function(t,n,i,r){var o=r[0],a=r[1];a&&o.init(a,e)}}}]),angular.module("ui.bootstrap.pagination",["ui.bootstrap.paging"]).controller("UibPaginationController",["$scope","$attrs","$parse","uibPaging","uibPaginationConfig",function(e,t,n,i,r){
function o(e,t,n){return{number:e,text:t,active:n}}function a(e,t){var n=[],i=1,r=t,a=angular.isDefined(l)&&t>l;a&&(u?(i=Math.max(e-Math.floor(l/2),1),r=i+l-1,r>t&&(r=t,i=r-l+1)):(i=(Math.ceil(e/l)-1)*l+1,r=Math.min(i+l-1,t)));for(var s=i;r>=s;s++){var f=o(s,d(s),s===e);n.push(f)}if(a&&l>0&&(!u||c||p)){if(i>1){if(!p||i>3){var h=o(i-1,"...",!1);n.unshift(h)}if(p){if(3===i){var m=o(2,"2",!1);n.unshift(m)}var g=o(1,"1",!1);n.unshift(g)}}if(t>r){if(!p||t-2>r){var v=o(r+1,"...",!1);n.push(v)}if(p){if(r===t-2){var b=o(t-1,t-1,!1);n.push(b)}var $=o(t,t,!1);n.push($)}}}return n}var s=this,l=angular.isDefined(t.maxSize)?e.$parent.$eval(t.maxSize):r.maxSize,u=angular.isDefined(t.rotate)?e.$parent.$eval(t.rotate):r.rotate,c=angular.isDefined(t.forceEllipses)?e.$parent.$eval(t.forceEllipses):r.forceEllipses,p=angular.isDefined(t.boundaryLinkNumbers)?e.$parent.$eval(t.boundaryLinkNumbers):r.boundaryLinkNumbers,d=angular.isDefined(t.pageLabel)?function(n){return e.$parent.$eval(t.pageLabel,{$page:n})}:angular.identity;e.boundaryLinks=angular.isDefined(t.boundaryLinks)?e.$parent.$eval(t.boundaryLinks):r.boundaryLinks,e.directionLinks=angular.isDefined(t.directionLinks)?e.$parent.$eval(t.directionLinks):r.directionLinks,i.create(this,e,t),t.maxSize&&s._watchers.push(e.$parent.$watch(n(t.maxSize),function(e){l=parseInt(e,10),s.render()}));var f=this.render;this.render=function(){f(),e.page>0&&e.page<=e.totalPages&&(e.pages=a(e.page,e.totalPages))}}]).constant("uibPaginationConfig",{itemsPerPage:10,boundaryLinks:!1,boundaryLinkNumbers:!1,directionLinks:!0,firstText:"First",previousText:"Previous",nextText:"Next",lastText:"Last",rotate:!0,forceEllipses:!1}).directive("uibPagination",["$parse","uibPaginationConfig",function(e,t){return{scope:{totalItems:"=",firstText:"@",previousText:"@",nextText:"@",lastText:"@",ngDisabled:"="},require:["uibPagination","?ngModel"],controller:"UibPaginationController",controllerAs:"pagination",templateUrl:function(e,t){return t.templateUrl||"uib/template/pagination/pagination.html"},replace:!0,link:function(e,n,i,r){var o=r[0],a=r[1];a&&o.init(a,t)}}}]),angular.module("ui.bootstrap.tooltip",["ui.bootstrap.position","ui.bootstrap.stackedMap"]).provider("$uibTooltip",function(){function e(e){var t=/[A-Z]/g,n="-";return e.replace(t,function(e,t){return(t?n:"")+e.toLowerCase()})}var t={placement:"top",placementClassPrefix:"",animation:!0,popupDelay:0,popupCloseDelay:0,useContentExp:!1},n={mouseenter:"mouseleave",click:"click",outsideClick:"outsideClick",focus:"blur",none:""},i={};this.options=function(e){angular.extend(i,e)},this.setTriggers=function(e){angular.extend(n,e)},this.$get=["$window","$compile","$timeout","$document","$uibPosition","$interpolate","$rootScope","$parse","$$stackedMap",function(r,o,a,s,l,u,c,p,d){function f(e){if(27===e.which){var t=h.top();t&&(t.value.close(),h.removeTop(),t=null)}}var h=d.createNew();return s.on("keypress",f),c.$on("$destroy",function(){s.off("keypress",f)}),function(r,c,d,f){function m(e){var t=(e||f.trigger||d).split(" "),i=t.map(function(e){return n[e]||e});return{show:t,hide:i}}f=angular.extend({},t,i,f);var g=e(r),v=u.startSymbol(),b=u.endSymbol(),$="<div "+g+'-popup uib-title="'+v+"title"+b+'" '+(f.useContentExp?'content-exp="contentExp()" ':'content="'+v+"content"+b+'" ')+'placement="'+v+"placement"+b+'" popup-class="'+v+"popupClass"+b+'" animation="animation" is-open="isOpen" origin-scope="origScope" class="uib-position-measure"></div>';return{compile:function(e,t){var n=o($);return function(e,t,i,o){function u(){j.isOpen?g():d()}function d(){F&&!e.$eval(i[c+"Enable"])||(y(),S(),j.popupDelay?O||(O=a(v,j.popupDelay,!1)):v())}function g(){b(),j.popupCloseDelay?R||(R=a($,j.popupCloseDelay,!1)):$()}function v(){return b(),y(),j.content?(w(),void j.$evalAsync(function(){j.isOpen=!0,C(!0),V()})):angular.noop}function b(){O&&(a.cancel(O),O=null),I&&(a.cancel(I),I=null)}function $(){j&&j.$evalAsync(function(){j&&(j.isOpen=!1,C(!1),j.animation?M||(M=a(x,150,!1)):x())})}function y(){R&&(a.cancel(R),R=null),M&&(a.cancel(M),M=null)}function w(){D||(A=j.$new(),D=n(A,function(e){L?s.find("body").append(e):t.after(e)}),k())}function x(){b(),y(),E(),D&&(D.remove(),D=null),A&&(A.$destroy(),A=null)}function S(){j.title=i[c+"Title"],H?j.content=H(e):j.content=i[r],j.popupClass=i[c+"Class"],j.placement=angular.isDefined(i[c+"Placement"])?i[c+"Placement"]:f.placement;var t=l.parsePlacement(j.placement);N=t[1]?t[0]+"-"+t[1]:t[0];var n=parseInt(i[c+"PopupDelay"],10),o=parseInt(i[c+"PopupCloseDelay"],10);j.popupDelay=isNaN(n)?f.popupDelay:n,j.popupCloseDelay=isNaN(o)?f.popupCloseDelay:o}function C(t){q&&angular.isFunction(q.assign)&&q.assign(e,t)}function k(){z.length=0,H?(z.push(e.$watch(H,function(e){j.content=e,!e&&j.isOpen&&$()})),z.push(A.$watch(function(){_||(_=!0,A.$$postDigest(function(){_=!1,j&&j.isOpen&&V()}))}))):z.push(i.$observe(r,function(e){j.content=e,!e&&j.isOpen?$():V()})),z.push(i.$observe(c+"Title",function(e){j.title=e,j.isOpen&&V()})),z.push(i.$observe(c+"Placement",function(e){j.placement=e?e:f.placement,j.isOpen&&V()}))}function E(){z.length&&(angular.forEach(z,function(e){e()}),z.length=0)}function T(e){j&&j.isOpen&&D&&(t[0].contains(e.target)||D[0].contains(e.target)||g())}function P(){var e=i[c+"Trigger"];B(),U=m(e),"none"!==U.show&&U.show.forEach(function(e,n){"outsideClick"===e?(t.on("click",u),s.on("click",T)):e===U.hide[n]?t.on(e,u):e&&(t.on(e,d),t.on(U.hide[n],g)),t.on("keypress",function(e){27===e.which&&g()})})}var D,A,M,O,R,I,N,L=angular.isDefined(f.appendToBody)?f.appendToBody:!1,U=m(void 0),F=angular.isDefined(i[c+"Enable"]),j=e.$new(!0),_=!1,q=angular.isDefined(i[c+"IsOpen"])?p(i[c+"IsOpen"]):!1,H=f.useContentExp?p(i[r]):!1,z=[],V=function(){D&&D.html()&&(I||(I=a(function(){var e=l.positionElements(t,D,j.placement,L);D.css({top:e.top+"px",left:e.left+"px"}),D.hasClass(e.placement.split("-")[0])||(D.removeClass(N.split("-")[0]),D.addClass(e.placement.split("-")[0])),D.hasClass(f.placementClassPrefix+e.placement)||(D.removeClass(f.placementClassPrefix+N),D.addClass(f.placementClassPrefix+e.placement)),D.hasClass("uib-position-measure")?(l.positionArrow(D,e.placement),D.removeClass("uib-position-measure")):N!==e.placement&&l.positionArrow(D,e.placement),N=e.placement,I=null},0,!1)))};j.origScope=e,j.isOpen=!1,h.add(j,{close:$}),j.contentExp=function(){return j.content},i.$observe("disabled",function(e){e&&b(),e&&j.isOpen&&$()}),q&&e.$watch(q,function(e){j&&!e===j.isOpen&&u()});var B=function(){U.show.forEach(function(e){"outsideClick"===e?t.off("click",u):(t.off(e,d),t.off(e,u))}),U.hide.forEach(function(e){"outsideClick"===e?s.off("click",T):t.off(e,g)})};P();var W=e.$eval(i[c+"Animation"]);j.animation=angular.isDefined(W)?!!W:f.animation;var G,X=c+"AppendToBody";G=X in i&&void 0===i[X]?!0:e.$eval(i[X]),L=angular.isDefined(G)?G:L,e.$on("$destroy",function(){B(),x(),h.remove(j),j=null})}}}}}]}).directive("uibTooltipTemplateTransclude",["$animate","$sce","$compile","$templateRequest",function(e,t,n,i){return{link:function(r,o,a){var s,l,u,c=r.$eval(a.tooltipTemplateTranscludeScope),p=0,d=function(){l&&(l.remove(),l=null),s&&(s.$destroy(),s=null),u&&(e.leave(u).then(function(){l=null}),l=u,u=null)};r.$watch(t.parseAsResourceUrl(a.uibTooltipTemplateTransclude),function(t){var a=++p;t?(i(t,!0).then(function(i){if(a===p){var r=c.$new(),l=i,f=n(l)(r,function(t){d(),e.enter(t,o)});s=r,u=f,s.$emit("$includeContentLoaded",t)}},function(){a===p&&(d(),r.$emit("$includeContentError",t))}),r.$emit("$includeContentRequested",t)):d()}),r.$on("$destroy",d)}}}]).directive("uibTooltipClasses",["$uibPosition",function(e){return{restrict:"A",link:function(t,n,i){if(t.placement){var r=e.parsePlacement(t.placement);n.addClass(r[0])}t.popupClass&&n.addClass(t.popupClass),t.animation()&&n.addClass(i.tooltipAnimationClass)}}}]).directive("uibTooltipPopup",function(){return{replace:!0,scope:{content:"@",placement:"@",popupClass:"@",animation:"&",isOpen:"&"},templateUrl:"uib/template/tooltip/tooltip-popup.html"}}).directive("uibTooltip",["$uibTooltip",function(e){return e("uibTooltip","tooltip","mouseenter")}]).directive("uibTooltipTemplatePopup",function(){return{replace:!0,scope:{contentExp:"&",placement:"@",popupClass:"@",animation:"&",isOpen:"&",originScope:"&"},templateUrl:"uib/template/tooltip/tooltip-template-popup.html"}}).directive("uibTooltipTemplate",["$uibTooltip",function(e){return e("uibTooltipTemplate","tooltip","mouseenter",{useContentExp:!0})}]).directive("uibTooltipHtmlPopup",function(){return{replace:!0,scope:{contentExp:"&",placement:"@",popupClass:"@",animation:"&",isOpen:"&"},templateUrl:"uib/template/tooltip/tooltip-html-popup.html"}}).directive("uibTooltipHtml",["$uibTooltip",function(e){return e("uibTooltipHtml","tooltip","mouseenter",{useContentExp:!0})}]),angular.module("ui.bootstrap.popover",["ui.bootstrap.tooltip"]).directive("uibPopoverTemplatePopup",function(){return{replace:!0,scope:{uibTitle:"@",contentExp:"&",placement:"@",popupClass:"@",animation:"&",isOpen:"&",originScope:"&"},templateUrl:"uib/template/popover/popover-template.html"}}).directive("uibPopoverTemplate",["$uibTooltip",function(e){return e("uibPopoverTemplate","popover","click",{useContentExp:!0})}]).directive("uibPopoverHtmlPopup",function(){return{replace:!0,scope:{contentExp:"&",uibTitle:"@",placement:"@",popupClass:"@",animation:"&",isOpen:"&"},templateUrl:"uib/template/popover/popover-html.html"}}).directive("uibPopoverHtml",["$uibTooltip",function(e){return e("uibPopoverHtml","popover","click",{useContentExp:!0})}]).directive("uibPopoverPopup",function(){return{replace:!0,scope:{uibTitle:"@",content:"@",placement:"@",popupClass:"@",animation:"&",isOpen:"&"},templateUrl:"uib/template/popover/popover.html"}}).directive("uibPopover",["$uibTooltip",function(e){return e("uibPopover","popover","click")}]),angular.module("ui.bootstrap.progressbar",[]).constant("uibProgressConfig",{animate:!0,max:100}).controller("UibProgressController",["$scope","$attrs","uibProgressConfig",function(e,t,n){function i(){return angular.isDefined(e.maxParam)?e.maxParam:n.max}var r=this,o=angular.isDefined(t.animate)?e.$parent.$eval(t.animate):n.animate;this.bars=[],e.max=i(),this.addBar=function(e,t,n){o||t.css({transition:"none"}),this.bars.push(e),e.max=i(),e.title=n&&angular.isDefined(n.title)?n.title:"progressbar",e.$watch("value",function(t){e.recalculatePercentage()}),e.recalculatePercentage=function(){var t=r.bars.reduce(function(e,t){return t.percent=+(100*t.value/t.max).toFixed(2),e+t.percent},0);t>100&&(e.percent-=t-100)},e.$on("$destroy",function(){t=null,r.removeBar(e)})},this.removeBar=function(e){this.bars.splice(this.bars.indexOf(e),1),this.bars.forEach(function(e){e.recalculatePercentage()})},e.$watch("maxParam",function(e){r.bars.forEach(function(e){e.max=i(),e.recalculatePercentage()})})}]).directive("uibProgress",function(){return{replace:!0,transclude:!0,controller:"UibProgressController",require:"uibProgress",scope:{maxParam:"=?max"},templateUrl:"uib/template/progressbar/progress.html"}}).directive("uibBar",function(){return{replace:!0,transclude:!0,require:"^uibProgress",scope:{value:"=",type:"@"},templateUrl:"uib/template/progressbar/bar.html",link:function(e,t,n,i){i.addBar(e,t,n)}}}).directive("uibProgressbar",function(){return{replace:!0,transclude:!0,controller:"UibProgressController",scope:{value:"=",maxParam:"=?max",type:"@"},templateUrl:"uib/template/progressbar/progressbar.html",link:function(e,t,n,i){i.addBar(e,angular.element(t.children()[0]),{title:n.title})}}}),angular.module("ui.bootstrap.rating",[]).constant("uibRatingConfig",{max:5,stateOn:null,stateOff:null,enableReset:!0,titles:["one","two","three","four","five"]}).controller("UibRatingController",["$scope","$attrs","uibRatingConfig",function(e,t,n){var i={$setViewValue:angular.noop},r=this;this.init=function(r){i=r,i.$render=this.render,i.$formatters.push(function(e){return angular.isNumber(e)&&e<<0!==e&&(e=Math.round(e)),e}),this.stateOn=angular.isDefined(t.stateOn)?e.$parent.$eval(t.stateOn):n.stateOn,this.stateOff=angular.isDefined(t.stateOff)?e.$parent.$eval(t.stateOff):n.stateOff,this.enableReset=angular.isDefined(t.enableReset)?e.$parent.$eval(t.enableReset):n.enableReset;var o=angular.isDefined(t.titles)?e.$parent.$eval(t.titles):n.titles;this.titles=angular.isArray(o)&&o.length>0?o:n.titles;var a=angular.isDefined(t.ratingStates)?e.$parent.$eval(t.ratingStates):new Array(angular.isDefined(t.max)?e.$parent.$eval(t.max):n.max);e.range=this.buildTemplateObjects(a)},this.buildTemplateObjects=function(e){for(var t=0,n=e.length;n>t;t++)e[t]=angular.extend({index:t},{stateOn:this.stateOn,stateOff:this.stateOff,title:this.getTitle(t)},e[t]);return e},this.getTitle=function(e){return e>=this.titles.length?e+1:this.titles[e]},e.rate=function(t){if(!e.readonly&&t>=0&&t<=e.range.length){var n=r.enableReset&&i.$viewValue===t?0:t;i.$setViewValue(n),i.$render()}},e.enter=function(t){e.readonly||(e.value=t),e.onHover({value:t})},e.reset=function(){e.value=i.$viewValue,e.onLeave()},e.onKeydown=function(t){/(37|38|39|40)/.test(t.which)&&(t.preventDefault(),t.stopPropagation(),e.rate(e.value+(38===t.which||39===t.which?1:-1)))},this.render=function(){e.value=i.$viewValue,e.title=r.getTitle(e.value-1)}}]).directive("uibRating",function(){return{require:["uibRating","ngModel"],scope:{readonly:"=?readOnly",onHover:"&",onLeave:"&"},controller:"UibRatingController",templateUrl:"uib/template/rating/rating.html",replace:!0,link:function(e,t,n,i){var r=i[0],o=i[1];r.init(o)}}}),angular.module("ui.bootstrap.tabs",[]).controller("UibTabsetController",["$scope",function(e){function t(e){for(var t=0;t<i.tabs.length;t++)if(i.tabs[t].index===e)return t}var n,i=this;i.tabs=[],i.select=function(e,o){if(!r){var a=t(n),s=i.tabs[a];if(s){if(s.tab.onDeselect({$event:o}),o&&o.isDefaultPrevented())return;s.tab.active=!1}var l=i.tabs[e];l?(l.tab.onSelect({$event:o}),l.tab.active=!0,i.active=l.index,n=l.index):!l&&angular.isNumber(n)&&(i.active=null,n=null)}},i.addTab=function(e){if(i.tabs.push({tab:e,index:e.index}),i.tabs.sort(function(e,t){return e.index>t.index?1:e.index<t.index?-1:0}),e.index===i.active||!angular.isNumber(i.active)&&1===i.tabs.length){var n=t(e.index);i.select(n)}},i.removeTab=function(e){for(var t,n=0;n<i.tabs.length;n++)if(i.tabs[n].tab===e){t=n;break}if(i.tabs[t].index===i.active){var r=t===i.tabs.length-1?t-1:t+1%i.tabs.length;i.select(r)}i.tabs.splice(t,1)},e.$watch("tabset.active",function(e){angular.isNumber(e)&&e!==n&&i.select(t(e))});var r;e.$on("$destroy",function(){r=!0})}]).directive("uibTabset",function(){return{transclude:!0,replace:!0,scope:{},bindToController:{active:"=?",type:"@"},controller:"UibTabsetController",controllerAs:"tabset",templateUrl:function(e,t){return t.templateUrl||"uib/template/tabs/tabset.html"},link:function(e,t,n){e.vertical=angular.isDefined(n.vertical)?e.$parent.$eval(n.vertical):!1,e.justified=angular.isDefined(n.justified)?e.$parent.$eval(n.justified):!1,angular.isUndefined(n.active)&&(e.active=0)}}}).directive("uibTab",["$parse",function(e){return{require:"^uibTabset",replace:!0,templateUrl:function(e,t){return t.templateUrl||"uib/template/tabs/tab.html"},transclude:!0,scope:{heading:"@",index:"=?",classes:"@?",onSelect:"&select",onDeselect:"&deselect"},controller:function(){},controllerAs:"tab",link:function(t,n,i,r,o){t.disabled=!1,i.disable&&t.$parent.$watch(e(i.disable),function(e){t.disabled=!!e}),angular.isUndefined(i.index)&&(r.tabs&&r.tabs.length?t.index=Math.max.apply(null,r.tabs.map(function(e){return e.index}))+1:t.index=0),angular.isUndefined(i.classes)&&(t.classes=""),t.select=function(e){if(!t.disabled){for(var n,i=0;i<r.tabs.length;i++)if(r.tabs[i].tab===t){n=i;break}r.select(n,e)}},r.addTab(t),t.$on("$destroy",function(){r.removeTab(t)}),t.$transcludeFn=o}}}]).directive("uibTabHeadingTransclude",function(){return{restrict:"A",require:"^uibTab",link:function(e,t){e.$watch("headingElement",function(e){e&&(t.html(""),t.append(e))})}}}).directive("uibTabContentTransclude",function(){function e(e){return e.tagName&&(e.hasAttribute("uib-tab-heading")||e.hasAttribute("data-uib-tab-heading")||e.hasAttribute("x-uib-tab-heading")||"uib-tab-heading"===e.tagName.toLowerCase()||"data-uib-tab-heading"===e.tagName.toLowerCase()||"x-uib-tab-heading"===e.tagName.toLowerCase()||"uib:tab-heading"===e.tagName.toLowerCase())}return{restrict:"A",require:"^uibTabset",link:function(t,n,i){var r=t.$eval(i.uibTabContentTransclude).tab;r.$transcludeFn(r.$parent,function(t){angular.forEach(t,function(t){e(t)?r.headingElement=t:n.append(t)})})}}}),angular.module("ui.bootstrap.timepicker",[]).constant("uibTimepickerConfig",{hourStep:1,minuteStep:1,secondStep:1,showMeridian:!0,showSeconds:!1,meridians:null,readonlyInput:!1,mousewheel:!0,arrowkeys:!0,showSpinners:!0,templateUrl:"uib/template/timepicker/timepicker.html"}).controller("UibTimepickerController",["$scope","$element","$attrs","$parse","$log","$locale","uibTimepickerConfig",function(e,t,n,i,r,o,a){function s(){var t=+e.hours,n=e.showMeridian?t>0&&13>t:t>=0&&24>t;return n&&""!==e.hours?(e.showMeridian&&(12===t&&(t=0),e.meridian===w[1]&&(t+=12)),t):void 0}function l(){var t=+e.minutes,n=t>=0&&60>t;return n&&""!==e.minutes?t:void 0}function u(){var t=+e.seconds;return t>=0&&60>t?t:void 0}function c(e,t){return null===e?"":angular.isDefined(e)&&e.toString().length<2&&!t?"0"+e:e.toString()}function p(e){d(),y.$setViewValue(new Date(b)),f(e)}function d(){y.$setValidity("time",!0),e.invalidHours=!1,e.invalidMinutes=!1,e.invalidSeconds=!1}function f(t){if(y.$modelValue){var n=b.getHours(),i=b.getMinutes(),r=b.getSeconds();e.showMeridian&&(n=0===n||12===n?12:n%12),e.hours="h"===t?n:c(n,!x),"m"!==t&&(e.minutes=c(i)),e.meridian=b.getHours()<12?w[0]:w[1],"s"!==t&&(e.seconds=c(r)),e.meridian=b.getHours()<12?w[0]:w[1]}else e.hours=null,e.minutes=null,e.seconds=null,e.meridian=w[0]}function h(e){b=g(b,e),p()}function m(e,t){return g(e,60*t)}function g(e,t){var n=new Date(e.getTime()+1e3*t),i=new Date(e);return i.setHours(n.getHours(),n.getMinutes(),n.getSeconds()),i}function v(){return(null===e.hours||""===e.hours)&&(null===e.minutes||""===e.minutes)&&(!e.showSeconds||e.showSeconds&&(null===e.seconds||""===e.seconds))}var b=new Date,$=[],y={$setViewValue:angular.noop},w=angular.isDefined(n.meridians)?e.$parent.$eval(n.meridians):a.meridians||o.DATETIME_FORMATS.AMPMS,x=angular.isDefined(n.padHours)?e.$parent.$eval(n.padHours):!0;e.tabindex=angular.isDefined(n.tabindex)?n.tabindex:0,t.removeAttr("tabindex"),this.init=function(t,i){y=t,y.$render=this.render,y.$formatters.unshift(function(e){return e?new Date(e):null});var r=i.eq(0),o=i.eq(1),s=i.eq(2),l=angular.isDefined(n.mousewheel)?e.$parent.$eval(n.mousewheel):a.mousewheel;l&&this.setupMousewheelEvents(r,o,s);var u=angular.isDefined(n.arrowkeys)?e.$parent.$eval(n.arrowkeys):a.arrowkeys;u&&this.setupArrowkeyEvents(r,o,s),e.readonlyInput=angular.isDefined(n.readonlyInput)?e.$parent.$eval(n.readonlyInput):a.readonlyInput,this.setupInputEvents(r,o,s)};var S=a.hourStep;n.hourStep&&$.push(e.$parent.$watch(i(n.hourStep),function(e){S=+e}));var C=a.minuteStep;n.minuteStep&&$.push(e.$parent.$watch(i(n.minuteStep),function(e){C=+e}));var k;$.push(e.$parent.$watch(i(n.min),function(e){var t=new Date(e);k=isNaN(t)?void 0:t}));var E;$.push(e.$parent.$watch(i(n.max),function(e){var t=new Date(e);E=isNaN(t)?void 0:t}));var T=!1;n.ngDisabled&&$.push(e.$parent.$watch(i(n.ngDisabled),function(e){T=e})),e.noIncrementHours=function(){var e=m(b,60*S);return T||e>E||b>e&&k>e},e.noDecrementHours=function(){var e=m(b,60*-S);return T||k>e||e>b&&e>E},e.noIncrementMinutes=function(){var e=m(b,C);return T||e>E||b>e&&k>e},e.noDecrementMinutes=function(){var e=m(b,-C);return T||k>e||e>b&&e>E},e.noIncrementSeconds=function(){var e=g(b,P);return T||e>E||b>e&&k>e},e.noDecrementSeconds=function(){var e=g(b,-P);return T||k>e||e>b&&e>E},e.noToggleMeridian=function(){return b.getHours()<12?T||m(b,720)>E:T||m(b,-720)<k};var P=a.secondStep;n.secondStep&&$.push(e.$parent.$watch(i(n.secondStep),function(e){P=+e})),e.showSeconds=a.showSeconds,n.showSeconds&&$.push(e.$parent.$watch(i(n.showSeconds),function(t){e.showSeconds=!!t})),e.showMeridian=a.showMeridian,n.showMeridian&&$.push(e.$parent.$watch(i(n.showMeridian),function(t){if(e.showMeridian=!!t,y.$error.time){var n=s(),i=l();angular.isDefined(n)&&angular.isDefined(i)&&(b.setHours(n),p())}else f()})),this.setupMousewheelEvents=function(t,n,i){var r=function(e){e.originalEvent&&(e=e.originalEvent);var t=e.wheelDelta?e.wheelDelta:-e.deltaY;return e.detail||t>0};t.bind("mousewheel wheel",function(t){T||e.$apply(r(t)?e.incrementHours():e.decrementHours()),t.preventDefault()}),n.bind("mousewheel wheel",function(t){T||e.$apply(r(t)?e.incrementMinutes():e.decrementMinutes()),t.preventDefault()}),i.bind("mousewheel wheel",function(t){T||e.$apply(r(t)?e.incrementSeconds():e.decrementSeconds()),t.preventDefault()})},this.setupArrowkeyEvents=function(t,n,i){t.bind("keydown",function(t){T||(38===t.which?(t.preventDefault(),e.incrementHours(),e.$apply()):40===t.which&&(t.preventDefault(),e.decrementHours(),e.$apply()))}),n.bind("keydown",function(t){T||(38===t.which?(t.preventDefault(),e.incrementMinutes(),e.$apply()):40===t.which&&(t.preventDefault(),e.decrementMinutes(),e.$apply()))}),i.bind("keydown",function(t){T||(38===t.which?(t.preventDefault(),e.incrementSeconds(),e.$apply()):40===t.which&&(t.preventDefault(),e.decrementSeconds(),e.$apply()))})},this.setupInputEvents=function(t,n,i){if(e.readonlyInput)return e.updateHours=angular.noop,e.updateMinutes=angular.noop,void(e.updateSeconds=angular.noop);var r=function(t,n,i){y.$setViewValue(null),y.$setValidity("time",!1),angular.isDefined(t)&&(e.invalidHours=t),angular.isDefined(n)&&(e.invalidMinutes=n),angular.isDefined(i)&&(e.invalidSeconds=i)};e.updateHours=function(){var e=s(),t=l();y.$setDirty(),angular.isDefined(e)&&angular.isDefined(t)?(b.setHours(e),b.setMinutes(t),k>b||b>E?r(!0):p("h")):r(!0)},t.bind("blur",function(t){y.$setTouched(),v()?d():null===e.hours||""===e.hours?r(!0):!e.invalidHours&&e.hours<10&&e.$apply(function(){e.hours=c(e.hours,!x)})}),e.updateMinutes=function(){var e=l(),t=s();y.$setDirty(),angular.isDefined(e)&&angular.isDefined(t)?(b.setHours(t),b.setMinutes(e),k>b||b>E?r(void 0,!0):p("m")):r(void 0,!0)},n.bind("blur",function(t){y.$setTouched(),v()?d():null===e.minutes?r(void 0,!0):!e.invalidMinutes&&e.minutes<10&&e.$apply(function(){e.minutes=c(e.minutes)})}),e.updateSeconds=function(){var e=u();y.$setDirty(),angular.isDefined(e)?(b.setSeconds(e),p("s")):r(void 0,void 0,!0)},i.bind("blur",function(t){v()?d():!e.invalidSeconds&&e.seconds<10&&e.$apply(function(){e.seconds=c(e.seconds)})})},this.render=function(){var t=y.$viewValue;isNaN(t)?(y.$setValidity("time",!1),r.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')):(t&&(b=t),k>b||b>E?(y.$setValidity("time",!1),e.invalidHours=!0,e.invalidMinutes=!0):d(),f())},e.showSpinners=angular.isDefined(n.showSpinners)?e.$parent.$eval(n.showSpinners):a.showSpinners,e.incrementHours=function(){e.noIncrementHours()||h(60*S*60)},e.decrementHours=function(){e.noDecrementHours()||h(60*-S*60)},e.incrementMinutes=function(){e.noIncrementMinutes()||h(60*C)},e.decrementMinutes=function(){e.noDecrementMinutes()||h(60*-C)},e.incrementSeconds=function(){e.noIncrementSeconds()||h(P)},e.decrementSeconds=function(){e.noDecrementSeconds()||h(-P)},e.toggleMeridian=function(){var t=l(),n=s();e.noToggleMeridian()||(angular.isDefined(t)&&angular.isDefined(n)?h(720*(b.getHours()<12?60:-60)):e.meridian=e.meridian===w[0]?w[1]:w[0])},e.blur=function(){y.$setTouched()},e.$on("$destroy",function(){for(;$.length;)$.shift()()})}]).directive("uibTimepicker",["uibTimepickerConfig",function(e){return{require:["uibTimepicker","?^ngModel"],controller:"UibTimepickerController",controllerAs:"timepicker",replace:!0,scope:{},templateUrl:function(t,n){return n.templateUrl||e.templateUrl},link:function(e,t,n,i){var r=i[0],o=i[1];o&&r.init(o,t.find("input"))}}}]),angular.module("ui.bootstrap.typeahead",["ui.bootstrap.debounce","ui.bootstrap.position"]).factory("uibTypeaheadParser",["$parse",function(e){var t=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;return{parse:function(n){var i=n.match(t);if(!i)throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "'+n+'".');return{itemName:i[3],source:e(i[4]),viewMapper:e(i[2]||i[1]),modelMapper:e(i[1])}}}}]).controller("UibTypeaheadController",["$scope","$element","$attrs","$compile","$parse","$q","$timeout","$document","$window","$rootScope","$$debounce","$uibPosition","uibTypeaheadParser",function(e,t,n,i,r,o,a,s,l,u,c,p,d){function f(){j.moveInProgress||(j.moveInProgress=!0,j.$digest()),K()}function h(){j.position=D?p.offset(t):p.position(t),j.position.top+=t.prop("offsetHeight")}var m,g,v=[9,13,27,38,40],b=200,$=e.$eval(n.typeaheadMinLength);$||0===$||($=1),e.$watch(n.typeaheadMinLength,function(e){$=e||0===e?e:1});var y=e.$eval(n.typeaheadWaitMs)||0,w=e.$eval(n.typeaheadEditable)!==!1;e.$watch(n.typeaheadEditable,function(e){w=e!==!1});var x,S,C=r(n.typeaheadLoading).assign||angular.noop,k=r(n.typeaheadOnSelect),E=angular.isDefined(n.typeaheadSelectOnBlur)?e.$eval(n.typeaheadSelectOnBlur):!1,T=r(n.typeaheadNoResults).assign||angular.noop,P=n.typeaheadInputFormatter?r(n.typeaheadInputFormatter):void 0,D=n.typeaheadAppendToBody?e.$eval(n.typeaheadAppendToBody):!1,A=n.typeaheadAppendTo?e.$eval(n.typeaheadAppendTo):null,M=e.$eval(n.typeaheadFocusFirst)!==!1,O=n.typeaheadSelectOnExact?e.$eval(n.typeaheadSelectOnExact):!1,R=r(n.typeaheadIsOpen).assign||angular.noop,I=e.$eval(n.typeaheadShowHint)||!1,N=r(n.ngModel),L=r(n.ngModel+"($$$p)"),U=function(t,n){return angular.isFunction(N(e))&&g&&g.$options&&g.$options.getterSetter?L(t,{$$$p:n}):N.assign(t,n)},F=d.parse(n.uibTypeahead),j=e.$new(),_=e.$on("$destroy",function(){j.$destroy()});j.$on("$destroy",_);var q="typeahead-"+j.$id+"-"+Math.floor(1e4*Math.random());t.attr({"aria-autocomplete":"list","aria-expanded":!1,"aria-owns":q});var H,z;I&&(H=angular.element("<div></div>"),H.css("position","relative"),t.after(H),z=t.clone(),z.attr("placeholder",""),z.attr("tabindex","-1"),z.val(""),z.css({position:"absolute",top:"0px",left:"0px","border-color":"transparent","box-shadow":"none",opacity:1,background:"none 0% 0% / auto repeat scroll padding-box border-box rgb(255, 255, 255)",color:"#999"}),t.css({position:"relative","vertical-align":"top","background-color":"transparent"}),H.append(z),z.after(t));var V=angular.element("<div uib-typeahead-popup></div>");V.attr({id:q,matches:"matches",active:"activeIdx",select:"select(activeIdx, evt)","move-in-progress":"moveInProgress",query:"query",position:"position","assign-is-open":"assignIsOpen(isOpen)",debounce:"debounceUpdate"}),angular.isDefined(n.typeaheadTemplateUrl)&&V.attr("template-url",n.typeaheadTemplateUrl),angular.isDefined(n.typeaheadPopupTemplateUrl)&&V.attr("popup-template-url",n.typeaheadPopupTemplateUrl);var B=function(){I&&z.val("")},W=function(){j.matches=[],j.activeIdx=-1,t.attr("aria-expanded",!1),B()},G=function(e){return q+"-option-"+e};j.$watch("activeIdx",function(e){0>e?t.removeAttr("aria-activedescendant"):t.attr("aria-activedescendant",G(e))});var X=function(e,t){return j.matches.length>t&&e?e.toUpperCase()===j.matches[t].label.toUpperCase():!1},Y=function(n,i){var r={$viewValue:n};C(e,!0),T(e,!1),o.when(F.source(e,r)).then(function(o){var a=n===m.$viewValue;if(a&&x)if(o&&o.length>0){j.activeIdx=M?0:-1,T(e,!1),j.matches.length=0;for(var s=0;s<o.length;s++)r[F.itemName]=o[s],j.matches.push({id:G(s),label:F.viewMapper(j,r),model:o[s]});if(j.query=n,h(),t.attr("aria-expanded",!0),O&&1===j.matches.length&&X(n,0)&&(angular.isNumber(j.debounceUpdate)||angular.isObject(j.debounceUpdate)?c(function(){j.select(0,i)},angular.isNumber(j.debounceUpdate)?j.debounceUpdate:j.debounceUpdate["default"]):j.select(0,i)),I){var l=j.matches[0].label;angular.isString(n)&&n.length>0&&l.slice(0,n.length).toUpperCase()===n.toUpperCase()?z.val(n+l.slice(n.length)):z.val("")}}else W(),T(e,!0);a&&C(e,!1)},function(){W(),C(e,!1),T(e,!0)})};D&&(angular.element(l).on("resize",f),s.find("body").on("scroll",f));var K=c(function(){j.matches.length&&h(),j.moveInProgress=!1},b);j.moveInProgress=!1,j.query=void 0;var J,Q=function(e){J=a(function(){Y(e)},y)},Z=function(){J&&a.cancel(J)};W(),j.assignIsOpen=function(t){R(e,t)},j.select=function(i,r){var o,s,l={};S=!0,l[F.itemName]=s=j.matches[i].model,o=F.modelMapper(e,l),U(e,o),m.$setValidity("editable",!0),m.$setValidity("parse",!0),k(e,{$item:s,$model:o,$label:F.viewMapper(e,l),$event:r}),W(),j.$eval(n.typeaheadFocusOnSelect)!==!1&&a(function(){t[0].focus()},0,!1)},t.on("keydown",function(t){if(0!==j.matches.length&&-1!==v.indexOf(t.which)){if(-1===j.activeIdx&&(9===t.which||13===t.which)||9===t.which&&t.shiftKey)return W(),void j.$digest();t.preventDefault();var n;switch(t.which){case 9:case 13:j.$apply(function(){angular.isNumber(j.debounceUpdate)||angular.isObject(j.debounceUpdate)?c(function(){j.select(j.activeIdx,t)},angular.isNumber(j.debounceUpdate)?j.debounceUpdate:j.debounceUpdate["default"]):j.select(j.activeIdx,t)});break;case 27:t.stopPropagation(),W(),e.$digest();break;case 38:j.activeIdx=(j.activeIdx>0?j.activeIdx:j.matches.length)-1,j.$digest(),n=V.find("li")[j.activeIdx],n.parentNode.scrollTop=n.offsetTop;break;case 40:j.activeIdx=(j.activeIdx+1)%j.matches.length,j.$digest(),n=V.find("li")[j.activeIdx],n.parentNode.scrollTop=n.offsetTop}}}),t.bind("focus",function(e){x=!0,0!==$||m.$viewValue||a(function(){Y(m.$viewValue,e)},0)}),t.bind("blur",function(e){E&&j.matches.length&&-1!==j.activeIdx&&!S&&(S=!0,j.$apply(function(){angular.isObject(j.debounceUpdate)&&angular.isNumber(j.debounceUpdate.blur)?c(function(){j.select(j.activeIdx,e)},j.debounceUpdate.blur):j.select(j.activeIdx,e)})),!w&&m.$error.editable&&(m.$setViewValue(),m.$setValidity("editable",!0),m.$setValidity("parse",!0),t.val("")),x=!1,S=!1});var ee=function(n){t[0]!==n.target&&3!==n.which&&0!==j.matches.length&&(W(),u.$$phase||e.$digest())};s.on("click",ee),e.$on("$destroy",function(){s.off("click",ee),(D||A)&&te.remove(),D&&(angular.element(l).off("resize",f),s.find("body").off("scroll",f)),V.remove(),I&&H.remove()});var te=i(V)(j);D?s.find("body").append(te):A?angular.element(A).eq(0).append(te):t.after(te),this.init=function(t,n){m=t,g=n,j.debounceUpdate=m.$options&&r(m.$options.debounce)(e),m.$parsers.unshift(function(t){return x=!0,0===$||t&&t.length>=$?y>0?(Z(),Q(t)):Y(t):(C(e,!1),Z(),W()),w?t:t?void m.$setValidity("editable",!1):(m.$setValidity("editable",!0),null)}),m.$formatters.push(function(t){var n,i,r={};return w||m.$setValidity("editable",!0),P?(r.$model=t,P(e,r)):(r[F.itemName]=t,n=F.viewMapper(e,r),r[F.itemName]=void 0,i=F.viewMapper(e,r),n!==i?n:t)})}}]).directive("uibTypeahead",function(){return{controller:"UibTypeaheadController",require:["ngModel","^?ngModelOptions","uibTypeahead"],link:function(e,t,n,i){i[2].init(i[0],i[1])}}}).directive("uibTypeaheadPopup",["$$debounce",function(e){return{scope:{matches:"=",query:"=",active:"=",position:"&",moveInProgress:"=",select:"&",assignIsOpen:"&",debounce:"&"},replace:!0,templateUrl:function(e,t){return t.popupTemplateUrl||"uib/template/typeahead/typeahead-popup.html"},link:function(t,n,i){t.templateUrl=i.templateUrl,t.isOpen=function(){var e=t.matches.length>0;return t.assignIsOpen({isOpen:e}),e},t.isActive=function(e){return t.active===e},t.selectActive=function(e){t.active=e},t.selectMatch=function(n,i){var r=t.debounce();angular.isNumber(r)||angular.isObject(r)?e(function(){t.select({activeIdx:n,evt:i})},angular.isNumber(r)?r:r["default"]):t.select({activeIdx:n,evt:i})}}}}]).directive("uibTypeaheadMatch",["$templateRequest","$compile","$parse",function(e,t,n){
return{scope:{index:"=",match:"=",query:"="},link:function(i,r,o){var a=n(o.templateUrl)(i.$parent)||"uib/template/typeahead/typeahead-match.html";e(a).then(function(e){var n=angular.element(e.trim());r.replaceWith(n),t(n)(i)})}}}]).filter("uibTypeaheadHighlight",["$sce","$injector","$log",function(e,t,n){function i(e){return e.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}function r(e){return/<.*>/g.test(e)}var o;return o=t.has("$sanitize"),function(t,a){return!o&&r(t)&&n.warn("Unsafe use of typeahead please use ngSanitize"),t=a?(""+t).replace(new RegExp(i(a),"gi"),"<strong>$&</strong>"):t,o||(t=e.trustAsHtml(t)),t}}]),angular.module("uib/template/accordion/accordion-group.html",[]).run(["$templateCache",function(e){e.put("uib/template/accordion/accordion-group.html",'<div class="panel" ng-class="panelClass || \'panel-default\'">\n  <div role="tab" id="{{::headingId}}" aria-selected="{{isOpen}}" class="panel-heading" ng-keypress="toggleOpen($event)">\n    <h4 class="panel-title">\n      <a role="button" data-toggle="collapse" href aria-expanded="{{isOpen}}" aria-controls="{{::panelId}}" tabindex="0" class="accordion-toggle" ng-click="toggleOpen()" uib-accordion-transclude="heading"><span uib-accordion-header ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div id="{{::panelId}}" aria-labelledby="{{::headingId}}" aria-hidden="{{!isOpen}}" role="tabpanel" class="panel-collapse collapse" uib-collapse="!isOpen">\n    <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n')}]),angular.module("uib/template/accordion/accordion.html",[]).run(["$templateCache",function(e){e.put("uib/template/accordion/accordion.html",'<div role="tablist" class="panel-group" ng-transclude></div>')}]),angular.module("uib/template/alert/alert.html",[]).run(["$templateCache",function(e){e.put("uib/template/alert/alert.html",'<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissible\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close({$event: $event})">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n')}]),angular.module("uib/template/carousel/carousel.html",[]).run(["$templateCache",function(e){e.put("uib/template/carousel/carousel.html",'<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n  <div class="carousel-inner" ng-transclude></div>\n  <a role="button" href class="left carousel-control" ng-click="prev()" ng-class="{ disabled: isPrevDisabled() }" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-left"></span>\n    <span class="sr-only">previous</span>\n  </a>\n  <a role="button" href class="right carousel-control" ng-click="next()" ng-class="{ disabled: isNextDisabled() }" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-right"></span>\n    <span class="sr-only">next</span>\n  </a>\n  <ol class="carousel-indicators" ng-show="slides.length > 1">\n    <li ng-repeat="slide in slides | orderBy:indexOfSlide track by $index" ng-class="{ active: isActive(slide) }" ng-click="select(slide)">\n      <span class="sr-only">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if="isActive(slide)">, currently active</span></span>\n    </li>\n  </ol>\n</div>\n')}]),angular.module("uib/template/carousel/slide.html",[]).run(["$templateCache",function(e){e.put("uib/template/carousel/slide.html",'<div ng-class="{\n    \'active\': active\n  }" class="item text-center" ng-transclude></div>\n')}]),angular.module("uib/template/datepicker/datepicker.html",[]).run(["$templateCache",function(e){e.put("uib/template/datepicker/datepicker.html",'<div class="uib-datepicker" ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <uib-daypicker ng-switch-when="day" tabindex="0"></uib-daypicker>\n  <uib-monthpicker ng-switch-when="month" tabindex="0"></uib-monthpicker>\n  <uib-yearpicker ng-switch-when="year" tabindex="0"></uib-yearpicker>\n</div>\n')}]),angular.module("uib/template/datepicker/day.html",[]).run(["$templateCache",function(e){e.put("uib/template/datepicker/day.html",'<table class="uib-daypicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{::5 + showWeeks}}"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-if="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in ::labels track by $index" class="text-center"><small aria-label="{{::label.full}}">{{::label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-weeks" ng-repeat="row in rows track by $index">\n      <td ng-if="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row" class="uib-day text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default btn-sm"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("uib/template/datepicker/month.html",[]).run(["$templateCache",function(e){e.put("uib/template/datepicker/month.html",'<table class="uib-monthpicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-months" ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row" class="uib-month text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("uib/template/datepicker/year.html",[]).run(["$templateCache",function(e){e.put("uib/template/datepicker/year.html",'<table class="uib-yearpicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{::columns - 2}}"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-years" ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row" class="uib-year text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("uib/template/datepickerPopup/popup.html",[]).run(["$templateCache",function(e){e.put("uib/template/datepickerPopup/popup.html",'<div>\n  <ul class="uib-datepicker-popup dropdown-menu uib-position-measure" dropdown-nested ng-if="isOpen" ng-keydown="keydown($event)" ng-click="$event.stopPropagation()">\n    <li ng-transclude></li>\n    <li ng-if="showButtonBar" class="uib-button-bar">\n      <span class="btn-group pull-left">\n        <button type="button" class="btn btn-sm btn-info uib-datepicker-current" ng-click="select(\'today\', $event)" ng-disabled="isDisabled(\'today\')">{{ getText(\'current\') }}</button>\n        <button type="button" class="btn btn-sm btn-danger uib-clear" ng-click="select(null, $event)">{{ getText(\'clear\') }}</button>\n      </span>\n      <button type="button" class="btn btn-sm btn-success pull-right uib-close" ng-click="close($event)">{{ getText(\'close\') }}</button>\n    </li>\n  </ul>\n</div>\n')}]),angular.module("uib/template/modal/backdrop.html",[]).run(["$templateCache",function(e){e.put("uib/template/modal/backdrop.html",'<div class="modal-backdrop"\n     uib-modal-animation-class="fade"\n     modal-in-class="in"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n')}]),angular.module("uib/template/modal/window.html",[]).run(["$templateCache",function(e){e.put("uib/template/modal/window.html",'<div modal-render="{{$isRendered}}" tabindex="-1" role="dialog" class="modal"\n    uib-modal-animation-class="fade"\n    modal-in-class="in"\n    ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}">\n    <div class="modal-dialog {{size ? \'modal-\' + size : \'\'}}"><div class="modal-content" uib-modal-transclude></div></div>\n</div>\n')}]),angular.module("uib/template/pager/pager.html",[]).run(["$templateCache",function(e){e.put("uib/template/pager/pager.html",'<ul class="pager">\n  <li ng-class="{disabled: noPrevious()||ngDisabled, previous: align}"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext()||ngDisabled, next: align}"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n</ul>\n')}]),angular.module("uib/template/pagination/pagination.html",[]).run(["$templateCache",function(e){e.put("uib/template/pagination/pagination.html",'<ul class="pagination">\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-first"><a href ng-click="selectPage(1, $event)">{{::getText(\'first\')}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-prev"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active,disabled: ngDisabled&&!page.active}" class="pagination-page"><a href ng-click="selectPage(page.number, $event)">{{page.text}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-next"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-last"><a href ng-click="selectPage(totalPages, $event)">{{::getText(\'last\')}}</a></li>\n</ul>\n')}]),angular.module("uib/template/tooltip/tooltip-html-popup.html",[]).run(["$templateCache",function(e){e.put("uib/template/tooltip/tooltip-html-popup.html",'<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind-html="contentExp()"></div>\n</div>\n')}]),angular.module("uib/template/tooltip/tooltip-popup.html",[]).run(["$templateCache",function(e){e.put("uib/template/tooltip/tooltip-popup.html",'<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')}]),angular.module("uib/template/tooltip/tooltip-template-popup.html",[]).run(["$templateCache",function(e){e.put("uib/template/tooltip/tooltip-template-popup.html",'<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner"\n    uib-tooltip-template-transclude="contentExp()"\n    tooltip-template-transclude-scope="originScope()"></div>\n</div>\n')}]),angular.module("uib/template/popover/popover-html.html",[]).run(["$templateCache",function(e){e.put("uib/template/popover/popover-html.html",'<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content" ng-bind-html="contentExp()"></div>\n  </div>\n</div>\n')}]),angular.module("uib/template/popover/popover-template.html",[]).run(["$templateCache",function(e){e.put("uib/template/popover/popover-template.html",'<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content"\n        uib-tooltip-template-transclude="contentExp()"\n        tooltip-template-transclude-scope="originScope()"></div>\n  </div>\n</div>\n')}]),angular.module("uib/template/popover/popover.html",[]).run(["$templateCache",function(e){e.put("uib/template/popover/popover.html",'<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')}]),angular.module("uib/template/progressbar/bar.html",[]).run(["$templateCache",function(e){e.put("uib/template/progressbar/bar.html",'<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" ng-transclude></div>\n')}]),angular.module("uib/template/progressbar/progress.html",[]).run(["$templateCache",function(e){e.put("uib/template/progressbar/progress.html",'<div class="progress" ng-transclude aria-labelledby="{{::title}}"></div>')}]),angular.module("uib/template/progressbar/progressbar.html",[]).run(["$templateCache",function(e){e.put("uib/template/progressbar/progressbar.html",'<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" ng-transclude></div>\n</div>\n')}]),angular.module("uib/template/rating/rating.html",[]).run(["$templateCache",function(e){e.put("uib/template/rating/rating.html",'<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}" aria-valuetext="{{title}}">\n    <span ng-repeat-start="r in range track by $index" class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    <i ng-repeat-end ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')" ng-attr-title="{{r.title}}"></i>\n</span>\n')}]),angular.module("uib/template/tabs/tab.html",[]).run(["$templateCache",function(e){e.put("uib/template/tabs/tab.html",'<li ng-class="[{active: active, disabled: disabled}, classes]" class="uib-tab nav-item">\n  <a href ng-click="select($event)" class="nav-link" uib-tab-heading-transclude>{{heading}}</a>\n</li>\n')}]),angular.module("uib/template/tabs/tabset.html",[]).run(["$templateCache",function(e){e.put("uib/template/tabs/tabset.html",'<div>\n  <ul class="nav nav-{{tabset.type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane"\n         ng-repeat="tab in tabset.tabs"\n         ng-class="{active: tabset.active === tab.index}"\n         uib-tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n')}]),angular.module("uib/template/timepicker/timepicker.html",[]).run(["$templateCache",function(e){e.put("uib/template/timepicker/timepicker.html",'<table class="uib-timepicker">\n  <tbody>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td class="uib-increment hours"><a ng-click="incrementHours()" ng-class="{disabled: noIncrementHours()}" class="btn btn-link" ng-disabled="noIncrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td>&nbsp;</td>\n      <td class="uib-increment minutes"><a ng-click="incrementMinutes()" ng-class="{disabled: noIncrementMinutes()}" class="btn btn-link" ng-disabled="noIncrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td ng-show="showSeconds">&nbsp;</td>\n      <td ng-show="showSeconds" class="uib-increment seconds"><a ng-click="incrementSeconds()" ng-class="{disabled: noIncrementSeconds()}" class="btn btn-link" ng-disabled="noIncrementSeconds()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n    <tr>\n      <td class="form-group uib-time hours" ng-class="{\'has-error\': invalidHours}">\n        <input type="text" placeholder="HH" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementHours()" ng-blur="blur()">\n      </td>\n      <td class="uib-separator">:</td>\n      <td class="form-group uib-time minutes" ng-class="{\'has-error\': invalidMinutes}">\n        <input type="text" placeholder="MM" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementMinutes()" ng-blur="blur()">\n      </td>\n      <td ng-show="showSeconds" class="uib-separator">:</td>\n      <td class="form-group uib-time seconds" ng-class="{\'has-error\': invalidSeconds}" ng-show="showSeconds">\n        <input type="text" placeholder="SS" ng-model="seconds" ng-change="updateSeconds()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementSeconds()" ng-blur="blur()">\n      </td>\n      <td ng-show="showMeridian" class="uib-time am-pm"><button type="button" ng-class="{disabled: noToggleMeridian()}" class="btn btn-default text-center" ng-click="toggleMeridian()" ng-disabled="noToggleMeridian()" tabindex="{{::tabindex}}">{{meridian}}</button></td>\n    </tr>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td class="uib-decrement hours"><a ng-click="decrementHours()" ng-class="{disabled: noDecrementHours()}" class="btn btn-link" ng-disabled="noDecrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td>&nbsp;</td>\n      <td class="uib-decrement minutes"><a ng-click="decrementMinutes()" ng-class="{disabled: noDecrementMinutes()}" class="btn btn-link" ng-disabled="noDecrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td ng-show="showSeconds">&nbsp;</td>\n      <td ng-show="showSeconds" class="uib-decrement seconds"><a ng-click="decrementSeconds()" ng-class="{disabled: noDecrementSeconds()}" class="btn btn-link" ng-disabled="noDecrementSeconds()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("uib/template/typeahead/typeahead-match.html",[]).run(["$templateCache",function(e){e.put("uib/template/typeahead/typeahead-match.html",'<a href\n   tabindex="-1"\n   ng-bind-html="match.label | uibTypeaheadHighlight:query"\n   ng-attr-title="{{match.label}}"></a>\n')}]),angular.module("uib/template/typeahead/typeahead-popup.html",[]).run(["$templateCache",function(e){e.put("uib/template/typeahead/typeahead-popup.html",'<ul class="dropdown-menu" ng-show="isOpen() && !moveInProgress" ng-style="{top: position().top+\'px\', left: position().left+\'px\'}" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index, $event)" role="option" id="{{::match.id}}">\n        <div uib-typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n')}]),angular.module("ui.bootstrap.carousel").run(function(){!angular.$$csp().noInlineStyle&&!angular.$$uibCarouselCss&&angular.element(document).find("head").prepend('<style type="text/css">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>'),angular.$$uibCarouselCss=!0}),angular.module("ui.bootstrap.datepicker").run(function(){!angular.$$csp().noInlineStyle&&!angular.$$uibDatepickerCss&&angular.element(document).find("head").prepend('<style type="text/css">.uib-datepicker .uib-title{width:100%;}.uib-day button,.uib-month button,.uib-year button{min-width:100%;}.uib-left,.uib-right{width:100%}</style>'),angular.$$uibDatepickerCss=!0}),angular.module("ui.bootstrap.position").run(function(){!angular.$$csp().noInlineStyle&&!angular.$$uibPositionCss&&angular.element(document).find("head").prepend('<style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute !important;top:-9999px !important;width:50px !important;height:50px !important;overflow:scroll !important;}.uib-position-body-scrollbar-measure{overflow:scroll !important;}</style>'),angular.$$uibPositionCss=!0}),angular.module("ui.bootstrap.datepickerPopup").run(function(){!angular.$$csp().noInlineStyle&&!angular.$$uibDatepickerpopupCss&&angular.element(document).find("head").prepend('<style type="text/css">.uib-datepicker-popup.dropdown-menu{display:block;float:none;margin:0;}.uib-button-bar{padding:10px 9px 2px;}</style>'),angular.$$uibDatepickerpopupCss=!0}),angular.module("ui.bootstrap.tooltip").run(function(){!angular.$$csp().noInlineStyle&&!angular.$$uibTooltipCss&&angular.element(document).find("head").prepend('<style type="text/css">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow,[uib-popover-html-popup].popover.top-left > .arrow,[uib-popover-html-popup].popover.top-right > .arrow,[uib-popover-html-popup].popover.bottom-left > .arrow,[uib-popover-html-popup].popover.bottom-right > .arrow,[uib-popover-html-popup].popover.left-top > .arrow,[uib-popover-html-popup].popover.left-bottom > .arrow,[uib-popover-html-popup].popover.right-top > .arrow,[uib-popover-html-popup].popover.right-bottom > .arrow,[uib-popover-template-popup].popover.top-left > .arrow,[uib-popover-template-popup].popover.top-right > .arrow,[uib-popover-template-popup].popover.bottom-left > .arrow,[uib-popover-template-popup].popover.bottom-right > .arrow,[uib-popover-template-popup].popover.left-top > .arrow,[uib-popover-template-popup].popover.left-bottom > .arrow,[uib-popover-template-popup].popover.right-top > .arrow,[uib-popover-template-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-html-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style>'),angular.$$uibTooltipCss=!0}),angular.module("ui.bootstrap.timepicker").run(function(){!angular.$$csp().noInlineStyle&&!angular.$$uibTimepickerCss&&angular.element(document).find("head").prepend('<style type="text/css">.uib-time input{width:50px;}</style>'),angular.$$uibTimepickerCss=!0}),angular.module("ui.bootstrap.typeahead").run(function(){!angular.$$csp().noInlineStyle&&!angular.$$uibTypeaheadCss&&angular.element(document).find("head").prepend('<style type="text/css">[uib-typeahead-popup].dropdown-menu{display:block;}</style>'),angular.$$uibTypeaheadCss=!0});var mod;mod=angular.module("infinite-scroll",[]),mod.directive("infiniteScroll",["$rootScope","$window","$timeout",function(e,t,n){return{link:function(i,r,o){var a,s,l,u;return t=angular.element(t),l=0,null!=o.infiniteScrollDistance&&i.$watch(o.infiniteScrollDistance,function(e){return l=parseInt(e,10)}),u=!0,a=!1,null!=o.infiniteScrollDisabled&&i.$watch(o.infiniteScrollDisabled,function(e){return u=!e,u&&a?(a=!1,s()):void 0}),s=function(){var n,s,c,p;return p=t.height()+t.scrollTop(),n=r.offset().top+r.height(),s=n-p,c=t.height()*l>=s,c&&u?e.$$phase?i.$eval(o.infiniteScroll):i.$apply(o.infiniteScroll):c?a=!0:void 0},t.on("scroll",s),i.$on("$destroy",function(){return t.off("scroll",s)}),n(function(){return o.infiniteScrollImmediateCheck?i.$eval(o.infiniteScrollImmediateCheck)?s():void 0:s()},0)}}}]),"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="ui.router"),function(e,t,n){"use strict";function i(e,t){return z(new(z(function(){},{prototype:e})),t)}function r(e){return H(arguments,function(t){t!==e&&H(t,function(t,n){e.hasOwnProperty(n)||(e[n]=t)})}),e}function o(e,t){var n=[];for(var i in e.path){if(e.path[i]!==t.path[i])break;n.push(e.path[i])}return n}function a(e){if(Object.keys)return Object.keys(e);var t=[];return H(e,function(e,n){t.push(n)}),t}function s(e,t){if(Array.prototype.indexOf)return e.indexOf(t,Number(arguments[2])||0);var n=e.length>>>0,i=Number(arguments[2])||0;for(i=0>i?Math.ceil(i):Math.floor(i),0>i&&(i+=n);n>i;i++)if(i in e&&e[i]===t)return i;return-1}function l(e,t,n,i){var r,l=o(n,i),u={},c=[];for(var p in l)if(l[p]&&l[p].params&&(r=a(l[p].params),r.length))for(var d in r)s(c,r[d])>=0||(c.push(r[d]),u[r[d]]=e[r[d]]);return z({},u,t)}function u(e,t,n){if(!n){n=[];for(var i in e)n.push(i)}for(var r=0;r<n.length;r++){var o=n[r];if(e[o]!=t[o])return!1}return!0}function c(e,t){var n={};return H(e,function(e){n[e]=t[e]}),n}function p(e){var t={},n=Array.prototype.concat.apply(Array.prototype,Array.prototype.slice.call(arguments,1));return H(n,function(n){n in e&&(t[n]=e[n])}),t}function d(e){var t={},n=Array.prototype.concat.apply(Array.prototype,Array.prototype.slice.call(arguments,1));for(var i in e)-1==s(n,i)&&(t[i]=e[i]);return t}function f(e,t){var n=q(e),i=n?[]:{};return H(e,function(e,r){t(e,r)&&(i[n?i.length:r]=e)}),i}function h(e,t){var n=q(e)?[]:{};return H(e,function(e,i){n[i]=t(e,i)}),n}function m(e,t){var i=1,o=2,l={},u=[],c=l,p=z(e.when(l),{$$promises:l,$$values:l});this.study=function(l){function f(e,n){if(b[n]!==o){if(v.push(n),b[n]===i)throw v.splice(0,s(v,n)),new Error("Cyclic dependency: "+v.join(" -> "));if(b[n]=i,j(e))g.push(n,[function(){return t.get(e)}],u);else{var r=t.annotate(e);H(r,function(e){e!==n&&l.hasOwnProperty(e)&&f(l[e],e)}),g.push(n,e,r)}v.pop(),b[n]=o}}function h(e){return _(e)&&e.then&&e.$$promises}if(!_(l))throw new Error("'invocables' must be an object");var m=a(l||{}),g=[],v=[],b={};return H(l,f),l=v=b=null,function(i,o,a){function s(){--y||(w||r($,o.$$values),v.$$values=$,v.$$promises=v.$$promises||!0,delete v.$$inheritedValues,f.resolve($))}function l(e){v.$$failure=e,f.reject(e)}function u(n,r,o){function u(e){p.reject(e),l(e)}function c(){if(!U(v.$$failure))try{p.resolve(t.invoke(r,a,$)),p.promise.then(function(e){$[n]=e,s()},u)}catch(e){u(e)}}var p=e.defer(),d=0;H(o,function(e){b.hasOwnProperty(e)&&!i.hasOwnProperty(e)&&(d++,b[e].then(function(t){$[e]=t,--d||c()},u))}),d||c(),b[n]=p.promise}if(h(i)&&a===n&&(a=o,o=i,i=null),i){if(!_(i))throw new Error("'locals' must be an object")}else i=c;if(o){if(!h(o))throw new Error("'parent' must be a promise returned by $resolve.resolve()")}else o=p;var f=e.defer(),v=f.promise,b=v.$$promises={},$=z({},i),y=1+g.length/3,w=!1;if(U(o.$$failure))return l(o.$$failure),v;o.$$inheritedValues&&r($,d(o.$$inheritedValues,m)),z(b,o.$$promises),o.$$values?(w=r($,d(o.$$values,m)),v.$$inheritedValues=d(o.$$values,m),s()):(o.$$inheritedValues&&(v.$$inheritedValues=d(o.$$inheritedValues,m)),o.then(s,l));for(var x=0,S=g.length;S>x;x+=3)i.hasOwnProperty(g[x])?s():u(g[x],g[x+1],g[x+2]);
return v}},this.resolve=function(e,t,n,i){return this.study(e)(t,n,i)}}function g(e,t,n){this.fromConfig=function(e,t,n){return U(e.template)?this.fromString(e.template,t):U(e.templateUrl)?this.fromUrl(e.templateUrl,t):U(e.templateProvider)?this.fromProvider(e.templateProvider,t,n):null},this.fromString=function(e,t){return F(e)?e(t):e},this.fromUrl=function(n,i){return F(n)&&(n=n(i)),null==n?null:e.get(n,{cache:t,headers:{Accept:"text/html"}}).then(function(e){return e.data})},this.fromProvider=function(e,t,i){return n.invoke(e,null,i||{params:t})}}function v(e,t,r){function o(t,n,i,r){if(g.push(t),h[t])return h[t];if(!/^\w+([-.]+\w+)*(?:\[\])?$/.test(t))throw new Error("Invalid parameter name '"+t+"' in pattern '"+e+"'");if(m[t])throw new Error("Duplicate parameter name '"+t+"' in pattern '"+e+"'");return m[t]=new W.Param(t,n,i,r),m[t]}function a(e,t,n,i){var r=["",""],o=e.replace(/[\\\[\]\^$*+?.()|{}]/g,"\\$&");if(!t)return o;switch(n){case!1:r=["(",")"+(i?"?":"")];break;case!0:o=o.replace(/\/$/,""),r=["(?:/(",")|/)?"];break;default:r=["("+n+"|",")?"]}return o+r[0]+t+r[1]}function s(r,o){var a,s,l,u,c;return a=r[2]||r[3],c=t.params[a],l=e.substring(d,r.index),s=o?r[4]:r[4]||("*"==r[1]?".*":null),s&&(u=W.type(s)||i(W.type("string"),{pattern:new RegExp(s,t.caseInsensitive?"i":n)})),{id:a,regexp:s,segment:l,type:u,cfg:c}}t=z({params:{}},_(t)?t:{});var l,u=/([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,c=/([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,p="^",d=0,f=this.segments=[],h=r?r.params:{},m=this.params=r?r.params.$$new():new W.ParamSet,g=[];this.source=e;for(var v,b,$;(l=u.exec(e))&&(v=s(l,!1),!(v.segment.indexOf("?")>=0));)b=o(v.id,v.type,v.cfg,"path"),p+=a(v.segment,b.type.pattern.source,b.squash,b.isOptional),f.push(v.segment),d=u.lastIndex;$=e.substring(d);var y=$.indexOf("?");if(y>=0){var w=this.sourceSearch=$.substring(y);if($=$.substring(0,y),this.sourcePath=e.substring(0,d+y),w.length>0)for(d=0;l=c.exec(w);)v=s(l,!0),b=o(v.id,v.type,v.cfg,"search"),d=u.lastIndex}else this.sourcePath=e,this.sourceSearch="";p+=a($)+(t.strict===!1?"/?":"")+"$",f.push($),this.regexp=new RegExp(p,t.caseInsensitive?"i":n),this.prefix=f[0],this.$$paramNames=g}function b(e){z(this,e)}function $(){function e(e){return null!=e?e.toString().replace(/~/g,"~~").replace(/\//g,"~2F"):e}function r(e){return null!=e?e.toString().replace(/~2F/g,"/").replace(/~~/g,"~"):e}function o(){return{strict:m,caseInsensitive:d}}function l(e){return F(e)||q(e)&&F(e[e.length-1])}function u(){for(;x.length;){var e=x.shift();if(e.pattern)throw new Error("You cannot override a type's .pattern at runtime.");t.extend(y[e.name],p.invoke(e.def))}}function c(e){z(this,e||{})}W=this;var p,d=!1,m=!0,g=!1,y={},w=!0,x=[],S={string:{encode:e,decode:r,is:function(e){return null==e||!U(e)||"string"==typeof e},pattern:/[^\/]*/},"int":{encode:e,decode:function(e){return parseInt(e,10)},is:function(e){return U(e)&&this.decode(e.toString())===e},pattern:/\d+/},bool:{encode:function(e){return e?1:0},decode:function(e){return 0!==parseInt(e,10)},is:function(e){return e===!0||e===!1},pattern:/0|1/},date:{encode:function(e){return this.is(e)?[e.getFullYear(),("0"+(e.getMonth()+1)).slice(-2),("0"+e.getDate()).slice(-2)].join("-"):n},decode:function(e){if(this.is(e))return e;var t=this.capture.exec(e);return t?new Date(t[1],t[2]-1,t[3]):n},is:function(e){return e instanceof Date&&!isNaN(e.valueOf())},equals:function(e,t){return this.is(e)&&this.is(t)&&e.toISOString()===t.toISOString()},pattern:/[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,capture:/([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/},json:{encode:t.toJson,decode:t.fromJson,is:t.isObject,equals:t.equals,pattern:/[^\/]*/},any:{encode:t.identity,decode:t.identity,equals:t.equals,pattern:/.*/}};$.$$getDefaultValue=function(e){if(!l(e.value))return e.value;if(!p)throw new Error("Injectable functions cannot be called at configuration time");return p.invoke(e.value)},this.caseInsensitive=function(e){return U(e)&&(d=e),d},this.strictMode=function(e){return U(e)&&(m=e),m},this.defaultSquashPolicy=function(e){if(!U(e))return g;if(e!==!0&&e!==!1&&!j(e))throw new Error("Invalid squash policy: "+e+". Valid policies: false, true, arbitrary-string");return g=e,e},this.compile=function(e,t){return new v(e,z(o(),t))},this.isMatcher=function(e){if(!_(e))return!1;var t=!0;return H(v.prototype,function(n,i){F(n)&&(t=t&&U(e[i])&&F(e[i]))}),t},this.type=function(e,t,n){if(!U(t))return y[e];if(y.hasOwnProperty(e))throw new Error("A type named '"+e+"' has already been defined.");return y[e]=new b(z({name:e},t)),n&&(x.push({name:e,def:n}),w||u()),this},H(S,function(e,t){y[t]=new b(z({name:t},e))}),y=i(y,{}),this.$get=["$injector",function(e){return p=e,w=!1,u(),H(S,function(e,t){y[t]||(y[t]=new b(e))}),this}],this.Param=function(e,i,r,o){function u(e){var t=_(e)?a(e):[],n=-1===s(t,"value")&&-1===s(t,"type")&&-1===s(t,"squash")&&-1===s(t,"array");return n&&(e={value:e}),e.$$fn=l(e.value)?e.value:function(){return e.value},e}function c(n,i,r){if(n.type&&i)throw new Error("Param '"+e+"' has two type configurations.");return i?i:n.type?t.isString(n.type)?y[n.type]:n.type instanceof b?n.type:new b(n.type):"config"===r?y.any:y.string}function d(){var t={array:"search"===o?"auto":!1},n=e.match(/\[\]$/)?{array:!0}:{};return z(t,n,r).array}function m(e,t){var n=e.squash;if(!t||n===!1)return!1;if(!U(n)||null==n)return g;if(n===!0||j(n))return n;throw new Error("Invalid squash policy: '"+n+"'. Valid policies: false, true, or arbitrary string")}function v(e,t,i,r){var o,a,l=[{from:"",to:i||t?n:""},{from:null,to:i||t?n:""}];return o=q(e.replace)?e.replace:[],j(r)&&o.push({from:r,to:n}),a=h(o,function(e){return e.from}),f(l,function(e){return-1===s(a,e.from)}).concat(o)}function $(){if(!p)throw new Error("Injectable functions cannot be called at configuration time");var e=p.invoke(r.$$fn);if(null!==e&&e!==n&&!S.type.is(e))throw new Error("Default value ("+e+") for parameter '"+S.id+"' is not an instance of Type ("+S.type.name+")");return e}function w(e){function t(e){return function(t){return t.from===e}}function n(e){var n=h(f(S.replace,t(e)),function(e){return e.to});return n.length?n[0]:e}return e=n(e),U(e)?S.type.$normalize(e):$()}function x(){return"{Param:"+e+" "+i+" squash: '"+E+"' optional: "+k+"}"}var S=this;r=u(r),i=c(r,i,o);var C=d();i=C?i.$asArray(C,"search"===o):i,"string"!==i.name||C||"path"!==o||r.value!==n||(r.value="");var k=r.value!==n,E=m(r,k),T=v(r,C,k,E);z(this,{id:e,type:i,location:o,array:C,squash:E,replace:T,isOptional:k,value:w,dynamic:n,config:r,toString:x})},c.prototype={$$new:function(){return i(this,z(new c,{$$parent:this}))},$$keys:function(){for(var e=[],t=[],n=this,i=a(c.prototype);n;)t.push(n),n=n.$$parent;return t.reverse(),H(t,function(t){H(a(t),function(t){-1===s(e,t)&&-1===s(i,t)&&e.push(t)})}),e},$$values:function(e){var t={},n=this;return H(n.$$keys(),function(i){t[i]=n[i].value(e&&e[i])}),t},$$equals:function(e,t){var n=!0,i=this;return H(i.$$keys(),function(r){var o=e&&e[r],a=t&&t[r];i[r].type.equals(o,a)||(n=!1)}),n},$$validates:function(e){var i,r,o,a,s,l=this.$$keys();for(i=0;i<l.length&&(r=this[l[i]],o=e[l[i]],o!==n&&null!==o||!r.isOptional);i++){if(a=r.type.$normalize(o),!r.type.is(a))return!1;if(s=r.type.encode(a),t.isString(s)&&!r.type.pattern.exec(s))return!1}return!0},$$parent:n},this.ParamSet=c}function y(e,i){function r(e){var t=/^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(e.source);return null!=t?t[1].replace(/\\(.)/g,"$1"):""}function o(e,t){return e.replace(/\$(\$|\d{1,2})/,function(e,n){return t["$"===n?0:Number(n)]})}function a(e,t,n){if(!n)return!1;var i=e.invoke(t,t,{$match:n});return U(i)?i:!0}function s(i,r,o,a,s){function d(e,t,n){return"/"===g?e:t?g.slice(0,-1)+e:n?g.slice(1)+e:e}function f(e){function t(e){var t=e(o,i);return t?(j(t)&&i.replace().url(t),!0):!1}if(!e||!e.defaultPrevented){m&&i.url()===m;m=n;var r,a=u.length;for(r=0;a>r;r++)if(t(u[r]))return;c&&t(c)}}function h(){return l=l||r.$on("$locationChangeSuccess",f)}var m,g=a.baseHref(),v=i.url();return p||h(),{sync:function(){f()},listen:function(){return h()},update:function(e){return e?void(v=i.url()):void(i.url()!==v&&(i.url(v),i.replace()))},push:function(e,t,r){var o=e.format(t||{});null!==o&&t&&t["#"]&&(o+="#"+t["#"]),i.url(o),m=r&&r.$$avoidResync?i.url():n,r&&r.replace&&i.replace()},href:function(n,r,o){if(!n.validates(r))return null;var a=e.html5Mode();t.isObject(a)&&(a=a.enabled),a=a&&s.history;var l=n.format(r);if(o=o||{},a||null===l||(l="#"+e.hashPrefix()+l),null!==l&&r&&r["#"]&&(l+="#"+r["#"]),l=d(l,a,o.absolute),!o.absolute||!l)return l;var u=!a&&l?"/":"",c=i.port();return c=80===c||443===c?"":":"+c,[i.protocol(),"://",i.host(),c,u,l].join("")}}}var l,u=[],c=null,p=!1;this.rule=function(e){if(!F(e))throw new Error("'rule' must be a function");return u.push(e),this},this.otherwise=function(e){if(j(e)){var t=e;e=function(){return t}}else if(!F(e))throw new Error("'rule' must be a function");return c=e,this},this.when=function(e,t){var n,s=j(t);if(j(e)&&(e=i.compile(e)),!s&&!F(t)&&!q(t))throw new Error("invalid 'handler' in when()");var l={matcher:function(e,t){return s&&(n=i.compile(t),t=["$match",function(e){return n.format(e)}]),z(function(n,i){return a(n,t,e.exec(i.path(),i.search()))},{prefix:j(e.prefix)?e.prefix:""})},regex:function(e,t){if(e.global||e.sticky)throw new Error("when() RegExp must not be global or sticky");return s&&(n=t,t=["$match",function(e){return o(n,e)}]),z(function(n,i){return a(n,t,e.exec(i.path()))},{prefix:r(e)})}},u={matcher:i.isMatcher(e),regex:e instanceof RegExp};for(var c in u)if(u[c])return this.rule(l[c](e,t));throw new Error("invalid 'what' in when()")},this.deferIntercept=function(e){e===n&&(e=!0),p=e},this.$get=s,s.$inject=["$location","$rootScope","$injector","$browser","$sniffer"]}function w(e,r){function o(e){return 0===e.indexOf(".")||0===e.indexOf("^")}function d(e,t){if(!e)return n;var i=j(e),r=i?e:e.name,a=o(r);if(a){if(!t)throw new Error("No reference point given for path '"+r+"'");t=d(t);for(var s=r.split("."),l=0,u=s.length,c=t;u>l;l++)if(""!==s[l]||0!==l){if("^"!==s[l])break;if(!c.parent)throw new Error("Path '"+r+"' not valid for state '"+t.name+"'");c=c.parent}else c=t;s=s.slice(l).join("."),r=c.name+(c.name&&s?".":"")+s}var p=k[r];return!p||!i&&(i||p!==e&&p.self!==e)?n:p}function f(e,t){E[e]||(E[e]=[]),E[e].push(t)}function m(e){for(var t=E[e]||[];t.length;)g(t.shift())}function g(t){t=i(t,{self:t,resolve:t.resolve||{},toString:function(){return this.name}});var n=t.name;if(!j(n)||n.indexOf("@")>=0)throw new Error("State must have a valid name");if(k.hasOwnProperty(n))throw new Error("State '"+n+"' is already defined");var r=-1!==n.indexOf(".")?n.substring(0,n.lastIndexOf(".")):j(t.parent)?t.parent:_(t.parent)&&j(t.parent.name)?t.parent.name:"";if(r&&!k[r])return f(r,t.self);for(var o in P)F(P[o])&&(t[o]=P[o](t,P.$delegates[o]));return k[n]=t,!t[T]&&t.url&&e.when(t.url,["$match","$stateParams",function(e,n){C.$current.navigable==t&&u(e,n)||C.transitionTo(t,e,{inherit:!0,location:!1})}]),m(n),t}function v(e){return e.indexOf("*")>-1}function b(e){for(var t=e.split("."),n=C.$current.name.split("."),i=0,r=t.length;r>i;i++)"*"===t[i]&&(n[i]="*");return"**"===t[0]&&(n=n.slice(s(n,t[1])),n.unshift("**")),"**"===t[t.length-1]&&(n.splice(s(n,t[t.length-2])+1,Number.MAX_VALUE),n.push("**")),t.length!=n.length?!1:n.join("")===t.join("")}function $(e,t){return j(e)&&!U(t)?P[e]:F(t)&&j(e)?(P[e]&&!P.$delegates[e]&&(P.$delegates[e]=P[e]),P[e]=t,this):this}function y(e,t){return _(e)?t=e:t.name=e,g(t),this}function w(e,r,o,s,p,f,m,g,$){function y(t,n,i,o){var a=e.$broadcast("$stateNotFound",t,n,i);if(a.defaultPrevented)return m.update(),D;if(!a.retry)return null;if(o.$retry)return m.update(),A;var s=C.transition=r.when(a.retry);return s.then(function(){return s!==C.transition?E:(t.options.$retry=!0,C.transitionTo(t.to,t.toParams,t.options))},function(){return D}),m.update(),s}function w(e,n,i,a,l,u){function d(){var n=[];return H(e.views,function(i,r){var a=i.resolve&&i.resolve!==e.resolve?i.resolve:{};a.$template=[function(){return o.load(r,{view:i,locals:l.globals,params:f,notify:u.notify})||""}],n.push(p.resolve(a,l.globals,l.resolve,e).then(function(n){if(F(i.controllerProvider)||q(i.controllerProvider)){var o=t.extend({},a,l.globals);n.$$controller=s.invoke(i.controllerProvider,null,o)}else n.$$controller=i.controller;n.$$state=e,n.$$controllerAs=i.controllerAs,l[r]=n}))}),r.all(n).then(function(){return l.globals})}var f=i?n:c(e.params.$$keys(),n),h={$stateParams:f};l.resolve=p.resolve(e.resolve,h,l.resolve,e);var m=[l.resolve.then(function(e){l.globals=e})];return a&&m.push(a),r.all(m).then(d).then(function(e){return l})}var E=r.reject(new Error("transition superseded")),P=r.reject(new Error("transition prevented")),D=r.reject(new Error("transition aborted")),A=r.reject(new Error("transition failed"));return S.locals={resolve:null,globals:{$stateParams:{}}},C={params:{},current:S.self,$current:S,transition:null},C.reload=function(e){return C.transitionTo(C.current,f,{reload:e||!0,inherit:!1,notify:!0})},C.go=function(e,t,n){return C.transitionTo(e,t,z({inherit:!0,relative:C.$current},n))},C.transitionTo=function(t,n,o){n=n||{},o=z({location:!0,inherit:!1,relative:null,notify:!0,reload:!1,$retry:!1},o||{});var a,u=C.$current,p=C.params,h=u.path,g=d(t,o.relative),v=n["#"];if(!U(g)){var b={to:t,toParams:n,options:o},$=y(b,u.self,p,o);if($)return $;if(t=b.to,n=b.toParams,o=b.options,g=d(t,o.relative),!U(g)){if(!o.relative)throw new Error("No such state '"+t+"'");throw new Error("Could not resolve '"+t+"' from state '"+o.relative+"'")}}if(g[T])throw new Error("Cannot transition to abstract state '"+t+"'");if(o.inherit&&(n=l(f,n||{},C.$current,g)),!g.params.$$validates(n))return A;n=g.params.$$values(n),t=g;var k=t.path,D=0,M=k[D],O=S.locals,R=[];if(o.reload){if(j(o.reload)||_(o.reload)){if(_(o.reload)&&!o.reload.name)throw new Error("Invalid reload state object");var I=o.reload===!0?h[0]:d(o.reload);if(o.reload&&!I)throw new Error("No such reload state '"+(j(o.reload)?o.reload:o.reload.name)+"'");for(;M&&M===h[D]&&M!==I;)O=R[D]=M.locals,D++,M=k[D]}}else for(;M&&M===h[D]&&M.ownParams.$$equals(n,p);)O=R[D]=M.locals,D++,M=k[D];if(x(t,n,u,p,O,o))return v&&(n["#"]=v),C.params=n,V(C.params,f),V(c(t.params.$$keys(),f),t.locals.globals.$stateParams),o.location&&t.navigable&&t.navigable.url&&(m.push(t.navigable.url,n,{$$avoidResync:!0,replace:"replace"===o.location}),m.update(!0)),C.transition=null,r.when(C.current);if(n=c(t.params.$$keys(),n||{}),v&&(n["#"]=v),o.notify&&e.$broadcast("$stateChangeStart",t.self,n,u.self,p,o).defaultPrevented)return e.$broadcast("$stateChangeCancel",t.self,n,u.self,p),null==C.transition&&m.update(),P;for(var N=r.when(O),L=D;L<k.length;L++,M=k[L])O=R[L]=i(O),N=w(M,n,M===t,N,O,o);var F=C.transition=N.then(function(){var i,r,a;if(C.transition!==F)return E;for(i=h.length-1;i>=D;i--)a=h[i],a.self.onExit&&s.invoke(a.self.onExit,a.self,a.locals.globals),a.locals=null;for(i=D;i<k.length;i++)r=k[i],r.locals=R[i],r.self.onEnter&&s.invoke(r.self.onEnter,r.self,r.locals.globals);return C.transition!==F?E:(C.$current=t,C.current=t.self,C.params=n,V(C.params,f),C.transition=null,o.location&&t.navigable&&m.push(t.navigable.url,t.navigable.locals.globals.$stateParams,{$$avoidResync:!0,replace:"replace"===o.location}),o.notify&&e.$broadcast("$stateChangeSuccess",t.self,n,u.self,p),m.update(!0),C.current)},function(i){return C.transition!==F?E:(C.transition=null,a=e.$broadcast("$stateChangeError",t.self,n,u.self,p,i),a.defaultPrevented||m.update(),r.reject(i))});return F},C.is=function(e,t,i){i=z({relative:C.$current},i||{});var r=d(e,i.relative);return U(r)?C.$current!==r?!1:t?u(r.params.$$values(t),f):!0:n},C.includes=function(e,t,i){if(i=z({relative:C.$current},i||{}),j(e)&&v(e)){if(!b(e))return!1;e=C.$current.name}var r=d(e,i.relative);return U(r)?U(C.$current.includes[r.name])?t?u(r.params.$$values(t),f,a(t)):!0:!1:n},C.href=function(e,t,i){i=z({lossy:!0,inherit:!0,absolute:!1,relative:C.$current},i||{});var r=d(e,i.relative);if(!U(r))return null;i.inherit&&(t=l(f,t||{},C.$current,r));var o=r&&i.lossy?r.navigable:r;return o&&o.url!==n&&null!==o.url?m.href(o.url,c(r.params.$$keys().concat("#"),t||{}),{absolute:i.absolute}):null},C.get=function(e,t){if(0===arguments.length)return h(a(k),function(e){return k[e].self});var n=d(e,t||C.$current);return n&&n.self?n.self:null},C}function x(e,t,n,i,r,o){function a(e,t,n){function i(t){return"search"!=e.params[t].location}var r=e.params.$$keys().filter(i),o=p.apply({},[e.params].concat(r)),a=new W.ParamSet(o);return a.$$equals(t,n)}return!o.reload&&e===n&&(r===n.locals||e.self.reloadOnSearch===!1&&a(n,i,t))?!0:void 0}var S,C,k={},E={},T="abstract",P={parent:function(e){if(U(e.parent)&&e.parent)return d(e.parent);var t=/^(.+)\.[^.]+$/.exec(e.name);return t?d(t[1]):S},data:function(e){return e.parent&&e.parent.data&&(e.data=e.self.data=i(e.parent.data,e.data)),e.data},url:function(e){var t=e.url,n={params:e.params||{}};if(j(t))return"^"==t.charAt(0)?r.compile(t.substring(1),n):(e.parent.navigable||S).url.concat(t,n);if(!t||r.isMatcher(t))return t;throw new Error("Invalid url '"+t+"' in state '"+e+"'")},navigable:function(e){return e.url?e:e.parent?e.parent.navigable:null},ownParams:function(e){var t=e.url&&e.url.params||new W.ParamSet;return H(e.params||{},function(e,n){t[n]||(t[n]=new W.Param(n,null,e,"config"))}),t},params:function(e){var t=p(e.ownParams,e.ownParams.$$keys());return e.parent&&e.parent.params?z(e.parent.params.$$new(),t):new W.ParamSet},views:function(e){var t={};return H(U(e.views)?e.views:{"":e},function(n,i){i.indexOf("@")<0&&(i+="@"+e.parent.name),t[i]=n}),t},path:function(e){return e.parent?e.parent.path.concat(e):[]},includes:function(e){var t=e.parent?z({},e.parent.includes):{};return t[e.name]=!0,t},$delegates:{}};S=g({name:"",url:"^",views:null,"abstract":!0}),S.navigable=null,this.decorator=$,this.state=y,this.$get=w,w.$inject=["$rootScope","$q","$view","$injector","$resolve","$stateParams","$urlRouter","$location","$urlMatcherFactory"]}function x(){function e(e,t){return{load:function(e,n){var i,r={template:null,controller:null,view:null,locals:null,notify:!0,async:!0,params:{}};return n=z(r,n),n.view&&(i=t.fromConfig(n.view,n.params,n.locals)),i}}}this.$get=e,e.$inject=["$rootScope","$templateFactory"]}function S(){var e=!1;this.useAnchorScroll=function(){e=!0},this.$get=["$anchorScroll","$timeout",function(t,n){return e?t:function(e){return n(function(){e[0].scrollIntoView()},0,!1)}}]}function C(e,n,i,r){function o(){return n.has?function(e){return n.has(e)?n.get(e):null}:function(e){try{return n.get(e)}catch(t){return null}}}function a(e,n){function i(e){return 1===G&&X>=4?!!u.enabled(e):1===G&&X>=2?!!u.enabled():!!l}var r={enter:function(e,t,n){t.after(e),n()},leave:function(e,t){e.remove(),t()}};if(e.noanimation)return r;if(u)return{enter:function(e,n,o){i(e)?t.version.minor>2?u.enter(e,null,n).then(o):u.enter(e,null,n,o):r.enter(e,n,o)},leave:function(e,n){i(e)?t.version.minor>2?u.leave(e).then(n):u.leave(e,n):r.leave(e,n)}};if(l){var o=l&&l(n,e);return{enter:function(e,t,n){o.enter(e,null,t),n()},leave:function(e,t){o.leave(e),t()}}}return r}var s=o(),l=s("$animator"),u=s("$animate"),c={restrict:"ECA",terminal:!0,priority:400,transclude:"element",compile:function(n,o,s){return function(n,o,l){function u(){function e(){t&&t.remove(),n&&n.$destroy()}var t=p,n=f;n&&(n._willBeDestroyed=!0),d?(v.leave(d,function(){e(),p=null}),p=d):(e(),p=null),d=null,f=null}function c(a){var c,p=E(n,l,o,r),b=p&&e.$current&&e.$current.locals[p];if((a||b!==h)&&!n._willBeDestroyed){c=n.$new(),h=e.$current.locals[p],c.$emit("$viewContentLoading",p);var $=s(c,function(e){v.enter(e,o,function(){f&&f.$emit("$viewContentAnimationEnded"),(t.isDefined(g)&&!g||n.$eval(g))&&i(e)}),u()});d=$,f=c,f.$emit("$viewContentLoaded",p),f.$eval(m)}}var p,d,f,h,m=l.onload||"",g=l.autoscroll,v=a(l,n);n.$on("$stateChangeSuccess",function(){c(!1)}),c(!0)}}};return c}function k(e,t,n,i){return{restrict:"ECA",priority:-400,compile:function(r){var o=r.html();return function(r,a,s){var l=n.$current,u=E(r,s,a,i),c=l&&l.locals[u];if(c){a.data("$uiView",{name:u,state:c.$$state}),a.html(c.$template?c.$template:o);var p=e(a.contents());if(c.$$controller){c.$scope=r,c.$element=a;var d=t(c.$$controller,c);c.$$controllerAs&&(r[c.$$controllerAs]=d),a.data("$ngControllerController",d),a.children().data("$ngControllerController",d)}p(r)}}}}}function E(e,t,n,i){var r=i(t.uiView||t.name||"")(e),o=n.inheritedData("$uiView");return r.indexOf("@")>=0?r:r+"@"+(o?o.state.name:"")}function T(e,t){var n,i=e.match(/^\s*({[^}]*})\s*$/);if(i&&(e=t+"("+i[1]+")"),n=e.replace(/\n/g," ").match(/^([^(]+?)\s*(\((.*)\))?$/),!n||4!==n.length)throw new Error("Invalid state ref '"+e+"'");return{state:n[1],paramExpr:n[3]||null}}function P(e){var t=e.parent().inheritedData("$uiView");return t&&t.state&&t.state.name?t.state:void 0}function D(e){var t="[object SVGAnimatedString]"===Object.prototype.toString.call(e.prop("href")),n="FORM"===e[0].nodeName;return{attr:n?"action":t?"xlink:href":"href",isAnchor:"A"===e.prop("tagName").toUpperCase(),clickable:!n}}function A(e,t,n,i,r){return function(o){var a=o.which||o.button,s=r();if(!(a>1||o.ctrlKey||o.metaKey||o.shiftKey||e.attr("target"))){var l=n(function(){t.go(s.state,s.params,s.options)});o.preventDefault();var u=i.isAnchor&&!s.href?1:0;o.preventDefault=function(){u--<=0&&n.cancel(l)}}}}function M(e,t){return{relative:P(e)||t.$current,inherit:!0}}function O(e,n){return{restrict:"A",require:["?^uiSrefActive","?^uiSrefActiveEq"],link:function(i,r,o,a){var s=T(o.uiSref,e.current.name),l={state:s.state,href:null,params:null},u=D(r),c=a[1]||a[0];l.options=z(M(r,e),o.uiSrefOpts?i.$eval(o.uiSrefOpts):{});var p=function(n){n&&(l.params=t.copy(n)),l.href=e.href(s.state,l.params,l.options),c&&c.$$addStateInfo(s.state,l.params),null!==l.href&&o.$set(u.attr,l.href)};s.paramExpr&&(i.$watch(s.paramExpr,function(e){e!==l.params&&p(e)},!0),l.params=t.copy(i.$eval(s.paramExpr))),p(),u.clickable&&r.bind("click",A(r,e,n,u,function(){return l}))}}}function R(e,t){return{restrict:"A",require:["?^uiSrefActive","?^uiSrefActiveEq"],link:function(n,i,r,o){function a(t){p.state=t[0],p.params=t[1],p.options=t[2],p.href=e.href(p.state,p.params,p.options),l&&l.$$addStateInfo(p.state,p.params),p.href&&r.$set(s.attr,p.href)}var s=D(i),l=o[1]||o[0],u=[r.uiState,r.uiStateParams||null,r.uiStateOpts||null],c="["+u.map(function(e){return e||"null"}).join(", ")+"]",p={state:null,params:null,options:null,href:null};n.$watch(c,a,!0),a(n.$eval(c)),s.clickable&&i.bind("click",A(i,e,t,s,function(){return p}))}}}function I(e,t,n){return{restrict:"A",controller:["$scope","$element","$attrs","$timeout",function(t,i,r,o){function a(t,n,r){var o=e.get(t,P(i)),a=s(t,n);m.push({state:o||{name:t},params:n,hash:a}),g[a]=r}function s(e,n){if(!j(e))throw new Error("state should be a string");return _(n)?e+B(n):(n=t.$eval(n),_(n)?e+B(n):e)}function l(){for(var e=0;e<m.length;e++)p(m[e].state,m[e].params)?u(i,g[m[e].hash]):c(i,g[m[e].hash]),d(m[e].state,m[e].params)?u(i,f):c(i,f)}function u(e,t){o(function(){e.addClass(t)})}function c(e,t){e.removeClass(t)}function p(t,n){return e.includes(t.name,n)}function d(t,n){return e.is(t.name,n)}var f,h,m=[],g={};f=n(r.uiSrefActiveEq||"",!1)(t);try{h=t.$eval(r.uiSrefActive)}catch(v){}h=h||n(r.uiSrefActive||"",!1)(t),_(h)&&H(h,function(n,i){if(j(n)){var r=T(n,e.current.name);a(r.state,t.$eval(r.paramExpr),i)}}),this.$$addStateInfo=function(e,t){_(h)&&m.length>0||(a(e,t,h),l())},t.$on("$stateChangeSuccess",l),l()}]}}function N(e){var t=function(t,n){return e.is(t,n)};return t.$stateful=!0,t}function L(e){var t=function(t,n,i){return e.includes(t,n,i)};return t.$stateful=!0,t}var U=t.isDefined,F=t.isFunction,j=t.isString,_=t.isObject,q=t.isArray,H=t.forEach,z=t.extend,V=t.copy,B=t.toJson;t.module("ui.router.util",["ng"]),t.module("ui.router.router",["ui.router.util"]),t.module("ui.router.state",["ui.router.router","ui.router.util"]),t.module("ui.router",["ui.router.state"]),t.module("ui.router.compat",["ui.router"]),m.$inject=["$q","$injector"],t.module("ui.router.util").service("$resolve",m),g.$inject=["$http","$templateCache","$injector"],t.module("ui.router.util").service("$templateFactory",g);var W;v.prototype.concat=function(e,t){var n={caseInsensitive:W.caseInsensitive(),strict:W.strictMode(),squash:W.defaultSquashPolicy()};return new v(this.sourcePath+e+this.sourceSearch,z(n,t),this)},v.prototype.toString=function(){return this.source},v.prototype.exec=function(e,t){function n(e){function t(e){return e.split("").reverse().join("")}function n(e){return e.replace(/\\-/g,"-")}var i=t(e).split(/-(?!\\)/),r=h(i,t);return h(r,n).reverse()}var i=this.regexp.exec(e);if(!i)return null;t=t||{};var r,o,a,s=this.parameters(),l=s.length,u=this.segments.length-1,c={};if(u!==i.length-1)throw new Error("Unbalanced capture group in route '"+this.source+"'");var p,d;for(r=0;u>r;r++){for(a=s[r],p=this.params[a],d=i[r+1],o=0;o<p.replace.length;o++)p.replace[o].from===d&&(d=p.replace[o].to);d&&p.array===!0&&(d=n(d)),U(d)&&(d=p.type.decode(d)),c[a]=p.value(d)}for(;l>r;r++){for(a=s[r],c[a]=this.params[a].value(t[a]),p=this.params[a],d=t[a],o=0;o<p.replace.length;o++)p.replace[o].from===d&&(d=p.replace[o].to);U(d)&&(d=p.type.decode(d)),c[a]=p.value(d)}return c},v.prototype.parameters=function(e){return U(e)?this.params[e]||null:this.$$paramNames},v.prototype.validates=function(e){return this.params.$$validates(e)},v.prototype.format=function(e){function t(e){return encodeURIComponent(e).replace(/-/g,function(e){return"%5C%"+e.charCodeAt(0).toString(16).toUpperCase()})}e=e||{};var n=this.segments,i=this.parameters(),r=this.params;if(!this.validates(e))return null;var o,a=!1,s=n.length-1,l=i.length,u=n[0];for(o=0;l>o;o++){var c=s>o,p=i[o],d=r[p],f=d.value(e[p]),m=d.isOptional&&d.type.equals(d.value(),f),g=m?d.squash:!1,v=d.type.encode(f);if(c){var b=n[o+1],$=o+1===s;if(g===!1)null!=v&&(u+=q(v)?h(v,t).join("-"):encodeURIComponent(v)),u+=b;else if(g===!0){var y=u.match(/\/$/)?/\/?(.*)/:/(.*)/;u+=b.match(y)[1]}else j(g)&&(u+=g+b);$&&d.squash===!0&&"/"===u.slice(-1)&&(u=u.slice(0,-1))}else{if(null==v||m&&g!==!1)continue;if(q(v)||(v=[v]),0===v.length)continue;v=h(v,encodeURIComponent).join("&"+p+"="),u+=(a?"&":"?")+(p+"="+v),a=!0}}return u},b.prototype.is=function(e,t){return!0},b.prototype.encode=function(e,t){return e},b.prototype.decode=function(e,t){return e},b.prototype.equals=function(e,t){return e==t},b.prototype.$subPattern=function(){var e=this.pattern.toString();return e.substr(1,e.length-2)},b.prototype.pattern=/.*/,b.prototype.toString=function(){return"{Type:"+this.name+"}"},b.prototype.$normalize=function(e){return this.is(e)?e:this.decode(e)},b.prototype.$asArray=function(e,t){function i(e,t){function i(e,t){return function(){return e[t].apply(e,arguments)}}function r(e){return q(e)?e:U(e)?[e]:[]}function o(e){switch(e.length){case 0:return n;case 1:return"auto"===t?e[0]:e;default:return e}}function a(e){return!e}function s(e,t){return function(n){if(q(n)&&0===n.length)return n;n=r(n);var i=h(n,e);return t===!0?0===f(i,a).length:o(i)}}function l(e){return function(t,n){var i=r(t),o=r(n);if(i.length!==o.length)return!1;for(var a=0;a<i.length;a++)if(!e(i[a],o[a]))return!1;return!0}}this.encode=s(i(e,"encode")),this.decode=s(i(e,"decode")),this.is=s(i(e,"is"),!0),this.equals=l(i(e,"equals")),this.pattern=e.pattern,this.$normalize=s(i(e,"$normalize")),this.name=e.name,this.$arrayMode=t}if(!e)return this;if("auto"===e&&!t)throw new Error("'auto' array mode is for query parameters only");return new i(this,e)},t.module("ui.router.util").provider("$urlMatcherFactory",$),t.module("ui.router.util").run(["$urlMatcherFactory",function(e){}]),y.$inject=["$locationProvider","$urlMatcherFactoryProvider"],t.module("ui.router.router").provider("$urlRouter",y),w.$inject=["$urlRouterProvider","$urlMatcherFactoryProvider"],t.module("ui.router.state").factory("$stateParams",function(){return{}}).provider("$state",w),x.$inject=[],t.module("ui.router.state").provider("$view",x),t.module("ui.router.state").provider("$uiViewScroll",S);var G=t.version.major,X=t.version.minor;C.$inject=["$state","$injector","$uiViewScroll","$interpolate"],k.$inject=["$compile","$controller","$state","$interpolate"],t.module("ui.router.state").directive("uiView",C),t.module("ui.router.state").directive("uiView",k),O.$inject=["$state","$timeout"],R.$inject=["$state","$timeout"],I.$inject=["$state","$stateParams","$interpolate"],t.module("ui.router.state").directive("uiSref",O).directive("uiSrefActive",I).directive("uiSrefActiveEq",I).directive("uiState",R),N.$inject=["$state"],L.$inject=["$state"],t.module("ui.router.state").filter("isState",N).filter("includedByState",L)}(window,window.angular),function(e,t,n){"use strict";function i(e,n,i){function r(e,i,r){var a,s;r=r||{},s=r.expires,a=t.isDefined(r.path)?r.path:o,t.isUndefined(i)&&(s="Thu, 01 Jan 1970 00:00:00 GMT",i=""),t.isString(s)&&(s=new Date(s));var l=encodeURIComponent(e)+"="+encodeURIComponent(i);l+=a?";path="+a:"",l+=r.domain?";domain="+r.domain:"",l+=s?";expires="+s.toUTCString():"",l+=r.secure?";secure":"";var u=l.length+1;return u>4096&&n.warn("Cookie '"+e+"' possibly not set or overflowed because it was too large ("+u+" > 4096 bytes)!"),l}var o=i.baseHref(),a=e[0];return function(e,t,n){a.cookie=r(e,t,n)}}t.module("ngCookies",["ng"]).provider("$cookies",[function(){function e(e){return e?t.extend({},i,e):i}var i=this.defaults={};this.$get=["$$cookieReader","$$cookieWriter",function(i,r){return{get:function(e){return i()[e]},getObject:function(e){var n=this.get(e);return n?t.fromJson(n):n},getAll:function(){return i()},put:function(t,n,i){r(t,n,e(i))},putObject:function(e,n,i){this.put(e,t.toJson(n),i)},remove:function(t,i){r(t,n,e(i))}}}]}]),t.module("ngCookies").factory("$cookieStore",["$cookies",function(e){return{get:function(t){return e.getObject(t)},put:function(t,n){e.putObject(t,n)},remove:function(t){e.remove(t)}}}]),i.$inject=["$document","$log","$browser"],t.module("ngCookies").provider("$$cookieWriter",function(){this.$get=i})}(window,window.angular),function(e,t,n){"use strict";function i(e){return null!=e&&""!==e&&"hasOwnProperty"!==e&&s.test("."+e)}function r(e,r){if(!i(r))throw a("badmember",'Dotted member path "@{0}" is invalid.',r);for(var o=r.split("."),s=0,l=o.length;l>s&&t.isDefined(e);s++){var u=o[s];e=null!==e?e[u]:n}return e}function o(e,n){n=n||{},t.forEach(n,function(e,t){delete n[t]});for(var i in e)!e.hasOwnProperty(i)||"$"===i.charAt(0)&&"$"===i.charAt(1)||(n[i]=e[i]);return n}var a=t.$$minErr("$resource"),s=/^(\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;t.module("ngResource",["ng"]).provider("$resource",function(){var e=/^https?:\/\/[^\/]*/,i=this;this.defaults={stripTrailingSlashes:!0,actions:{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}}},this.$get=["$http","$log","$q","$timeout",function(s,l,u,c){function p(e){return d(e,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function d(e,t){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,t?"%20":"+")}function f(e,t){this.template=e,this.defaults=v({},i.defaults,t),this.urlParams={}}function h(e,p,d,y){function w(e,t){var n={};return t=v({},p,t),g(t,function(t,i){$(t)&&(t=t()),n[i]=t&&t.charAt&&"@"==t.charAt(0)?r(e,t.substr(1)):t}),n}function x(e){return e.resource}function S(e){o(e||{},this)}var C=new f(e,y);return d=v({},i.defaults.actions,d),S.prototype.toJSON=function(){var e=v({},this);return delete e.$promise,delete e.$resolved,e},g(d,function(e,r){var p=/^(POST|PUT|PATCH)$/i.test(e.method),d=e.timeout,f=t.isDefined(e.cancellable)?e.cancellable:y&&t.isDefined(y.cancellable)?y.cancellable:i.defaults.cancellable;
d&&!t.isNumber(d)&&(l.debug("ngResource:\n  Only numeric values are allowed as `timeout`.\n  Promises are not supported in $resource, because the same value would be used for multiple requests. If you are looking for a way to cancel requests, you should use the `cancellable` option."),delete e.timeout,d=null),S[r]=function(i,l,h,y){var k,E,T,P={};switch(arguments.length){case 4:T=y,E=h;case 3:case 2:if(!$(l)){P=i,k=l,E=h;break}if($(i)){E=i,T=l;break}E=l,T=h;case 1:$(i)?E=i:p?k=i:P=i;break;case 0:break;default:throw a("badargs","Expected up to 4 arguments [params, data, success, error], got {0} arguments",arguments.length)}var D,A,M=this instanceof S,O=M?k:e.isArray?[]:new S(k),R={},I=e.interceptor&&e.interceptor.response||x,N=e.interceptor&&e.interceptor.responseError||n;g(e,function(e,t){switch(t){default:R[t]=b(e);break;case"params":case"isArray":case"interceptor":case"cancellable":}}),!M&&f&&(D=u.defer(),R.timeout=D.promise,d&&(A=c(D.resolve,d))),p&&(R.data=k),C.setUrlParams(R,v({},w(k,e.params||{}),P),e.url);var L=s(R).then(function(n){var i=n.data;if(i){if(t.isArray(i)!==!!e.isArray)throw a("badcfg","Error in resource configuration for action `{0}`. Expected response to contain an {1} but got an {2} (Request: {3} {4})",r,e.isArray?"array":"object",t.isArray(i)?"array":"object",R.method,R.url);if(e.isArray)O.length=0,g(i,function(e){"object"==typeof e?O.push(new S(e)):O.push(e)});else{var s=O.$promise;o(i,O),O.$promise=s}}return n.resource=O,n},function(e){return(T||m)(e),u.reject(e)});return L["finally"](function(){O.$resolved=!0,!M&&f&&(O.$cancelRequest=t.noop,c.cancel(A),D=A=R.timeout=null)}),L=L.then(function(e){var t=I(e);return(E||m)(t,e.headers),t},N),M?L:(O.$promise=L,O.$resolved=!1,f&&(O.$cancelRequest=D.resolve),O)},S.prototype["$"+r]=function(e,t,n){$(e)&&(n=t,t=e,e={});var i=S[r].call(this,e,this,t,n);return i.$promise||i}}),S.bind=function(t){return h(e,v({},p,t),d)},S}var m=t.noop,g=t.forEach,v=t.extend,b=t.copy,$=t.isFunction;return f.prototype={setUrlParams:function(n,i,r){var o,s,l=this,u=r||l.template,c="",f=l.urlParams={};g(u.split(/\W/),function(e){if("hasOwnProperty"===e)throw a("badname","hasOwnProperty is not a valid parameter name.");!new RegExp("^\\d+$").test(e)&&e&&new RegExp("(^|[^\\\\]):"+e+"(\\W|$)").test(u)&&(f[e]={isQueryParamValue:new RegExp("\\?.*=:"+e+"(?:\\W|$)").test(u)})}),u=u.replace(/\\:/g,":"),u=u.replace(e,function(e){return c=e,""}),i=i||{},g(l.urlParams,function(e,n){o=i.hasOwnProperty(n)?i[n]:l.defaults[n],t.isDefined(o)&&null!==o?(s=e.isQueryParamValue?d(o,!0):p(o),u=u.replace(new RegExp(":"+n+"(\\W|$)","g"),function(e,t){return s+t})):u=u.replace(new RegExp("(/?):"+n+"(\\W|$)","g"),function(e,t,n){return"/"==n.charAt(0)?n:t+n})}),l.defaults.stripTrailingSlashes&&(u=u.replace(/\/+$/,"")||"/"),u=u.replace(/\/\.(?=\w+($|\?))/,"."),n.url=c+u.replace(/\/\\\./,"/."),g(i,function(e,t){l.urlParams[t]||(n.params=n.params||{},n.params[t]=e)})}},h}]})}(window,window.angular),function(){"use strict";function e(e,t,n,i,r){function o(o){function a(){angular.element(r[0].head).append(t(p)(o)),e.$on("$stateChangeSuccess",l)}function s(e){var t=e.parent||(/^(.+)\.[^.]+$/.exec(e.name)||[])[1];return t&&n.get(t)}function l(e,t){var n={};o.routeStyles=[];for(var i=t;i&&""!==i.name;i=s(i))i&&i.data&&i.data.css&&(Array.isArray(i.data.css)||(i.data.css=[i.data.css]),angular.forEach(i.data.css,function(e){"object"==typeof e&&e.name&&e.href&&!n[e.name]?n[e.name]=e.href:"string"==typeof e&&(n[e]=e)}),angular.forEach(n,function(e){-1===o.routeStyles.indexOf(e)&&o.routeStyles.push(e)}));o.routeStyles.reverse()}var u=i.startSymbol(),c=i.endSymbol(),p='<link rel="stylesheet" ng-repeat="(k, css) in routeStyles track by k" ng-href="'+u+"css"+c+'" >';o.routeStyles=[],a()}var a={restrict:"EA",link:o};return a}angular.module("uiRouterStyles",["ui.router"]).directive("uiRouterStyles",e),e.$inject=["$rootScope","$compile","$state","$interpolate","$document"]}(),angular.module("angular-notification-icons",["angular-notification-icons.tpls"]),angular.module("angular-notification-icons.tpls",[]),angular.module("angular-notification-icons.tpls").run(["$templateCache",function(e){e.put("template/notification-icon.html",'<div class="angular-notifications-container">\n    <div class="angular-notifications-icon overlay" ng-show="notification.visible"><div ng-hide="notification.hideCount">{{notification.count}}</div></div>\n    <div class="notification-inner">\n        <ng-transclude></ng-transclude>\n    </div>\n</div>')}]),function(){var e=function(e,t,n){var i=this;i.visible=!1,i.wideThreshold=i.wideThreshold||100,i.alwaysShow=i.alwaysShow||!1;var r,o={appear:i.appearAnimation||i.animation||"grow",update:i.updateAnimation||i.animation||"grow",disappear:i.disappearAnimation};i.getElement=function(e){return angular.element(e[0].querySelector(".angular-notifications-icon"))},i.init=function(t){i.$element=i.getElement(t),i.clearTrigger&&t.on(i.clearTrigger,function(){i.count=0,e.$apply()})};var a=function(e){return e?(r&&t.cancel(r),r=t.addClass(i.$element,e),r.then(function(){return i.$element.removeClass(e),n.when(!0)}),r):n.when(!1)},s=function(){i.visible=!0,a(o.appear)},l=function(){a(o.disappear).then(function(t){i.visible=!1,t&&e.$apply()})},u=function(){a(o.update)};e.$watch(function(){return i.count},function(){i.visible===!1&&(i.alwaysShow||i.count>0)?s():!i.alwaysShow&&i.visible===!0&&i.count<=0?l():u(),Math.abs(i.count)>=i.wideThreshold?i.$element.addClass("wide-icon"):i.$element.removeClass("wide-icon")})},t=function(){return{restrict:"EA",scope:{count:"=",hideCount:"@",alwaysShow:"@",animation:"@",appearAnimation:"@",disappearAnimation:"@",updateAnimation:"@",clearTrigger:"@",wideThreshold:"@"},controller:"NotificationDirectiveController",controllerAs:"notification",bindToController:!0,transclude:!0,templateUrl:"template/notification-icon.html",link:function(e,t,n,i){i.init(t)}}};angular.module("angular-notification-icons").controller("NotificationDirectiveController",["$scope","$animate","$q",e]).directive("notificationIcon",t)}(),!window.XMLHttpRequest||window.FileAPI&&FileAPI.shouldLoad||(window.XMLHttpRequest.prototype.setRequestHeader=function(e){return function(t,n){if("__setXHR_"===t){var i=n(this);i instanceof Function&&i(this)}else e.apply(this,arguments)}}(window.XMLHttpRequest.prototype.setRequestHeader));var ngFileUpload=angular.module("ngFileUpload",[]);ngFileUpload.version="12.0.4",ngFileUpload.service("UploadBase",["$http","$q","$timeout",function(e,t,n){function i(i){function r(e){u.notify&&u.notify(e),c.progressFunc&&n(function(){c.progressFunc(e)})}function s(e){return null!=i._start&&a?{loaded:e.loaded+i._start,total:i._file&&i._file.size||e.total,type:e.type,config:i,lengthComputable:!0,target:e.target}:e}function l(){e(i).then(function(e){a&&i._chunkSize&&!i._finished&&i._file?(r({loaded:i._end,total:i._file&&i._file.size,config:i,type:"progress"}),o.upload(i,!0)):(i._finished&&delete i._finished,u.resolve(e))},function(e){u.reject(e)},function(e){u.notify(e)})}i.method=i.method||"POST",i.headers=i.headers||{};var u=i._deferred=i._deferred||t.defer(),c=u.promise;return i.disableProgress||(i.headers.__setXHR_=function(){return function(e){e&&e.upload&&e.upload.addEventListener&&(i.__XHR=e,i.xhrFn&&i.xhrFn(e),e.upload.addEventListener("progress",function(e){e.config=i,r(s(e))},!1),e.upload.addEventListener("load",function(e){e.lengthComputable&&(e.config=i,r(s(e)))},!1))}}),a?i._chunkSize&&i._end&&!i._finished?(i._start=i._end,i._end+=i._chunkSize,l()):i.resumeSizeUrl?e.get(i.resumeSizeUrl).then(function(e){i._start=i.resumeSizeResponseReader?i.resumeSizeResponseReader(e.data):parseInt((null==e.data.size?e.data:e.data.size).toString()),i._chunkSize&&(i._end=i._start+i._chunkSize),l()},function(e){throw e}):i.resumeSize?i.resumeSize().then(function(e){i._start=e,l()},function(e){throw e}):(i._chunkSize&&(i._start=0,i._end=i._start+i._chunkSize),l()):l(),c.success=function(e){return c.then(function(t){e(t.data,t.status,t.headers,i)}),c},c.error=function(e){return c.then(null,function(t){e(t.data,t.status,t.headers,i)}),c},c.progress=function(e){return c.progressFunc=e,c.then(null,null,function(t){e(t)}),c},c.abort=c.pause=function(){return i.__XHR&&n(function(){i.__XHR.abort()}),c},c.xhr=function(e){return i.xhrFn=function(t){return function(){t&&t.apply(c,arguments),e.apply(c,arguments)}}(i.xhrFn),c},o.promisesCount++,c["finally"](function(){o.promisesCount--}),c}function r(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var o=this;o.promisesCount=0,this.isResumeSupported=function(){return window.Blob&&window.Blob.prototype.slice};var a=this.isResumeSupported();this.isUploadInProgress=function(){return o.promisesCount>0},this.rename=function(e,t){return e.ngfName=t,e},this.jsonBlob=function(e){null==e||angular.isString(e)||(e=JSON.stringify(e));var t=new window.Blob([e],{type:"application/json"});return t._ngfBlob=!0,t},this.json=function(e){return angular.toJson(e)},this.isFile=function(e){return null!=e&&(e instanceof window.Blob||e.flashId&&e.name&&e.size)},this.upload=function(e,t){function n(t,n){if(t._ngfBlob)return t;if(e._file=e._file||t,null!=e._start&&a){e._end&&e._end>=t.size&&(e._finished=!0,e._end=t.size);var i=t.slice(e._start,e._end||t.size);return i.name=t.name,i.ngfName=t.ngfName,e._chunkSize&&(n.append("_chunkSize",e._chunkSize),n.append("_currentChunkSize",e._end-e._start),n.append("_chunkNumber",Math.floor(e._start/e._chunkSize)),n.append("_totalSize",e._file.size)),i}return t}function s(t,i,r){if(void 0!==i)if(angular.isDate(i)&&(i=i.toISOString()),angular.isString(i))t.append(r,i);else if(o.isFile(i)){var a=n(i,t),l=r.split(",");l[1]&&(a.ngfName=l[1].replace(/^\s+|\s+$/g,""),r=l[0]),e._fileKey=e._fileKey||r,t.append(r,a,a.ngfName||a.name)}else if(angular.isObject(i)){if(i.$$ngfCircularDetection)throw"ngFileUpload: Circular reference in config.data. Make sure specified data for Upload.upload() has no circular reference: "+r;i.$$ngfCircularDetection=!0;try{for(var u in i)if(i.hasOwnProperty(u)&&"$$ngfCircularDetection"!==u){var c=null==e.objectKey?"[i]":e.objectKey;i.length&&parseInt(u)>-1&&(c=null==e.arrayKey?c:e.arrayKey),s(t,i[u],r+c.replace(/[ik]/g,u))}}finally{delete i.$$ngfCircularDetection}}else t.append(r,i)}function l(){e._chunkSize=o.translateScalars(e.resumeChunkSize),e._chunkSize=e._chunkSize?parseInt(e._chunkSize.toString()):null,e.headers=e.headers||{},e.headers["Content-Type"]=void 0,e.transformRequest=e.transformRequest?angular.isArray(e.transformRequest)?e.transformRequest:[e.transformRequest]:[],e.transformRequest.push(function(t){var n,i=new window.FormData;t=t||e.fields||{},e.file&&(t.file=e.file);for(n in t)if(t.hasOwnProperty(n)){var r=t[n];e.formDataAppender?e.formDataAppender(i,n,r):s(i,r,n)}return i})}return t||(e=r(e)),e._isDigested||(e._isDigested=!0,l()),i(e)},this.http=function(t){return t=r(t),t.transformRequest=t.transformRequest||function(t){return window.ArrayBuffer&&t instanceof window.ArrayBuffer||t instanceof window.Blob?t:e.defaults.transformRequest[0].apply(this,arguments)},t._chunkSize=o.translateScalars(t.resumeChunkSize),t._chunkSize=t._chunkSize?parseInt(t._chunkSize.toString()):null,i(t)},this.translateScalars=function(e){if(angular.isString(e)){if(e.search(/kb/i)===e.length-2)return parseFloat(1024*e.substring(0,e.length-2));if(e.search(/mb/i)===e.length-2)return parseFloat(1048576*e.substring(0,e.length-2));if(e.search(/gb/i)===e.length-2)return parseFloat(1073741824*e.substring(0,e.length-2));if(e.search(/b/i)===e.length-1)return parseFloat(e.substring(0,e.length-1));if(e.search(/s/i)===e.length-1)return parseFloat(e.substring(0,e.length-1));if(e.search(/m/i)===e.length-1)return parseFloat(60*e.substring(0,e.length-1));if(e.search(/h/i)===e.length-1)return parseFloat(3600*e.substring(0,e.length-1))}return e},this.urlToBlob=function(n){var i=t.defer();return e({url:n,method:"get",responseType:"arraybuffer"}).then(function(e){var t=new Uint8Array(e.data),n=e.headers("content-type")||"image/WebP",r=new window.Blob([t],{type:n});i.resolve(r)},function(e){i.reject(e)}),i.promise},this.setDefaults=function(e){this.defaults=e||{}},this.defaults={},this.version=ngFileUpload.version}]),ngFileUpload.service("Upload",["$parse","$timeout","$compile","$q","UploadExif",function(e,t,n,i,r){function o(e,t,n){var r=[l.emptyPromise()];return angular.forEach(e,function(i,o){0===i.type.indexOf("image/jpeg")&&l.attrGetter("ngfFixOrientation",t,n,{$file:i})&&r.push(l.happyPromise(l.applyExifRotation(i),i).then(function(t){e.splice(o,1,t)}))}),i.all(r)}function a(e,t,n){var r=l.attrGetter("ngfResize",t,n);if(!r||!l.isResizeSupported()||!e.length)return l.emptyPromise();if(!(r instanceof Function))return s(r,e,t,n);var o=i.defer();r(e).then(function(i){s(i,e,t,n).then(function(e){o.resolve(e)},function(e){o.reject(e)})},function(e){o.reject(e)})}function s(e,t,n,r){function o(i,o){if(0===i.type.indexOf("image")){if(e.pattern&&!l.validatePattern(i,e.pattern))return;var s=l.resize(i,e.width,e.height,e.quality,e.type,e.ratio,e.centerCrop,function(e,t){return l.attrGetter("ngfResizeIf",n,r,{$width:e,$height:t,$file:i})},e.restoreExif!==!1);a.push(s),s.then(function(e){t.splice(o,1,e)},function(e){i.$error="resize",i.$errorParam=(e?(e.message?e.message:e)+": ":"")+(i&&i.name)})}}for(var a=[l.emptyPromise()],s=0;s<t.length;s++)o(t[s],s);return i.all(a)}var l=r;return l.getAttrWithDefaults=function(e,t){if(null!=e[t])return e[t];var n=l.defaults[t];return null==n?n:angular.isString(n)?n:JSON.stringify(n)},l.attrGetter=function(t,n,i,r){var o=this.getAttrWithDefaults(n,t);if(!i)return o;try{return r?e(o)(i,r):e(o)(i)}catch(a){if(t.search(/min|max|pattern/i))return o;throw a}},l.shouldUpdateOn=function(e,t,n){var i=l.attrGetter("ngModelOptions",t,n);return i&&i.updateOn?i.updateOn.split(" ").indexOf(e)>-1:!0},l.emptyPromise=function(){var e=i.defer(),n=arguments;return t(function(){e.resolve.apply(e,n)}),e.promise},l.rejectPromise=function(){var e=i.defer(),n=arguments;return t(function(){e.reject.apply(e,n)}),e.promise},l.happyPromise=function(e,n){var r=i.defer();return e.then(function(e){r.resolve(e)},function(e){t(function(){throw e}),r.resolve(n)}),r.promise},l.updateModel=function(n,i,r,s,u,c,p){function d(o,a,u,p,d){i.$$ngfPrevValidFiles=o,i.$$ngfPrevInvalidFiles=a;var f=o&&o.length?o[0]:null,h=a&&a.length?a[0]:null;n&&(l.applyModelValidation(n,o),n.$setViewValue(d?f:o)),s&&e(s)(r,{$files:o,$file:f,$newFiles:u,$duplicateFiles:p,$invalidFiles:a,$invalidFile:h,$event:c});var m=l.attrGetter("ngfModelInvalid",i);m&&t(function(){e(m).assign(r,d?h:a)}),t(function(){})}function f(){function e(e,t){return e.name===t.name&&(e.$ngfOrigSize||e.size)===(t.$ngfOrigSize||t.size)&&e.type===t.type}function t(t){var n;for(n=0;n<b.length;n++)if(e(t,b[n]))return!0;for(n=0;n<$.length;n++)if(e(t,$[n]))return!0;return!1}if(u){v=[],y=[];for(var n=0;n<u.length;n++)t(u[n])?y.push(u[n]):v.push(u[n])}}function h(e){return angular.isArray(e)?e:[e]}function m(){x=[],w=[],angular.forEach(v,function(e){e.$error?w.push(e):x.push(e)})}function g(){function e(){t(function(){d(S?b.concat(x):x,S?$.concat(w):w,u,y,C)},E&&E.debounce?E.debounce.change||E.debounce:0)}a(k?v:x,i,r).then(function(){k?l.validate(v,b.length,n,i,r).then(function(){m(),e()}):e()},function(e){throw"Could not resize files "+e})}var v,b,$,y=[],w=[],x=[];b=i.$$ngfPrevValidFiles||[],$=i.$$ngfPrevInvalidFiles||[],n&&n.$modelValue&&(b=h(n.$modelValue));var S=l.attrGetter("ngfKeep",i,r);v=(u||[]).slice(0),("distinct"===S||l.attrGetter("ngfKeepDistinct",i,r)===!0)&&f(i,r);var C=!S&&!l.attrGetter("ngfMultiple",i,r)&&!l.attrGetter("multiple",i);if(!S||v.length){l.attrGetter("ngfBeforeModelChange",i,r,{$files:u,$file:u&&u.length?u[0]:null,$newFiles:v,$duplicateFiles:y,$event:c});var k=l.attrGetter("ngfValidateAfterResize",i,r),E=l.attrGetter("ngModelOptions",i,r);l.validate(v,b.length,n,i,r).then(function(){p?d(v,[],u,y,C):(E&&E.allowInvalid||k?x=v:m(),l.attrGetter("ngfFixOrientation",i,r)&&l.isExifSupported()?o(x,i,r).then(function(){g()}):g())})}},l}]),ngFileUpload.directive("ngfSelect",["$parse","$timeout","$compile","Upload",function(e,t,n,i){function r(e){var t=e.match(/Android[^\d]*(\d+)\.(\d+)/);if(t&&t.length>2){var n=i.defaults.androidFixMinorVersion||4;return parseInt(t[1])<4||parseInt(t[1])===n&&parseInt(t[2])<n}return-1===e.indexOf("Chrome")&&/.*Windows.*Safari.*/.test(e)}function o(e,t,n,i,o,s,l,u){function c(){return"input"===t[0].tagName.toLowerCase()&&n.type&&"file"===n.type.toLowerCase()}function p(){return $("ngfChange")||$("ngfSelect")}function d(t){if(u.shouldUpdateOn("change",n,e)){for(var r=t.__files_||t.target&&t.target.files,o=[],a=0;a<r.length;a++)o.push(r[a]);u.updateModel(i,n,e,p(),o.length?o:null,t)}}function f(e){if(t!==e)for(var n=0;n<t[0].attributes.length;n++){var i=t[0].attributes[n];"type"!==i.name&&"class"!==i.name&&"style"!==i.name&&((null==i.value||""===i.value)&&("required"===i.name&&(i.value="required"),"multiple"===i.name&&(i.value="multiple")),e.attr(i.name,"id"===i.name?"ngf-"+i.value:i.value))}}function h(){if(c())return t;var e=angular.element('<input type="file">');f(e);var n=angular.element("<label>upload</label>");return n.css("visibility","hidden").css("position","absolute").css("overflow","hidden").css("width","0px").css("height","0px").css("border","none").css("margin","0px").css("padding","0px").attr("tabindex","-1"),a.push({el:t,ref:n}),document.body.appendChild(n.append(e)[0]),e}function m(n){if(t.attr("disabled"))return!1;if(!$("ngfSelectDisabled",e)){var i=g(n);if(null!=i)return i;v(n);try{c()||document.body.contains(x[0])||(a.push({el:t,ref:x.parent()}),document.body.appendChild(x.parent()[0]),x.bind("change",d))}catch(o){}return r(navigator.userAgent)?setTimeout(function(){x[0].click()},0):x[0].click(),!1}}function g(e){var t=e.changedTouches||e.originalEvent&&e.originalEvent.changedTouches;if("touchstart"===e.type)return w=t?t[0].clientY:0,!0;if(e.stopPropagation(),e.preventDefault(),"touchend"===e.type){var n=t?t[0].clientY:0;if(Math.abs(n-w)>20)return!1}}function v(t){u.shouldUpdateOn("click",n,e)&&x.val()&&(x.val(null),u.updateModel(i,n,e,p(),null,t,!0))}function b(e){if(x&&!x.attr("__ngf_ie10_Fix_")){if(!x[0].parentNode)return void(x=null);e.preventDefault(),e.stopPropagation(),x.unbind("click");var t=x.clone();return x.replaceWith(t),x=t,x.attr("__ngf_ie10_Fix_","true"),x.bind("change",d),x.bind("click",b),x[0].click(),!1}x.removeAttr("__ngf_ie10_Fix_")}var $=function(e,t){return u.attrGetter(e,n,t)};u.registerModelChangeValidator(i,n,e);var y=[];y.push(e.$watch($("ngfMultiple"),function(){x.attr("multiple",$("ngfMultiple",e))})),y.push(e.$watch($("ngfCapture"),function(){x.attr("capture",$("ngfCapture",e))})),y.push(e.$watch($("ngfAccept"),function(){x.attr("accept",$("ngfAccept",e))})),n.$observe("accept",function(){x.attr("accept",$("accept"))}),y.push(function(){n.$$observers&&delete n.$$observers.accept});var w=0,x=t;c()||(x=h()),x.bind("change",d),c()?t.bind("click",v):t.bind("click touchstart touchend",m),-1!==navigator.appVersion.indexOf("MSIE 10")&&x.bind("click",b),i&&i.$formatters.push(function(e){return(null==e||0===e.length)&&x.val()&&x.val(null),e}),e.$on("$destroy",function(){c()||x.parent().remove(),angular.forEach(y,function(e){e()})}),s(function(){for(var e=0;e<a.length;e++){var t=a[e];document.body.contains(t.el[0])||(a.splice(e,1),t.ref.remove())}}),window.FileAPI&&window.FileAPI.ngfFixIE&&window.FileAPI.ngfFixIE(t,x,d)}var a=[];return{restrict:"AEC",require:"?ngModel",link:function(r,a,s,l){o(r,a,s,l,e,t,n,i)}}}]),function(){function e(e){return"img"===e.tagName.toLowerCase()?"image":"audio"===e.tagName.toLowerCase()?"audio":"video"===e.tagName.toLowerCase()?"video":/./}function t(t,n,i,r,o,a,s,l){function u(e){var a=t.attrGetter("ngfNoObjectUrl",o,i);t.dataUrl(e,a)["finally"](function(){n(function(){var t=(a?e.$ngfDataUrl:e.$ngfBlobUrl)||e.$ngfDataUrl;l?r.css("background-image","url('"+(t||"")+"')"):r.attr("src",t),t?r.removeClass("ng-hide"):r.addClass("ng-hide")})})}n(function(){var n=i.$watch(o[a],function(n){var i=s;if("ngfThumbnail"===a&&(i||(i={width:r[0].clientWidth,height:r[0].clientHeight}),0===i.width&&window.getComputedStyle)){var o=getComputedStyle(r[0]);i={width:parseInt(o.width.slice(0,-2)),height:parseInt(o.height.slice(0,-2))}}return angular.isString(n)?(r.removeClass("ng-hide"),l?r.css("background-image","url('"+n+"')"):r.attr("src",n)):void(!n||!n.type||0!==n.type.search(e(r[0]))||l&&0!==n.type.indexOf("image")?r.addClass("ng-hide"):i&&t.isResizeSupported()?t.resize(n,i.width,i.height,i.quality).then(function(e){u(e)},function(e){throw e}):u(n))});i.$on("$destroy",function(){n()})})}ngFileUpload.service("UploadDataUrl",["UploadBase","$timeout","$q",function(e,t,n){var i=e;return i.base64DataUrl=function(e){if(angular.isArray(e)){var t=n.defer(),r=0;return angular.forEach(e,function(n){i.dataUrl(n,!0)["finally"](function(){if(r++,r===e.length){var n=[];angular.forEach(e,function(e){n.push(e.$ngfDataUrl)}),t.resolve(n,e)}})}),t.promise}return i.dataUrl(e,!0)},i.dataUrl=function(e,r){if(!e)return i.emptyPromise(e,e);if(r&&null!=e.$ngfDataUrl||!r&&null!=e.$ngfBlobUrl)return i.emptyPromise(r?e.$ngfDataUrl:e.$ngfBlobUrl,e);var o=r?e.$$ngfDataUrlPromise:e.$$ngfBlobUrlPromise;if(o)return o;var a=n.defer();return t(function(){if(window.FileReader&&e&&(!window.FileAPI||-1===navigator.userAgent.indexOf("MSIE 8")||e.size<2e4)&&(!window.FileAPI||-1===navigator.userAgent.indexOf("MSIE 9")||e.size<4e6)){var n=window.URL||window.webkitURL;if(n&&n.createObjectURL&&!r){var o;try{o=n.createObjectURL(e)}catch(s){return void t(function(){e.$ngfBlobUrl="",a.reject()})}t(function(){if(e.$ngfBlobUrl=o,o){a.resolve(o,e),i.blobUrls=i.blobUrls||[],i.blobUrlsTotalSize=i.blobUrlsTotalSize||0,i.blobUrls.push({url:o,size:e.size}),i.blobUrlsTotalSize+=e.size||0;for(var t=i.defaults.blobUrlsMaxMemory||268435456,r=i.defaults.blobUrlsMaxQueueSize||200;(i.blobUrlsTotalSize>t||i.blobUrls.length>r)&&i.blobUrls.length>1;){var s=i.blobUrls.splice(0,1)[0];n.revokeObjectURL(s.url),i.blobUrlsTotalSize-=s.size}}})}else{var l=new FileReader;l.onload=function(n){t(function(){e.$ngfDataUrl=n.target.result,a.resolve(n.target.result,e),t(function(){delete e.$ngfDataUrl},1e3)})},l.onerror=function(){t(function(){e.$ngfDataUrl="",a.reject()})},l.readAsDataURL(e)}}else t(function(){e[r?"$ngfDataUrl":"$ngfBlobUrl"]="",a.reject()})}),o=r?e.$$ngfDataUrlPromise=a.promise:e.$$ngfBlobUrlPromise=a.promise,o["finally"](function(){delete e[r?"$$ngfDataUrlPromise":"$$ngfBlobUrlPromise"]}),o},i}]),ngFileUpload.directive("ngfSrc",["Upload","$timeout",function(e,n){return{restrict:"AE",link:function(i,r,o){t(e,n,i,r,o,"ngfSrc",e.attrGetter("ngfResize",o,i),!1)}}}]),ngFileUpload.directive("ngfBackground",["Upload","$timeout",function(e,n){return{restrict:"AE",link:function(i,r,o){t(e,n,i,r,o,"ngfBackground",e.attrGetter("ngfResize",o,i),!0)}}}]),ngFileUpload.directive("ngfThumbnail",["Upload","$timeout",function(e,n){return{restrict:"AE",link:function(i,r,o){var a=e.attrGetter("ngfSize",o,i);t(e,n,i,r,o,"ngfThumbnail",a,e.attrGetter("ngfAsBackground",o,i))}}}]),ngFileUpload.config(["$compileProvider",function(e){e.imgSrcSanitizationWhitelist&&e.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|local|file|data|blob):/),e.aHrefSanitizationWhitelist&&e.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|local|file|data|blob):/)}]),ngFileUpload.filter("ngfDataUrl",["UploadDataUrl","$sce",function(e,t){return function(n,i,r){if(angular.isString(n))return t.trustAsResourceUrl(n);var o=n&&((i?n.$ngfDataUrl:n.$ngfBlobUrl)||n.$ngfDataUrl);return n&&!o?(!n.$ngfDataUrlFilterInProgress&&angular.isObject(n)&&(n.$ngfDataUrlFilterInProgress=!0,e.dataUrl(n,i)),""):(n&&delete n.$ngfDataUrlFilterInProgress,(n&&o?r?t.trustAsResourceUrl(o):o:n)||"")}}])}(),ngFileUpload.service("UploadValidate",["UploadDataUrl","$q","$timeout",function(e,t,n){function i(e){var t="",n=[];if(e.length>2&&"/"===e[0]&&"/"===e[e.length-1])t=e.substring(1,e.length-1);else{var r=e.split(",");if(r.length>1)for(var o=0;o<r.length;o++){var a=i(r[o]);a.regexp?(t+="("+a.regexp+")",o<r.length-1&&(t+="|")):n=n.concat(a.excludes)}else 0===e.indexOf("!")?n.push("^((?!"+i(e.substring(1)).regexp+").)*$"):(0===e.indexOf(".")&&(e="*"+e),t="^"+e.replace(new RegExp("[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\-]","g"),"\\$&")+"$",t=t.replace(/\\\*/g,".*").replace(/\\\?/g,"."))}return{regexp:t,excludes:n}}function r(e,t){null==t||e.$dirty||(e.$setDirty?e.$setDirty():e.$dirty=!0)}var o=e;return o.validatePattern=function(e,t){if(!t)return!0;var n=i(t),r=!0;if(n.regexp&&n.regexp.length){var o=new RegExp(n.regexp,"i");r=null!=e.type&&o.test(e.type)||null!=e.name&&o.test(e.name)}for(var a=n.excludes.length;a--;){var s=new RegExp(n.excludes[a],"i");r=r&&(null==e.type||s.test(e.type))&&(null==e.name||s.test(e.name))}return r},o.ratioToFloat=function(e){var t=e.toString(),n=t.search(/[x:]/i);return t=n>-1?parseFloat(t.substring(0,n))/parseFloat(t.substring(n+1)):parseFloat(t)},o.registerModelChangeValidator=function(e,t,n){e&&e.$formatters.push(function(i){e.$dirty&&(i&&!angular.isArray(i)&&(i=[i]),o.validate(i,0,e,t,n).then(function(){o.applyModelValidation(e,i)}))})},o.applyModelValidation=function(e,t){r(e,t),angular.forEach(e.$ngfValidations,function(t){e.$setValidity(t.name,t.valid)})},o.getValidationAttr=function(e,t,n,i,r){var a="ngf"+n[0].toUpperCase()+n.substr(1),s=o.attrGetter(a,e,t,{$file:r});if(null==s&&(s=o.attrGetter("ngfValidate",e,t,{$file:r}))){var l=(i||n).split(".");s=s[l[0]],l.length>1&&(s=s&&s[l[1]])}return s},o.validate=function(e,n,i,r,a){function s(t,n,s){if(e){for(var l=e.length,u=null;l--;){var c=e[l];if(c){var p=o.getValidationAttr(r,a,t,n,c);null!=p&&(s(c,p,l)||(c.$error=t,(c.$errorMessages=c.$errorMessages||{})[t]=!0,c.$errorParam=p,e.splice(l,1),u=!1))}}null!==u&&i.$ngfValidations.push({name:t,valid:u})}}function l(n,s,l,c,p){function d(e,t,i){null!=i?c(t,i).then(function(r){p(r,i)?e.resolve():(t.$error=n,(t.$errorMessages=t.$errorMessages||{})[n]=!0,t.$errorParam=i,e.reject())},function(){u("ngfValidateForce",{$file:t})?(t.$error=n,(t.$errorMessages=t.$errorMessages||{})[n]=!0,t.$errorParam=i,e.reject()):e.resolve()}):e.resolve()}var f=[o.emptyPromise()];return e?(e=void 0===e.length?[e]:e,angular.forEach(e,function(e){var i=t.defer();return f.push(i.promise),!l||null!=e.type&&0===e.type.search(l)?void("dimensions"===n&&null!=o.attrGetter("ngfDimensions",r)?o.imageDimensions(e).then(function(t){d(i,e,u("ngfDimensions",{$file:e,$width:t.width,$height:t.height}))},function(){i.reject()}):"duration"===n&&null!=o.attrGetter("ngfDuration",r)?o.mediaDuration(e).then(function(t){d(i,e,u("ngfDuration",{$file:e,$duration:t}))},function(){i.reject()}):d(i,e,o.getValidationAttr(r,a,n,s,e))):void i.resolve()}),t.all(f).then(function(){i.$ngfValidations.push({name:n,valid:!0})},function(){i.$ngfValidations.push({name:n,valid:!1})})):void 0}i=i||{},i.$ngfValidations=i.$ngfValidations||[],angular.forEach(i.$ngfValidations,function(e){e.valid=!0});var u=function(e,t){return o.attrGetter(e,r,a,t)};if(null==e||0===e.length)return o.emptyPromise(i);e=void 0===e.length?[e]:e.slice(0),s("maxFiles",null,function(e,t,i){return t>n+i}),s("pattern",null,o.validatePattern),s("minSize","size.min",function(e,t){return e.size+.1>=o.translateScalars(t)}),s("maxSize","size.max",function(e,t){return e.size-.1<=o.translateScalars(t)});var c=0;if(s("maxTotalSize",null,function(t,n){return c+=t.size,c>o.translateScalars(n)?(e.splice(0,e.length),!1):!0}),s("validateFn",null,function(e,t){return t===!0||null===t||""===t}),!e.length)return o.emptyPromise(i,i.$ngfValidations);var p=t.defer(),d=[];return d.push(o.happyPromise(l("maxHeight","height.max",/image/,this.imageDimensions,function(e,t){return e.height<=t}))),d.push(o.happyPromise(l("minHeight","height.min",/image/,this.imageDimensions,function(e,t){return e.height>=t}))),d.push(o.happyPromise(l("maxWidth","width.max",/image/,this.imageDimensions,function(e,t){return e.width<=t}))),d.push(o.happyPromise(l("minWidth","width.min",/image/,this.imageDimensions,function(e,t){return e.width>=t}))),d.push(o.happyPromise(l("dimensions",null,/image/,function(e,t){return o.emptyPromise(t)},function(e){return e}))),d.push(o.happyPromise(l("ratio",null,/image/,this.imageDimensions,function(e,t){for(var n=t.toString().split(","),i=!1,r=0;r<n.length;r++)Math.abs(e.width/e.height-o.ratioToFloat(n[r]))<1e-4&&(i=!0);return i}))),d.push(o.happyPromise(l("maxRatio","ratio.max",/image/,this.imageDimensions,function(e,t){return e.width/e.height-o.ratioToFloat(t)<1e-4}))),d.push(o.happyPromise(l("minRatio","ratio.min",/image/,this.imageDimensions,function(e,t){return e.width/e.height-o.ratioToFloat(t)>-1e-4}))),d.push(o.happyPromise(l("maxDuration","duration.max",/audio|video/,this.mediaDuration,function(e,t){return e<=o.translateScalars(t)}))),d.push(o.happyPromise(l("minDuration","duration.min",/audio|video/,this.mediaDuration,function(e,t){return e>=o.translateScalars(t)}))),d.push(o.happyPromise(l("duration",null,/audio|video/,function(e,t){return o.emptyPromise(t)},function(e){return e}))),d.push(o.happyPromise(l("validateAsyncFn",null,null,function(e,t){return t},function(e){return e===!0||null===e||""===e}))),t.all(d).then(function(){p.resolve(i,i.$ngfValidations)})},o.imageDimensions=function(e){if(e.$ngfWidth&&e.$ngfHeight){var i=t.defer();return n(function(){i.resolve({width:e.$ngfWidth,height:e.$ngfHeight})}),i.promise}if(e.$ngfDimensionPromise)return e.$ngfDimensionPromise;var r=t.defer();return n(function(){return 0!==e.type.indexOf("image")?void r.reject("not image"):void o.dataUrl(e).then(function(t){function i(){var t=s[0].clientWidth,n=s[0].clientHeight;s.remove(),e.$ngfWidth=t,e.$ngfHeight=n,r.resolve({width:t,height:n})}function o(){s.remove(),r.reject("load error")}function a(){n(function(){s[0].parentNode&&(s[0].clientWidth?i():l>10?o():a())},1e3)}var s=angular.element("<img>").attr("src",t).css("visibility","hidden").css("position","fixed").css("max-width","none !important").css("max-height","none !important");s.on("load",i),s.on("error",o);var l=0;a(),angular.element(document.getElementsByTagName("body")[0]).append(s)},function(){r.reject("load error")})}),e.$ngfDimensionPromise=r.promise,e.$ngfDimensionPromise["finally"](function(){delete e.$ngfDimensionPromise}),e.$ngfDimensionPromise},o.mediaDuration=function(e){if(e.$ngfDuration){var i=t.defer();return n(function(){i.resolve(e.$ngfDuration)}),i.promise}if(e.$ngfDurationPromise)return e.$ngfDurationPromise;var r=t.defer();return n(function(){return 0!==e.type.indexOf("audio")&&0!==e.type.indexOf("video")?void r.reject("not media"):void o.dataUrl(e).then(function(t){function i(){var t=s[0].duration;e.$ngfDuration=t,s.remove(),r.resolve(t)}function o(){s.remove(),r.reject("load error")}function a(){n(function(){s[0].parentNode&&(s[0].duration?i():l>10?o():a())},1e3)}var s=angular.element(0===e.type.indexOf("audio")?"<audio>":"<video>").attr("src",t).css("visibility","none").css("position","fixed");s.on("loadedmetadata",i),s.on("error",o);var l=0;a(),angular.element(document.body).append(s)},function(){r.reject("load error")})}),e.$ngfDurationPromise=r.promise,e.$ngfDurationPromise["finally"](function(){delete e.$ngfDurationPromise}),e.$ngfDurationPromise},o}]),ngFileUpload.service("UploadResize",["UploadValidate","$q",function(e,t){var n=e,i=function(e,t,n,i,r){var o=r?Math.max(n/e,i/t):Math.min(n/e,i/t);return{width:e*o,height:t*o,marginX:e*o-n,marginY:t*o-i}},r=function(e,r,o,a,s,l,u,c){var p=t.defer(),d=document.createElement("canvas"),f=document.createElement("img");return f.onload=function(){if(null!=c&&c(f.width,f.height)===!1)return void p.reject("resizeIf");try{if(l){var e=n.ratioToFloat(l),t=f.width/f.height;e>t?(r=f.width,o=r/e):(o=f.height,r=o*e)}r||(r=f.width),o||(o=f.height);var h=i(f.width,f.height,r,o,u);d.width=Math.min(h.width,r),d.height=Math.min(h.height,o);var m=d.getContext("2d");
m.drawImage(f,Math.min(0,-h.marginX/2),Math.min(0,-h.marginY/2),h.width,h.height),p.resolve(d.toDataURL(s||"image/WebP",a||.934))}catch(g){p.reject(g)}},f.onerror=function(){p.reject()},f.src=e,p.promise};return n.dataUrltoBlob=function(e,t,n){for(var i=e.split(","),r=i[0].match(/:(.*?);/)[1],o=atob(i[1]),a=o.length,s=new Uint8Array(a);a--;)s[a]=o.charCodeAt(a);var l=new window.Blob([s],{type:r});return l.name=t,l.$ngfOrigSize=n,l},n.isResizeSupported=function(){var e=document.createElement("canvas");return window.atob&&e.getContext&&e.getContext("2d")&&window.Blob},n.isResizeSupported()&&Object.defineProperty(window.Blob.prototype,"name",{get:function(){return this.$ngfName},set:function(e){this.$ngfName=e},configurable:!0}),n.resize=function(e,i,o,a,s,l,u,c,p){if(0!==e.type.indexOf("image"))return n.emptyPromise(e);var d=t.defer();return n.dataUrl(e,!0).then(function(t){r(t,i,o,a,s||e.type,l,u,c).then(function(i){if("image/jpeg"===e.type&&p)try{i=n.restoreExif(t,i)}catch(r){setTimeout(function(){throw r},1)}try{var o=n.dataUrltoBlob(i,e.name,e.size);d.resolve(o)}catch(r){d.reject(r)}},function(t){"resizeIf"===t&&d.resolve(e),d.reject(t)})},function(e){d.reject(e)}),d.promise},n}]),function(){function e(e,n,i,r,o,a,s,l,u,c){function p(){return n.attr("disabled")||v("ngfDropDisabled",e)}function d(t,n){l.updateModel(r,i,e,v("ngfChange")||v("ngfDrop"),t,n)}function f(t,n){if(!l.shouldUpdateOn(t,i,e)||!n)return l.rejectPromise([]);var r=[];n.replace(/<(img src|img [^>]* src) *=\"([^\"]*)\"/gi,function(e,t,n){r.push(n)});var o=[],a=[];if(r.length){angular.forEach(r,function(e){o.push(l.urlToBlob(e).then(function(e){a.push(e)}))});var s=c.defer();return c.all(o).then(function(){s.resolve(a)},function(e){s.reject(e)}),s.promise}return l.emptyPromise()}function h(e,t,n,i){var r=v("ngfDragOverClass",e,{$event:n}),o="dragover";if(angular.isString(r))o=r;else if(r&&(r.delay&&(w=r.delay),r.accept||r.reject)){var a=n.dataTransfer.items;if(null!=a&&a.length)for(var s=r.pattern||v("ngfPattern",e,{$event:n}),u=a.length;u--;){if(!l.validatePattern(a[u],s)){o=r.reject;break}o=r.accept}else o=r.accept}i(o)}function m(t,n,r,o){function a(e,t){var n=c.defer();if(null!=e)if(e.isDirectory){var i=[l.emptyPromise()];if(d){var r={type:"directory"};r.name=r.path=(t||"")+e.name+e.name,f.push(r)}var o=e.createReader(),s=[],m=function(){o.readEntries(function(r){try{r.length?(s=s.concat(Array.prototype.slice.call(r||[],0)),m()):(angular.forEach(s.slice(0),function(n){f.length<=u&&p>=h&&i.push(a(n,(t?t:"")+e.name+"/"))}),c.all(i).then(function(){n.resolve()},function(e){n.reject(e)}))}catch(o){n.reject(o)}},function(e){n.reject(e)})};m()}else e.file(function(e){try{e.path=(t?t:"")+e.name,d&&(e=l.rename(e,e.path)),f.push(e),h+=e.size,n.resolve()}catch(i){n.reject(i)}},function(e){n.reject(e)});return n.promise}var u=l.getValidationAttr(i,e,"maxFiles")||Number.MAX_VALUE,p=l.getValidationAttr(i,e,"maxTotalSize")||Number.MAX_VALUE,d=v("ngfIncludeDir",e),f=[],h=0,m=[l.emptyPromise()];if(t&&t.length>0&&"file"!==s.protocol())for(var g=0;g<t.length;g++){if(t[g].webkitGetAsEntry&&t[g].webkitGetAsEntry()&&t[g].webkitGetAsEntry().isDirectory){var b=t[g].webkitGetAsEntry();if(b.isDirectory&&!r)continue;null!=b&&m.push(a(b))}else{var $=t[g].getAsFile();null!=$&&(f.push($),h+=$.size)}if(f.length>u||h>p||!o&&f.length>0)break}else if(null!=n)for(var y=0;y<n.length;y++){var w=n.item(y);if((w.type||w.size>0)&&(f.push(w),h+=w.size),f.length>u||h>p||!o&&f.length>0)break}var x=c.defer();return c.all(m).then(function(){if(o||d||!f.length)x.resolve(f);else{for(var e=0;f[e]&&"directory"===f[e].type;)e++;x.resolve([f[e]])}},function(e){x.reject(e)}),x.promise}var g=t(),v=function(e,t,n){return l.attrGetter(e,i,t,n)};if(v("dropAvailable")&&a(function(){e[v("dropAvailable")]?e[v("dropAvailable")].value=g:e[v("dropAvailable")]=g}),!g)return void(v("ngfHideOnDropNotAvailable",e)===!0&&n.css("display","none"));null==v("ngfSelect")&&l.registerModelChangeValidator(r,i,e);var b,$=null,y=o(v("ngfStopPropagation")),w=1;n[0].addEventListener("dragover",function(t){if(!p()&&l.shouldUpdateOn("drop",i,e)){if(t.preventDefault(),y(e)&&t.stopPropagation(),navigator.userAgent.indexOf("Chrome")>-1){var r=t.dataTransfer.effectAllowed;t.dataTransfer.dropEffect="move"===r||"linkMove"===r?"move":"copy"}a.cancel($),b||(b="C",h(e,i,t,function(i){b=i,n.addClass(b),v("ngfDrag",e,{$isDragging:!0,$class:b,$event:t})}))}},!1),n[0].addEventListener("dragenter",function(t){!p()&&l.shouldUpdateOn("drop",i,e)&&(t.preventDefault(),y(e)&&t.stopPropagation())},!1),n[0].addEventListener("dragleave",function(t){!p()&&l.shouldUpdateOn("drop",i,e)&&(t.preventDefault(),y(e)&&t.stopPropagation(),$=a(function(){b&&n.removeClass(b),b=null,v("ngfDrag",e,{$isDragging:!1,$event:t})},w||100))},!1),n[0].addEventListener("drop",function(t){if(!p()&&l.shouldUpdateOn("drop",i,e)){t.preventDefault(),y(e)&&t.stopPropagation(),b&&n.removeClass(b),b=null;var r,o=t.dataTransfer.items;try{r=t.dataTransfer&&t.dataTransfer.getData&&t.dataTransfer.getData("text/html")}catch(a){}m(o,t.dataTransfer.files,v("ngfAllowDir",e)!==!1,v("multiple")||v("ngfMultiple",e)).then(function(e){e.length?d(e,t):f("dropUrl",r).then(function(e){d(e,t)})})}},!1),n[0].addEventListener("paste",function(t){if(navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&v("ngfEnableFirefoxPaste",e)&&t.preventDefault(),!p()&&l.shouldUpdateOn("paste",i,e)){var n=[],r=t.clipboardData||t.originalEvent.clipboardData;if(r&&r.items)for(var o=0;o<r.items.length;o++)-1!==r.items[o].type.indexOf("image")&&n.push(r.items[o].getAsFile());n.length?d(n,t):f("pasteUrl",r).then(function(e){d(e,t)})}},!1),navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&v("ngfEnableFirefoxPaste",e)&&(n.attr("contenteditable",!0),n.on("keypress",function(e){e.metaKey||e.ctrlKey||e.preventDefault()}))}function t(){var e=document.createElement("div");return"draggable"in e&&"ondrop"in e&&!/Edge\/12./i.test(navigator.userAgent)}ngFileUpload.directive("ngfDrop",["$parse","$timeout","$location","Upload","$http","$q",function(t,n,i,r,o,a){return{restrict:"AEC",require:"?ngModel",link:function(s,l,u,c){e(s,l,u,c,t,n,i,r,o,a)}}}]),ngFileUpload.directive("ngfNoFileDrop",function(){return function(e,n){t()&&n.css("display","none")}}),ngFileUpload.directive("ngfDropAvailable",["$parse","$timeout","Upload",function(e,n,i){return function(r,o,a){if(t()){var s=e(i.attrGetter("ngfDropAvailable",a));n(function(){s(r),s.assign&&s.assign(r,!0)})}}}])}(),ngFileUpload.service("UploadExif",["UploadResize","$q",function(e,t){function n(e,t,n,i){switch(t){case 2:return e.transform(-1,0,0,1,n,0);case 3:return e.transform(-1,0,0,-1,n,i);case 4:return e.transform(1,0,0,-1,0,i);case 5:return e.transform(0,1,1,0,0,0);case 6:return e.transform(0,1,-1,0,i,0);case 7:return e.transform(0,-1,-1,0,i,n);case 8:return e.transform(0,-1,1,0,0,n)}}function i(e){for(var t="",n=new Uint8Array(e),i=n.byteLength,r=0;i>r;r++)t+=String.fromCharCode(n[r]);return window.btoa(t)}var r=e;return r.isExifSupported=function(){return window.FileReader&&(new FileReader).readAsArrayBuffer&&r.isResizeSupported()},r.readOrientation=function(e){var n=t.defer(),i=new FileReader,r=e.slice?e.slice(0,65536):e;return i.readAsArrayBuffer(r),i.onerror=function(e){return n.reject(e)},i.onload=function(e){var t={orientation:1},i=new DataView(this.result);if(65496!==i.getUint16(0,!1))return n.resolve(t);for(var r=i.byteLength,o=2;r>o;){var a=i.getUint16(o,!1);if(o+=2,65505===a){if(1165519206!==i.getUint32(o+=2,!1))return n.resolve(t);var s=18761===i.getUint16(o+=6,!1);o+=i.getUint32(o+4,s);var l=i.getUint16(o,s);o+=2;for(var u=0;l>u;u++)if(274===i.getUint16(o+12*u,s)){var c=i.getUint16(o+12*u+8,s);return c>=2&&8>=c&&(i.setUint16(o+12*u+8,1,s),t.fixedArrayBuffer=e.target.result),t.orientation=c,n.resolve(t)}}else{if(65280!==(65280&a))break;o+=i.getUint16(o,!1)}}return n.resolve(t)},n.promise},r.applyExifRotation=function(e){if(0!==e.type.indexOf("image/jpeg"))return r.emptyPromise(e);var o=t.defer();return r.readOrientation(e).then(function(t){return t.orientation<2||t.orientation>8?o.resolve(e):void r.dataUrl(e,!0).then(function(a){var s=document.createElement("canvas"),l=document.createElement("img");l.onload=function(){try{s.width=t.orientation>4?l.height:l.width,s.height=t.orientation>4?l.width:l.height;var a=s.getContext("2d");n(a,t.orientation,l.width,l.height),a.drawImage(l,0,0);var u=s.toDataURL(e.type||"image/WebP",.934);u=r.restoreExif(i(t.fixedArrayBuffer),u);var c=r.dataUrltoBlob(u,e.name);o.resolve(c)}catch(p){return o.reject(p)}},l.onerror=function(){o.reject()},l.src=a},function(e){o.reject(e)})},function(e){o.reject(e)}),o.promise},r.restoreExif=function(e,t){var n={};return n.KEY_STR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n.encode64=function(e){var t,n,i,r,o,a="",s="",l="",u=0;do t=e[u++],n=e[u++],s=e[u++],i=t>>2,r=(3&t)<<4|n>>4,o=(15&n)<<2|s>>6,l=63&s,isNaN(n)?o=l=64:isNaN(s)&&(l=64),a=a+this.KEY_STR.charAt(i)+this.KEY_STR.charAt(r)+this.KEY_STR.charAt(o)+this.KEY_STR.charAt(l),t=n=s="",i=r=o=l="";while(u<e.length);return a},n.restore=function(e,t){e.match("data:image/jpeg;base64,")&&(e=e.replace("data:image/jpeg;base64,",""));var n=this.decode64(e),i=this.slice2Segments(n),r=this.exifManipulation(t,i);return"data:image/jpeg;base64,"+this.encode64(r)},n.exifManipulation=function(e,t){var n=this.getExifArray(t),i=this.insertExif(e,n);return new Uint8Array(i)},n.getExifArray=function(e){for(var t,n=0;n<e.length;n++)if(t=e[n],255===t[0]&225===t[1])return t;return[]},n.insertExif=function(e,t){var n=e.replace("data:image/jpeg;base64,",""),i=this.decode64(n),r=i.indexOf(255,3),o=i.slice(0,r),a=i.slice(r),s=o;return s=s.concat(t),s=s.concat(a)},n.slice2Segments=function(e){for(var t=0,n=[];!(255===e[t]&218===e[t+1]);){if(255===e[t]&216===e[t+1])t+=2;else{var i=256*e[t+2]+e[t+3],r=t+i+2,o=e.slice(t,r);n.push(o),t=r}if(t>e.length)break}return n},n.decode64=function(e){var t,n,i,r,o,a="",s="",l=0,u=[],c=/[^A-Za-z0-9\+\/\=]/g;c.exec(e)&&console.log("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, NaNExpect errors in decoding."),e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");do i=this.KEY_STR.indexOf(e.charAt(l++)),r=this.KEY_STR.indexOf(e.charAt(l++)),o=this.KEY_STR.indexOf(e.charAt(l++)),s=this.KEY_STR.indexOf(e.charAt(l++)),t=i<<2|r>>4,n=(15&r)<<4|o>>2,a=(3&o)<<6|s,u.push(t),64!==o&&u.push(n),64!==s&&u.push(a),t=n=a="",i=r=o=s="";while(l<e.length);return u},n.restore(e,t)},r}]),!function(){function e(e,t){window.XMLHttpRequest.prototype[e]=t(window.XMLHttpRequest.prototype[e])}function t(e,t,n){try{Object.defineProperty(e,t,{get:n})}catch(i){}}if(window.FileAPI||(window.FileAPI={}),!window.XMLHttpRequest)throw"AJAX is not supported. XMLHttpRequest is not defined.";if(FileAPI.shouldLoad=!window.FormData||FileAPI.forceLoad,FileAPI.shouldLoad){var n=function(e){if(!e.__listeners){e.upload||(e.upload={}),e.__listeners=[];var t=e.upload.addEventListener;e.upload.addEventListener=function(n,i){e.__listeners[n]=i,t&&t.apply(this,arguments)}}};e("open",function(e){return function(t,i,r){n(this),this.__url=i;try{e.apply(this,[t,i,r])}catch(o){o.message.indexOf("Access is denied")>-1&&(this.__origError=o,e.apply(this,[t,"_fix_for_ie_crossdomain__",r]))}}}),e("getResponseHeader",function(e){return function(t){return this.__fileApiXHR&&this.__fileApiXHR.getResponseHeader?this.__fileApiXHR.getResponseHeader(t):null==e?null:e.apply(this,[t])}}),e("getAllResponseHeaders",function(e){return function(){return this.__fileApiXHR&&this.__fileApiXHR.getAllResponseHeaders?this.__fileApiXHR.getAllResponseHeaders():null==e?null:e.apply(this)}}),e("abort",function(e){return function(){return this.__fileApiXHR&&this.__fileApiXHR.abort?this.__fileApiXHR.abort():null==e?null:e.apply(this)}}),e("setRequestHeader",function(e){return function(t,i){if("__setXHR_"===t){n(this);var r=i(this);r instanceof Function&&r(this)}else this.__requestHeaders=this.__requestHeaders||{},this.__requestHeaders[t]=i,e.apply(this,arguments)}}),e("send",function(e){return function(){var n=this;if(arguments[0]&&arguments[0].__isFileAPIShim){var i=arguments[0],r={url:n.__url,jsonp:!1,cache:!0,complete:function(e,i){e&&angular.isString(e)&&-1!==e.indexOf("#2174")&&(e=null),n.__completed=!0,!e&&n.__listeners.load&&n.__listeners.load({type:"load",loaded:n.__loaded,total:n.__total,target:n,lengthComputable:!0}),!e&&n.__listeners.loadend&&n.__listeners.loadend({type:"loadend",loaded:n.__loaded,total:n.__total,target:n,lengthComputable:!0}),"abort"===e&&n.__listeners.abort&&n.__listeners.abort({type:"abort",loaded:n.__loaded,total:n.__total,target:n,lengthComputable:!0}),void 0!==i.status&&t(n,"status",function(){return 0===i.status&&e&&"abort"!==e?500:i.status}),void 0!==i.statusText&&t(n,"statusText",function(){return i.statusText}),t(n,"readyState",function(){return 4}),void 0!==i.response&&t(n,"response",function(){return i.response});var r=i.responseText||(e&&0===i.status&&"abort"!==e?e:void 0);t(n,"responseText",function(){return r}),t(n,"response",function(){return r}),e&&t(n,"err",function(){return e}),n.__fileApiXHR=i,n.onreadystatechange&&n.onreadystatechange(),n.onload&&n.onload()},progress:function(e){if(e.target=n,n.__listeners.progress&&n.__listeners.progress(e),n.__total=e.total,n.__loaded=e.loaded,e.total===e.loaded){var t=this;setTimeout(function(){n.__completed||(n.getAllResponseHeaders=function(){},t.complete(null,{status:204,statusText:"No Content"}))},FileAPI.noContentTimeout||1e4)}},headers:n.__requestHeaders};r.data={},r.files={};for(var o=0;o<i.data.length;o++){var a=i.data[o];null!=a.val&&null!=a.val.name&&null!=a.val.size&&null!=a.val.type?r.files[a.key]=a.val:r.data[a.key]=a.val}setTimeout(function(){if(!FileAPI.hasFlash)throw'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';n.__fileApiXHR=FileAPI.upload(r)},1)}else{if(this.__origError)throw this.__origError;e.apply(n,arguments)}}}),window.XMLHttpRequest.__isFileAPIShim=!0,window.FormData=FormData=function(){return{append:function(e,t,n){t.__isFileAPIBlobShim&&(t=t.data[0]),this.data.push({key:e,val:t,name:n})},data:[],__isFileAPIShim:!0}},window.Blob=Blob=function(e){return{data:e,__isFileAPIBlobShim:!0}}}}(),function(){function e(e){return"input"===e[0].tagName.toLowerCase()&&e.attr("type")&&"file"===e.attr("type").toLowerCase()}function t(){try{var e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash");if(e)return!0}catch(t){if(void 0!==navigator.mimeTypes["application/x-shockwave-flash"])return!0}return!1}function n(e){var t=0,n=0;if(window.jQuery)return jQuery(e).offset();if(e.offsetParent)do t+=e.offsetLeft-e.scrollLeft,n+=e.offsetTop-e.scrollTop,e=e.offsetParent;while(e);return{left:t,top:n}}if(FileAPI.shouldLoad){if(FileAPI.hasFlash=t(),FileAPI.forceLoad&&(FileAPI.html5=!1),!FileAPI.upload){var i,r,o,a,s,l=document.createElement("script"),u=document.getElementsByTagName("script");if(window.FileAPI.jsUrl)i=window.FileAPI.jsUrl;else if(window.FileAPI.jsPath)r=window.FileAPI.jsPath;else for(o=0;o<u.length;o++)if(s=u[o].src,a=s.search(/\/ng\-file\-upload[\-a-zA-z0-9\.]*\.js/),a>-1){r=s.substring(0,a+1);break}null==FileAPI.staticPath&&(FileAPI.staticPath=r),l.setAttribute("src",i||r+"FileAPI.min.js"),document.getElementsByTagName("head")[0].appendChild(l)}FileAPI.ngfFixIE=function(i,r,o){if(!t())throw'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';var a=function(){var t=r.parent();i.attr("disabled")?t&&t.removeClass("js-fileapi-wrapper"):(r.attr("__ngf_flash_")||(r.unbind("change"),r.unbind("click"),r.bind("change",function(e){s.apply(this,[e]),o.apply(this,[e])}),r.attr("__ngf_flash_","true")),t.addClass("js-fileapi-wrapper"),e(i)||(t.css("position","absolute").css("top",n(i[0]).top+"px").css("left",n(i[0]).left+"px").css("width",i[0].offsetWidth+"px").css("height",i[0].offsetHeight+"px").css("filter","alpha(opacity=0)").css("display",i.css("display")).css("overflow","hidden").css("z-index","900000").css("visibility","visible"),r.css("width",i[0].offsetWidth+"px").css("height",i[0].offsetHeight+"px").css("position","absolute").css("top","0px").css("left","0px")))};i.bind("mouseenter",a);var s=function(e){for(var t=FileAPI.getFiles(e),n=0;n<t.length;n++)void 0===t[n].size&&(t[n].size=0),void 0===t[n].name&&(t[n].name="file"),void 0===t[n].type&&(t[n].type="undefined");e.target||(e.target={}),e.target.files=t,e.target.files!==t&&(e.__files_=t),(e.__files_||e.target.files).item=function(t){return(e.__files_||e.target.files)[t]||null}}},FileAPI.disableFileInput=function(e,t){t?e.removeClass("js-fileapi-wrapper"):e.addClass("js-fileapi-wrapper")}}}(),window.FileReader||(window.FileReader=function(){var e=this,t=!1;this.listeners={},this.addEventListener=function(t,n){e.listeners[t]=e.listeners[t]||[],e.listeners[t].push(n)},this.removeEventListener=function(t,n){e.listeners[t]&&e.listeners[t].splice(e.listeners[t].indexOf(n),1)},this.dispatchEvent=function(t){var n=e.listeners[t.type];if(n)for(var i=0;i<n.length;i++)n[i].call(e,t)},this.onabort=this.onerror=this.onload=this.onloadstart=this.onloadend=this.onprogress=null;var n=function(t,n){var i={type:t,target:e,loaded:n.loaded,total:n.total,error:n.error};return null!=n.result&&(i.target.result=n.result),i},i=function(i){t||(t=!0,e.onloadstart&&e.onloadstart(n("loadstart",i)));var r;"load"===i.type?(e.onloadend&&e.onloadend(n("loadend",i)),r=n("load",i),e.onload&&e.onload(r),e.dispatchEvent(r)):"progress"===i.type?(r=n("progress",i),e.onprogress&&e.onprogress(r),e.dispatchEvent(r)):(r=n("error",i),e.onerror&&e.onerror(r),e.dispatchEvent(r))};this.readAsDataURL=function(e){FileAPI.readAsDataURL(e,i)},this.readAsText=function(e){FileAPI.readAsText(e,i)}}),!function(e,t){"use strict";"function"==typeof define&&define.amd?define(["angular"],t):"object"==typeof module&&module.exports?module.exports=t(require("angular")):t(e.angular)}(this,function(e){"use strict";var t=e.module("rzModule",[]).factory("RzSliderOptions",function(){var t={floor:0,ceil:null,step:1,precision:0,minRange:null,maxRange:null,minLimit:null,maxLimit:null,id:null,translate:null,getLegend:null,stepsArray:null,draggableRange:!1,draggableRangeOnly:!1,showSelectionBar:!1,showSelectionBarEnd:!1,showSelectionBarFromValue:null,hidePointerLabels:!1,hideLimitLabels:!1,readOnly:!1,disabled:!1,interval:350,showTicks:!1,showTicksValues:!1,ticksTooltip:null,ticksValuesTooltip:null,vertical:!1,getSelectionBarColor:null,getPointerColor:null,keyboardSupport:!0,scale:1,enforceStep:!0,enforceRange:!1,noSwitching:!1,onlyBindHandles:!1,onStart:null,onChange:null,onEnd:null,rightToLeft:!1,boundPointerLabels:!0},n={},i={};return i.options=function(t){e.extend(n,t)},i.getOptions=function(i){return e.extend({},t,n,i)},i}).factory("rzThrottle",["$timeout",function(e){return function(t,n,i){var r,o,a,s=Date.now||function(){return(new Date).getTime()},l=null,u=0;i=i||{};var c=function(){u=s(),l=null,a=t.apply(r,o),r=o=null};return function(){var p=s(),d=n-(p-u);return r=this,o=arguments,0>=d?(e.cancel(l),l=null,u=p,a=t.apply(r,o),r=o=null):l||i.trailing===!1||(l=e(c,d)),a}}}]).factory("RzSlider",["$timeout","$document","$window","$compile","RzSliderOptions","rzThrottle",function(t,n,i,r,o,a){var s=function(e,t){this.scope=e,this.sliderElem=t,this.range=void 0!==this.scope.rzSliderModel&&void 0!==this.scope.rzSliderHigh,this.dragging={active:!1,value:0,difference:0,offset:0,lowLimit:0,highLimit:0},this.positionProperty="left",this.dimensionProperty="width",this.handleHalfDim=0,this.maxPos=0,this.precision=0,this.step=1,this.tracking="",this.minValue=0,this.maxValue=0,this.valueRange=0,this.intermediateTicks=!1,this.initHasRun=!1,this.internalChange=!1,this.fullBar=null,this.selBar=null,this.minH=null,this.maxH=null,this.flrLab=null,this.ceilLab=null,this.minLab=null,this.maxLab=null,this.cmbLab=null,this.ticks=null,this.init()};return s.prototype={init:function(){var t,n,r=this,o=function(){r.calcViewDimensions()};this.applyOptions(),this.initElemHandles(),this.manageElementsStyle(),this.setDisabledState(),this.calcViewDimensions(),this.setMinAndMax(),this.addAccessibility(),this.updateCeilLab(),this.updateFloorLab(),this.initHandles(),this.manageEventsBindings(),this.scope.$on("reCalcViewDimensions",o),e.element(i).on("resize",o),this.initHasRun=!0,t=a(function(){r.onLowHandleChange()},r.options.interval),n=a(function(){r.onHighHandleChange()},r.options.interval),this.scope.$on("rzSliderForceRender",function(){r.resetLabelsValue(),t(),r.range&&n(),r.resetSlider()}),this.scope.$watch("rzSliderOptions()",function(e,t){e!==t&&(r.applyOptions(),r.resetSlider())},!0),this.scope.$watch("rzSliderModel",function(e,n){r.internalChange||e!==n&&t()}),this.scope.$watch("rzSliderHigh",function(e,t){r.internalChange||e!==t&&(null!=e&&n(),(r.range&&null==e||!r.range&&null!=e)&&(r.applyOptions(),r.resetSlider()))}),this.scope.$on("$destroy",function(){r.unbindEvents(),e.element(i).off("resize",o)})},onLowHandleChange:function(){this.setMinAndMax(),this.updateLowHandle(this.valueToOffset(this.scope.rzSliderModel)),this.updateSelectionBar(),this.updateTicksScale(),this.updateAriaAttributes(),this.range&&this.updateCmbLabel()},onHighHandleChange:function(){this.setMinAndMax(),this.updateHighHandle(this.valueToOffset(this.scope.rzSliderHigh)),this.updateSelectionBar(),this.updateTicksScale(),this.updateCmbLabel(),this.updateAriaAttributes()},applyOptions:function(){var t;t=this.scope.rzSliderOptions?this.scope.rzSliderOptions():{},this.options=o.getOptions(t),this.options.step<=0&&(this.options.step=1),this.range=void 0!==this.scope.rzSliderModel&&void 0!==this.scope.rzSliderHigh,this.options.draggableRange=this.range&&this.options.draggableRange,this.options.draggableRangeOnly=this.range&&this.options.draggableRangeOnly,this.options.draggableRangeOnly&&(this.options.draggableRange=!0),this.options.showTicks=this.options.showTicks||this.options.showTicksValues,this.scope.showTicks=this.options.showTicks,e.isNumber(this.options.showTicks)&&(this.intermediateTicks=!0),this.options.showSelectionBar=this.options.showSelectionBar||this.options.showSelectionBarEnd||null!==this.options.showSelectionBarFromValue,this.options.stepsArray?this.parseStepsArray():(this.options.translate?this.customTrFn=this.options.translate:this.customTrFn=function(e){return String(e)},this.options.getLegend&&(this.getLegend=this.options.getLegend)),this.options.vertical&&(this.positionProperty="bottom",this.dimensionProperty="height")},parseStepsArray:function(){this.options.floor=0,this.options.ceil=this.options.stepsArray.length-1,this.options.step=1,this.options.translate?this.customTrFn=this.options.translate:this.customTrFn=function(t){var n=this.options.stepsArray[t];return e.isObject(n)?n.value:n},this.getLegend=function(t){var n=this.options.stepsArray[t];return e.isObject(n)?n.legend:null}},resetSlider:function(){this.manageElementsStyle(),this.addAccessibility(),this.setMinAndMax(),this.updateCeilLab(),this.updateFloorLab(),this.unbindEvents(),this.manageEventsBindings(),this.setDisabledState(),this.calcViewDimensions()},initElemHandles:function(){e.forEach(this.sliderElem.children(),function(t,n){var i=e.element(t);switch(n){case 0:this.fullBar=i;break;case 1:this.selBar=i;break;case 2:this.minH=i;break;case 3:this.maxH=i;break;case 4:this.flrLab=i;break;case 5:this.ceilLab=i;break;case 6:this.minLab=i;break;case 7:this.maxLab=i;break;case 8:this.cmbLab=i;break;case 9:this.ticks=i}},this),this.selBar.rzsp=0,this.minH.rzsp=0,this.maxH.rzsp=0,this.flrLab.rzsp=0,this.ceilLab.rzsp=0,this.minLab.rzsp=0,this.maxLab.rzsp=0,this.cmbLab.rzsp=0},manageElementsStyle:function(){this.range?this.maxH.css("display",""):this.maxH.css("display","none"),this.alwaysHide(this.flrLab,this.options.showTicksValues||this.options.hideLimitLabels),this.alwaysHide(this.ceilLab,this.options.showTicksValues||this.options.hideLimitLabels);var e=this.options.showTicksValues&&!this.intermediateTicks;this.alwaysHide(this.minLab,e||this.options.hidePointerLabels),this.alwaysHide(this.maxLab,e||!this.range||this.options.hidePointerLabels),this.alwaysHide(this.cmbLab,e||!this.range||this.options.hidePointerLabels),this.alwaysHide(this.selBar,!this.range&&!this.options.showSelectionBar),this.options.vertical&&this.sliderElem.addClass("rz-vertical"),this.options.draggableRange?this.selBar.addClass("rz-draggable"):this.selBar.removeClass("rz-draggable"),this.intermediateTicks&&this.options.showTicksValues&&this.ticks.addClass("rz-ticks-values-under")},alwaysHide:function(e,t){e.rzAlwaysHide=t,t?this.hideEl(e):this.showEl(e)},manageEventsBindings:function(){this.options.disabled||this.options.readOnly?this.unbindEvents():this.bindEvents()},setDisabledState:function(){this.options.disabled?this.sliderElem.attr("disabled","disabled"):this.sliderElem.attr("disabled",null)},resetLabelsValue:function(){this.minLab.rzsv=void 0,this.maxLab.rzsv=void 0},initHandles:function(){this.updateLowHandle(this.valueToOffset(this.scope.rzSliderModel)),this.range&&this.updateHighHandle(this.valueToOffset(this.scope.rzSliderHigh)),this.updateSelectionBar(),this.range&&this.updateCmbLabel(),this.updateTicksScale()},translateFn:function(e,t,n,i){i=void 0===i?!0:i;var r=String(i?this.customTrFn(e,this.options.id,n):e),o=!1;(void 0===t.rzsv||t.rzsv.length!==r.length||t.rzsv.length>0&&0===t.rzsd)&&(o=!0,t.rzsv=r),t.html(r),o&&this.getDimension(t)},setMinAndMax:function(){this.step=+this.options.step,this.precision=+this.options.precision,this.minValue=this.options.floor,this.options.enforceStep&&(this.scope.rzSliderModel=this.roundStep(this.scope.rzSliderModel),this.range&&(this.scope.rzSliderHigh=this.roundStep(this.scope.rzSliderHigh))),null!=this.options.ceil?this.maxValue=this.options.ceil:this.maxValue=this.options.ceil=this.range?this.scope.rzSliderHigh:this.scope.rzSliderModel,this.options.enforceRange&&(this.scope.rzSliderModel=this.sanitizeValue(this.scope.rzSliderModel),this.range&&(this.scope.rzSliderHigh=this.sanitizeValue(this.scope.rzSliderHigh))),this.valueRange=this.maxValue-this.minValue},addAccessibility:function(){this.minH.attr("role","slider"),this.updateAriaAttributes(),!this.options.keyboardSupport||this.options.readOnly||this.options.disabled?this.minH.attr("tabindex",""):this.minH.attr("tabindex","0"),this.options.vertical&&this.minH.attr("aria-orientation","vertical"),this.range&&(this.maxH.attr("role","slider"),!this.options.keyboardSupport||this.options.readOnly||this.options.disabled?this.maxH.attr("tabindex",""):this.maxH.attr("tabindex","0"),this.options.vertical&&this.maxH.attr("aria-orientation","vertical"))},updateAriaAttributes:function(){this.minH.attr({"aria-valuenow":this.scope.rzSliderModel,"aria-valuetext":this.customTrFn(this.scope.rzSliderModel,this.options.id,"model"),"aria-valuemin":this.minValue,"aria-valuemax":this.maxValue}),this.range&&this.maxH.attr({"aria-valuenow":this.scope.rzSliderHigh,"aria-valuetext":this.customTrFn(this.scope.rzSliderHigh,this.options.id,"high"),"aria-valuemin":this.minValue,"aria-valuemax":this.maxValue})},calcViewDimensions:function(){var e=this.getDimension(this.minH);this.handleHalfDim=e/2,this.barDimension=this.getDimension(this.fullBar),this.maxPos=this.barDimension-e,this.getDimension(this.sliderElem),this.sliderElem.rzsp=this.sliderElem[0].getBoundingClientRect()[this.positionProperty],this.initHasRun&&(this.updateFloorLab(),this.updateCeilLab(),this.initHandles())},updateTicksScale:function(){if(this.options.showTicks){var e=this.step;this.intermediateTicks&&(e=this.options.showTicks);var t=Math.round((this.maxValue-this.minValue)/e)+1;this.scope.ticks=[];for(var n=0;t>n;n++){var i=this.roundStep(this.minValue+n*e),r={selected:this.isTickSelected(i)};if(r.selected&&this.options.getSelectionBarColor&&(r.style={"background-color":this.getSelectionBarColor()}),this.options.ticksTooltip&&(r.tooltip=this.options.ticksTooltip(i),r.tooltipPlacement=this.options.vertical?"right":"top"),this.options.showTicksValues&&(r.value=this.getDisplayValue(i,"tick-value"),this.options.ticksValuesTooltip&&(r.valueTooltip=this.options.ticksValuesTooltip(i),r.valueTooltipPlacement=this.options.vertical?"right":"top")),this.getLegend){var o=this.getLegend(i,this.options.id);o&&(r.legend=o)}this.options.rightToLeft?this.scope.ticks.unshift(r):this.scope.ticks.push(r)}}},isTickSelected:function(e){if(!this.range)if(null!==this.options.showSelectionBarFromValue){var t=this.options.showSelectionBarFromValue;if(this.scope.rzSliderModel>t&&e>=t&&e<=this.scope.rzSliderModel)return!0;if(this.scope.rzSliderModel<t&&t>=e&&e>=this.scope.rzSliderModel)return!0}else if(this.options.showSelectionBarEnd){if(e>=this.scope.rzSliderModel)return!0}else if(this.options.showSelectionBar&&e<=this.scope.rzSliderModel)return!0;return!!(this.range&&e>=this.scope.rzSliderModel&&e<=this.scope.rzSliderHigh)},updateFloorLab:function(){this.translateFn(this.minValue,this.flrLab,"floor"),this.getDimension(this.flrLab);var e=this.options.rightToLeft?this.barDimension-this.flrLab.rzsd:0;this.setPosition(this.flrLab,e)},updateCeilLab:function(){this.translateFn(this.maxValue,this.ceilLab,"ceil"),this.getDimension(this.ceilLab);var e=this.options.rightToLeft?0:this.barDimension-this.ceilLab.rzsd;this.setPosition(this.ceilLab,e)},updateHandles:function(e,t){"rzSliderModel"===e?this.updateLowHandle(t):this.updateHighHandle(t),this.updateSelectionBar(),this.updateTicksScale(),this.range&&this.updateCmbLabel()},getHandleLabelPos:function(e,t){var n=this[e].rzsd,i=t-n/2+this.handleHalfDim,r=this.barDimension-n;return this.options.boundPointerLabels?this.options.rightToLeft&&"minLab"===e||!this.options.rightToLeft&&"maxLab"===e?Math.min(i,r):Math.min(Math.max(i,0),r):i},updateLowHandle:function(e){if(this.setPosition(this.minH,e),this.translateFn(this.scope.rzSliderModel,this.minLab,"model"),this.setPosition(this.minLab,this.getHandleLabelPos("minLab",e)),this.options.getPointerColor){var t=this.getPointerColor("min");this.scope.minPointerStyle={backgroundColor:t}}this.shFloorCeil()},updateHighHandle:function(e){if(this.setPosition(this.maxH,e),this.translateFn(this.scope.rzSliderHigh,this.maxLab,"high"),this.setPosition(this.maxLab,this.getHandleLabelPos("maxLab",e)),this.options.getPointerColor){var t=this.getPointerColor("max");this.scope.maxPointerStyle={backgroundColor:t}}this.shFloorCeil()},shFloorCeil:function(){var e=!1,t=!1,n=this.options.rightToLeft,i=this.flrLab.rzsp,r=this.flrLab.rzsd,o=this.minLab.rzsp,a=this.minLab.rzsd,s=this.maxLab.rzsp,l=this.maxLab.rzsd,u=this.ceilLab.rzsp,c=this.handleHalfDim,p=n?o+a>=i-r-5:i+r+5>=o,d=n?u+c+10>=o-a:o+a>=u-c-10,f=n?s>=i-r-c:i+r+c>=s,h=n?u+10>=s-l:s+l>=u-10;p?(e=!0,this.hideEl(this.flrLab)):(e=!1,this.showEl(this.flrLab)),d?(t=!0,this.hideEl(this.ceilLab)):(t=!1,this.showEl(this.ceilLab)),this.range&&(h?this.hideEl(this.ceilLab):t||this.showEl(this.ceilLab),f?this.hideEl(this.flrLab):e||this.showEl(this.flrLab))},updateSelectionBar:function(){var e=0,t=0,n=this.options.rightToLeft?!this.options.showSelectionBarEnd:this.options.showSelectionBarEnd,i=this.options.rightToLeft?this.maxH.rzsp+this.handleHalfDim:this.minH.rzsp+this.handleHalfDim;if(this.range)t=Math.abs(this.maxH.rzsp-this.minH.rzsp),e=i;else if(null!==this.options.showSelectionBarFromValue){var r=this.options.showSelectionBarFromValue,o=this.valueToOffset(r),a=this.options.rightToLeft?this.scope.rzSliderModel<=r:this.scope.rzSliderModel>r;a?(t=this.minH.rzsp-o,e=o+this.handleHalfDim):(t=o-this.minH.rzsp,e=this.minH.rzsp+this.handleHalfDim)}else n?(t=Math.abs(this.maxPos-this.minH.rzsp)+this.handleHalfDim,e=this.minH.rzsp+this.handleHalfDim):(t=Math.abs(this.maxH.rzsp-this.minH.rzsp)+this.handleHalfDim,e=0);if(this.setDimension(this.selBar,t),this.setPosition(this.selBar,e),this.options.getSelectionBarColor){var s=this.getSelectionBarColor();this.scope.barStyle={backgroundColor:s}}},getSelectionBarColor:function(){return this.range?this.options.getSelectionBarColor(this.scope.rzSliderModel,this.scope.rzSliderHigh):this.options.getSelectionBarColor(this.scope.rzSliderModel);
},getPointerColor:function(e){return"max"===e?this.options.getPointerColor(this.scope.rzSliderHigh,e):this.options.getPointerColor(this.scope.rzSliderModel,e)},updateCmbLabel:function(){var e=null;if(e=this.options.rightToLeft?this.minLab.rzsp-this.minLab.rzsd-10<=this.maxLab.rzsp:this.minLab.rzsp+this.minLab.rzsd+10>=this.maxLab.rzsp){var t=this.getDisplayValue(this.scope.rzSliderModel,"model"),n=this.getDisplayValue(this.scope.rzSliderHigh,"high"),i="";i=t===n?t:this.options.rightToLeft?n+" - "+t:t+" - "+n,this.translateFn(i,this.cmbLab,"cmb",!1);var r=this.options.boundPointerLabels?Math.min(Math.max(this.selBar.rzsp+this.selBar.rzsd/2-this.cmbLab.rzsd/2,0),this.barDimension-this.cmbLab.rzsd):this.selBar.rzsp+this.selBar.rzsd/2-this.cmbLab.rzsd/2;this.setPosition(this.cmbLab,r),this.hideEl(this.minLab),this.hideEl(this.maxLab),this.showEl(this.cmbLab)}else this.showEl(this.maxLab),this.showEl(this.minLab),this.hideEl(this.cmbLab)},getDisplayValue:function(e,t){return this.customTrFn(e,this.options.id,t)},roundStep:function(e,t){var n=t?t:this.step,i=parseFloat((e-this.minValue)/n).toPrecision(12);i=Math.round(+i)*n;var r=(this.minValue+i).toFixed(this.precision);return+r},hideEl:function(e){return e.css({opacity:0})},showEl:function(e){return e.rzAlwaysHide?e:e.css({opacity:1})},setPosition:function(e,t){e.rzsp=t;var n={};return n[this.positionProperty]=t+"px",e.css(n),t},getDimension:function(e){var t=e[0].getBoundingClientRect();return this.options.vertical?e.rzsd=(t.bottom-t.top)*this.options.scale:e.rzsd=(t.right-t.left)*this.options.scale,e.rzsd},setDimension:function(e,t){e.rzsd=t;var n={};return n[this.dimensionProperty]=t+"px",e.css(n),t},valueToOffset:function(e){return this.options.rightToLeft?(this.maxValue-this.sanitizeValue(e))*this.maxPos/this.valueRange||0:(this.sanitizeValue(e)-this.minValue)*this.maxPos/this.valueRange||0},sanitizeValue:function(e){return Math.min(Math.max(e,this.minValue),this.maxValue)},offsetToValue:function(e){return this.options.rightToLeft?(1-e/this.maxPos)*this.valueRange+this.minValue:e/this.maxPos*this.valueRange+this.minValue},getEventXY:function(e){var t=this.options.vertical?"clientY":"clientX";return t in e?e[t]:void 0===e.originalEvent?e.touches[0][t]:e.originalEvent.touches[0][t]},getEventPosition:function(e){var t=this.sliderElem.rzsp,n=0;return n=this.options.vertical?-this.getEventXY(e)+t:this.getEventXY(e)-t,(n-this.handleHalfDim)*this.options.scale},getEventNames:function(e){var t={moveEvent:"",endEvent:""};return e.touches||void 0!==e.originalEvent&&e.originalEvent.touches?(t.moveEvent="touchmove",t.endEvent="touchend"):(t.moveEvent="mousemove",t.endEvent="mouseup"),t},getNearestHandle:function(e){if(!this.range)return this.minH;var t=this.getEventPosition(e),n=Math.abs(t-this.minH.rzsp),i=Math.abs(t-this.maxH.rzsp);return i>n?this.minH:n>i?this.maxH:this.options.rightToLeft?t>this.minH.rzsp?this.minH:this.maxH:t<this.minH.rzsp?this.minH:this.maxH},focusElement:function(e){var t=0;e[t].focus()},bindEvents:function(){var t,n,i;this.options.draggableRange?(t="rzSliderDrag",n=this.onDragStart,i=this.onDragMove):(t="rzSliderModel",n=this.onStart,i=this.onMove),this.options.onlyBindHandles||(this.selBar.on("mousedown",e.bind(this,n,null,t)),this.selBar.on("mousedown",e.bind(this,i,this.selBar))),this.options.draggableRangeOnly?(this.minH.on("mousedown",e.bind(this,n,null,t)),this.maxH.on("mousedown",e.bind(this,n,null,t))):(this.minH.on("mousedown",e.bind(this,this.onStart,this.minH,"rzSliderModel")),this.range&&this.maxH.on("mousedown",e.bind(this,this.onStart,this.maxH,"rzSliderHigh")),this.options.onlyBindHandles||(this.fullBar.on("mousedown",e.bind(this,this.onStart,null,null)),this.fullBar.on("mousedown",e.bind(this,this.onMove,this.fullBar)),this.ticks.on("mousedown",e.bind(this,this.onStart,null,null)),this.ticks.on("mousedown",e.bind(this,this.onTickClick,this.ticks)))),this.options.onlyBindHandles||(this.selBar.on("touchstart",e.bind(this,n,null,t)),this.selBar.on("touchstart",e.bind(this,i,this.selBar))),this.options.draggableRangeOnly?(this.minH.on("touchstart",e.bind(this,n,null,t)),this.maxH.on("touchstart",e.bind(this,n,null,t))):(this.minH.on("touchstart",e.bind(this,this.onStart,this.minH,"rzSliderModel")),this.range&&this.maxH.on("touchstart",e.bind(this,this.onStart,this.maxH,"rzSliderHigh")),this.options.onlyBindHandles||(this.fullBar.on("touchstart",e.bind(this,this.onStart,null,null)),this.fullBar.on("touchstart",e.bind(this,this.onMove,this.fullBar)),this.ticks.on("touchstart",e.bind(this,this.onStart,null,null)),this.ticks.on("touchstart",e.bind(this,this.onTickClick,this.ticks)))),this.options.keyboardSupport&&(this.minH.on("focus",e.bind(this,this.onPointerFocus,this.minH,"rzSliderModel")),this.range&&this.maxH.on("focus",e.bind(this,this.onPointerFocus,this.maxH,"rzSliderHigh")))},unbindEvents:function(){this.minH.off(),this.maxH.off(),this.fullBar.off(),this.selBar.off(),this.ticks.off()},onStart:function(t,i,r){var o,a,s=this.getEventNames(r);r.stopPropagation(),r.preventDefault(),this.calcViewDimensions(),t?this.tracking=i:(t=this.getNearestHandle(r),this.tracking=t===this.minH?"rzSliderModel":"rzSliderHigh"),t.addClass("rz-active"),this.options.keyboardSupport&&this.focusElement(t),o=e.bind(this,this.dragging.active?this.onDragMove:this.onMove,t),a=e.bind(this,this.onEnd,o),n.on(s.moveEvent,o),n.one(s.endEvent,a),this.callOnStart()},onMove:function(t,n,i){var r,o=this.getEventPosition(n),a=this.options.rightToLeft?this.minValue:this.maxValue,s=this.options.rightToLeft?this.maxValue:this.minValue;0>=o?r=s:o>=this.maxPos?r=a:(r=this.offsetToValue(o),r=i&&e.isNumber(this.options.showTicks)?this.roundStep(r,this.options.showTicks):this.roundStep(r)),this.positionTrackingHandle(r)},onEnd:function(e,t){var i=this.getEventNames(t).moveEvent;this.options.keyboardSupport||(this.minH.removeClass("rz-active"),this.maxH.removeClass("rz-active"),this.tracking=""),this.dragging.active=!1,n.off(i,e),this.scope.$emit("slideEnded"),this.callOnEnd()},onTickClick:function(e,t){this.onMove(e,t,!0)},onPointerFocus:function(t,n){this.tracking=n,t.one("blur",e.bind(this,this.onPointerBlur,t)),t.on("keydown",e.bind(this,this.onKeyboardEvent)),t.addClass("rz-active")},onPointerBlur:function(e){e.off("keydown"),this.tracking="",e.removeClass("rz-active")},getKeyActions:function(e){var t=e+this.step,n=e-this.step,i=e+this.valueRange/10,r=e-this.valueRange/10,o={UP:t,DOWN:n,LEFT:n,RIGHT:t,PAGEUP:i,PAGEDOWN:r,HOME:this.minValue,END:this.maxValue};return this.options.rightToLeft&&(o.LEFT=t,o.RIGHT=n,this.options.vertical&&(o.UP=n,o.DOWN=t)),o},onKeyboardEvent:function(e){var t=this.scope[this.tracking],n=e.keyCode||e.which,i={38:"UP",40:"DOWN",37:"LEFT",39:"RIGHT",33:"PAGEUP",34:"PAGEDOWN",36:"HOME",35:"END"},r=this.getKeyActions(t),o=i[n],a=r[o];if(null!=a&&""!==this.tracking){e.preventDefault();var s=this.roundStep(this.sanitizeValue(a));if(this.options.draggableRangeOnly){var l,u,c=this.scope.rzSliderHigh-this.scope.rzSliderModel;"rzSliderModel"===this.tracking?(l=s,u=s+c,u>this.maxValue&&(u=this.maxValue,l=u-c)):(u=s,l=s-c,l<this.minValue&&(l=this.minValue,u=l+c)),this.positionTrackingBar(l,u)}else this.positionTrackingHandle(s)}},onDragStart:function(e,t,n){var i=this.getEventPosition(n);this.dragging={active:!0,value:this.offsetToValue(i),difference:this.scope.rzSliderHigh-this.scope.rzSliderModel,lowLimit:this.options.rightToLeft?this.minH.rzsp-i:i-this.minH.rzsp,highLimit:this.options.rightToLeft?i-this.maxH.rzsp:this.maxH.rzsp-i},this.onStart(e,t,n)},getValue:function(e,t,n,i){var r=this.options.rightToLeft,o=null;return o="min"===e?n?i?r?this.minValue:this.maxValue-this.dragging.difference:r?this.maxValue-this.dragging.difference:this.minValue:r?this.offsetToValue(t+this.dragging.lowLimit):this.offsetToValue(t-this.dragging.lowLimit):n?i?r?this.minValue+this.dragging.difference:this.maxValue:r?this.maxValue:this.minValue+this.dragging.difference:r?this.offsetToValue(t+this.dragging.lowLimit)+this.dragging.difference:this.offsetToValue(t-this.dragging.lowLimit)+this.dragging.difference,this.roundStep(o)},onDragMove:function(e,t){var n,i,r,o,a,s,l,u,c=this.getEventPosition(t);if(this.options.rightToLeft?(r=this.dragging.lowLimit,o=this.dragging.highLimit,l=this.maxH,u=this.minH):(r=this.dragging.highLimit,o=this.dragging.lowLimit,l=this.minH,u=this.maxH),a=o>=c,s=c>=this.maxPos-r,a){if(0===l.rzsp)return;n=this.getValue("min",c,!0,!1),i=this.getValue("max",c,!0,!1)}else if(s){if(u.rzsp===this.maxPos)return;i=this.getValue("max",c,!0,!0),n=this.getValue("min",c,!0,!0)}else n=this.getValue("min",c,!1),i=this.getValue("max",c,!1);this.positionTrackingBar(n,i)},positionTrackingBar:function(e,t){this.scope.rzSliderModel=e,this.scope.rzSliderHigh=t,this.updateHandles("rzSliderModel",this.valueToOffset(e)),this.updateHandles("rzSliderHigh",this.valueToOffset(t)),this.applyModel()},positionTrackingHandle:function(e){var t=!1;e=this.applyMinMaxLimit(e),this.range&&(e=this.applyMinMaxRange(e),"rzSliderModel"===this.tracking&&e>this.scope.rzSliderHigh?(this.options.noSwitching&&this.scope.rzSliderHigh!==this.minValue?e=this.applyMinMaxRange(this.scope.rzSliderHigh):(this.scope[this.tracking]=this.scope.rzSliderHigh,this.updateHandles(this.tracking,this.maxH.rzsp),this.updateAriaAttributes(),this.tracking="rzSliderHigh",this.minH.removeClass("rz-active"),this.maxH.addClass("rz-active"),this.options.keyboardSupport&&this.focusElement(this.maxH)),t=!0):"rzSliderHigh"===this.tracking&&e<this.scope.rzSliderModel&&(this.options.noSwitching&&this.scope.rzSliderModel!==this.maxValue?e=this.applyMinMaxRange(this.scope.rzSliderModel):(this.scope[this.tracking]=this.scope.rzSliderModel,this.updateHandles(this.tracking,this.minH.rzsp),this.updateAriaAttributes(),this.tracking="rzSliderModel",this.maxH.removeClass("rz-active"),this.minH.addClass("rz-active"),this.options.keyboardSupport&&this.focusElement(this.minH)),t=!0)),this.scope[this.tracking]!==e&&(this.scope[this.tracking]=e,this.updateHandles(this.tracking,this.valueToOffset(e)),this.updateAriaAttributes(),t=!0),t&&this.applyModel()},applyMinMaxLimit:function(e){return null!=this.options.minLimit&&e<this.options.minLimit?this.options.minLimit:null!=this.options.maxLimit&&e>this.options.maxLimit?this.options.maxLimit:e},applyMinMaxRange:function(e){var t="rzSliderModel"===this.tracking?this.scope.rzSliderHigh:this.scope.rzSliderModel,n=Math.abs(e-t);return null!=this.options.minRange&&n<this.options.minRange?"rzSliderModel"===this.tracking?this.scope.rzSliderHigh-this.options.minRange:this.scope.rzSliderModel+this.options.minRange:null!=this.options.maxRange&&n>this.options.maxRange?"rzSliderModel"===this.tracking?this.scope.rzSliderHigh-this.options.maxRange:this.scope.rzSliderModel+this.options.maxRange:e},applyModel:function(){this.internalChange=!0,this.scope.$apply(),this.callOnChange(),this.internalChange=!1},callOnStart:function(){if(this.options.onStart){var e=this;this.scope.$evalAsync(function(){e.options.onStart(e.options.id,e.scope.rzSliderModel,e.scope.rzSliderHigh)})}},callOnChange:function(){if(this.options.onChange){var e=this;this.scope.$evalAsync(function(){e.options.onChange(e.options.id,e.scope.rzSliderModel,e.scope.rzSliderHigh)})}},callOnEnd:function(){if(this.options.onEnd){var e=this;this.scope.$evalAsync(function(){e.options.onEnd(e.options.id,e.scope.rzSliderModel,e.scope.rzSliderHigh)})}}},s}]).directive("rzslider",["RzSlider",function(e){return{restrict:"E",scope:{rzSliderModel:"=?",rzSliderHigh:"=?",rzSliderOptions:"&?",rzSliderTplUrl:"@"},templateUrl:function(e,t){return t.rzSliderTplUrl||"rzSliderTpl.html"},link:function(t,n){t.slider=new e(t,n)}}}]);return t.run(["$templateCache",function(e){e.put("rzSliderTpl.html",'<span class=rz-bar-wrapper><span class=rz-bar></span></span> <span class=rz-bar-wrapper><span class="rz-bar rz-selection" ng-style=barStyle></span></span> <span class="rz-pointer rz-pointer-min" ng-style=minPointerStyle></span> <span class="rz-pointer rz-pointer-max" ng-style=maxPointerStyle></span> <span class="rz-bubble rz-limit"></span> <span class="rz-bubble rz-limit"></span> <span class=rz-bubble></span> <span class=rz-bubble></span> <span class=rz-bubble></span><ul ng-show=showTicks class=rz-ticks><li ng-repeat="t in ticks track by $index" class=rz-tick ng-class="{\'rz-selected\': t.selected}" ng-style=t.style ng-attr-uib-tooltip="{{ t.tooltip }}" ng-attr-tooltip-placement={{t.tooltipPlacement}} ng-attr-tooltip-append-to-body="{{ t.tooltip ? true : undefined}}"><span ng-if="t.value != null" class=rz-tick-value ng-attr-uib-tooltip="{{ t.valueTooltip }}" ng-attr-tooltip-placement={{t.valueTooltipPlacement}}>{{ t.value }}</span> <span ng-if="t.legend != null" class=rz-tick-legend>{{ t.legend }}</span></li></ul>')}]),t}),function(e,t,n){"use strict";function i(e,t,n){if(!e)throw Y("areq",t||"?",n||"required");return e}function r(e,t){return e||t?e?t?(j(e)&&(e=e.join(" ")),j(t)&&(t=t.join(" ")),e+" "+t):e:t:""}function o(e){var t={};return e&&(e.to||e.from)&&(t.to=e.to,t.from=e.from),t}function a(e,t,n){var i="";return e=j(e)?e:e&&_(e)&&e.length?e.split(/\s+/):[],F(e,function(e,r){e&&0<e.length&&(i+=r>0?" ":"",i+=n?t+e:e+t)}),i}function s(e){if(e instanceof U)switch(e.length){case 0:return[];case 1:if(1===e[0].nodeType)return e;break;default:return U(l(e))}return 1===e.nodeType?U(e):void 0}function l(e){if(!e[0])return e;for(var t=0;t<e.length;t++){var n=e[t];if(1==n.nodeType)return n}}function u(e,t,n){F(t,function(t){e.addClass(t,n)})}function c(e,t,n){F(t,function(t){e.removeClass(t,n)})}function p(e){return function(t,n){n.addClass&&(u(e,t,n.addClass),n.addClass=null),n.removeClass&&(c(e,t,n.removeClass),n.removeClass=null)}}function d(e){if(e=e||{},!e.$$prepared){var t=e.domOperation||I;e.domOperation=function(){e.$$domOperationFired=!0,t(),t=I},e.$$prepared=!0}return e}function f(e,t){h(e,t),m(e,t)}function h(e,t){t.from&&(e.css(t.from),t.from=null)}function m(e,t){t.to&&(e.css(t.to),t.to=null)}function g(e,t,n){var i=t.options||{};n=n.options||{};var r=(i.addClass||"")+" "+(n.addClass||""),o=(i.removeClass||"")+" "+(n.removeClass||"");return e=v(e.attr("class"),r,o),n.preparationClasses&&(i.preparationClasses=S(n.preparationClasses,i.preparationClasses),delete n.preparationClasses),r=i.domOperation!==I?i.domOperation:null,L(i,n),r&&(i.domOperation=r),i.addClass=e.addClass?e.addClass:null,i.removeClass=e.removeClass?e.removeClass:null,t.addClass=i.addClass,t.removeClass=i.removeClass,i}function v(e,t,n){function i(e){_(e)&&(e=e.split(" "));var t={};return F(e,function(e){e.length&&(t[e]=!0)}),t}var r={};e=i(e),t=i(t),F(t,function(e,t){r[t]=1}),n=i(n),F(n,function(e,t){r[t]=1===r[t]?null:-1});var o={addClass:"",removeClass:""};return F(r,function(t,n){var i,r;1===t?(i="addClass",r=!e[n]):-1===t&&(i="removeClass",r=e[n]),r&&(o[i].length&&(o[i]+=" "),o[i]+=n)}),o}function b(e){return e instanceof t.element?e[0]:e}function $(e,t,n){var i="";t&&(i=a(t,"ng-",!0)),n.addClass&&(i=S(i,a(n.addClass,"-add"))),n.removeClass&&(i=S(i,a(n.removeClass,"-remove"))),i.length&&(n.preparationClasses=i,e.addClass(i))}function y(e,t){var n=t?"-"+t+"s":"";return x(e,[X,n]),[X,n]}function w(e,t){var n=t?"paused":"",i=O+"PlayState";return x(e,[i,n]),[i,n]}function x(e,t){e.style[t[0]]=t[1]}function S(e,t){return e?t?e+" "+t:e:t}function C(e,t,n){var i=Object.create(null),r=e.getComputedStyle(t)||{};return F(n,function(e,t){var n=r[e];if(n){var o=n.charAt(0);("-"===o||"+"===o||o>=0)&&(n=k(n)),0===n&&(n=null),i[t]=n}}),i}function k(e){var t=0;return e=e.split(/\s*,\s*/),F(e,function(e){"s"==e.charAt(e.length-1)&&(e=e.substring(0,e.length-1)),e=parseFloat(e)||0,t=t?Math.max(e,t):e}),t}function E(e){return 0===e||null!=e}function T(e,t){var n=A,i=e+"s";return t?n+="Duration":i+=" linear all",[n,i]}function P(){var e=Object.create(null);return{flush:function(){e=Object.create(null)},count:function(t){return(t=e[t])?t.total:0},get:function(t){return(t=e[t])&&t.value},put:function(t,n){e[t]?e[t].total++:e[t]={total:1,value:n}}}}function D(e,t,n){F(n,function(n){e[n]=z(e[n])?e[n]:t.style.getPropertyValue(n)})}var A,M,O,R,I=t.noop,N=t.copy,L=t.extend,U=t.element,F=t.forEach,j=t.isArray,_=t.isString,q=t.isObject,H=t.isUndefined,z=t.isDefined,V=t.isFunction,B=t.isElement;H(e.ontransitionend)&&z(e.onwebkittransitionend)?(A="WebkitTransition",M="webkitTransitionEnd transitionend"):(A="transition",M="transitionend"),H(e.onanimationend)&&z(e.onwebkitanimationend)?(O="WebkitAnimation",R="webkitAnimationEnd animationend"):(O="animation",R="animationend");var W=O+"Delay",G=O+"Duration",X=A+"Delay";e=A+"Duration";var Y=t.$$minErr("ng"),K={transitionDuration:e,transitionDelay:X,transitionProperty:A+"Property",animationDuration:G,animationDelay:W,animationIterationCount:O+"IterationCount"},J={transitionDuration:e,transitionDelay:X,animationDuration:G,animationDelay:W};t.module("ngAnimate",[]).directive("ngAnimateSwap",["$animate","$rootScope",function(e,t){return{restrict:"A",transclude:"element",terminal:!0,priority:600,link:function(t,n,i,r,o){var a,s;t.$watchCollection(i.ngAnimateSwap||i["for"],function(i){a&&e.leave(a),s&&(s.$destroy(),s=null),(i||0===i)&&(s=t.$new(),o(s,function(t){a=t,e.enter(t,null,n)}))})}}}]).directive("ngAnimateChildren",["$interpolate",function(e){return{link:function(n,i,r){function o(e){i.data("$$ngAnimateChildren","on"===e||"true"===e)}var a=r.ngAnimateChildren;t.isString(a)&&0===a.length?i.data("$$ngAnimateChildren",!0):(o(e(a)(n)),r.$observe("ngAnimateChildren",o))}}}]).factory("$$rAFScheduler",["$$rAF",function(e){function t(e){i=i.concat(e),n()}function n(){if(i.length){for(var t=i.shift(),o=0;o<t.length;o++)t[o]();r||e(function(){r||n()})}}var i,r;return i=t.queue=[],t.waitUntilQuiet=function(t){r&&r(),r=e(function(){r=null,t(),n()})},t}]).provider("$$animateQueue",["$animateProvider",function(e){function t(e){if(!e)return null;e=e.split(" ");var t=Object.create(null);return F(e,function(e){t[e]=!0}),t}function n(e,n){if(e&&n){var i=t(n);return e.split(" ").some(function(e){return i[e]})}}function r(e,t,n,i){return a[e].some(function(e){return e(t,n,i)})}function o(e,t){var n=0<(e.addClass||"").length,i=0<(e.removeClass||"").length;return t?n&&i:n||i}var a=this.rules={skip:[],cancel:[],join:[]};a.join.push(function(e,t,n){return!t.structural&&o(t)}),a.skip.push(function(e,t,n){return!t.structural&&!o(t)}),a.skip.push(function(e,t,n){return"leave"==n.event&&t.structural}),a.skip.push(function(e,t,n){return n.structural&&2===n.state&&!t.structural}),a.cancel.push(function(e,t,n){return n.structural&&t.structural}),a.cancel.push(function(e,t,n){return 2===n.state&&t.structural}),a.cancel.push(function(e,t,i){e=t.addClass,t=t.removeClass;var r=i.addClass;return i=i.removeClass,H(e)&&H(t)||H(r)&&H(i)?!1:n(e,i)||n(t,r)}),this.$get=["$$rAF","$rootScope","$rootElement","$document","$$HashMap","$$animation","$$AnimateRunner","$templateRequest","$$jqLite","$$forceReflow",function(t,n,a,u,c,h,m,v,y,w){function x(){var e=!1;return function(t){e?t():n.$$postDigest(function(){e=!0,t()})}}function S(e,t,n){var i=b(t),r=b(e),o=[];return(e=I[n])&&F(e,function(e){X.call(e.node,i)?o.push(e.callback):"leave"===n&&X.call(e.node,r)&&o.push(e.callback)}),o}function C(e,i,a){function l(n,i,r,o){C(function(){var n=S(v,e,i);n.length&&t(function(){F(n,function(t){t(e,r,o)})})}),n.progress(i,r,o)}function c(t){var n=e,i=y;i.preparationClasses&&(n.removeClass(i.preparationClasses),i.preparationClasses=null),i.activeClasses&&(n.removeClass(i.activeClasses),i.activeClasses=null),G(e,y),f(e,y),y.domOperation(),w.complete(!t)}var p,v,y=N(a);(e=s(e))&&(p=b(e),v=e.parent());var y=d(y),w=new m,C=x();if(j(y.addClass)&&(y.addClass=y.addClass.join(" ")),y.addClass&&!_(y.addClass)&&(y.addClass=null),j(y.removeClass)&&(y.removeClass=y.removeClass.join(" ")),y.removeClass&&!_(y.removeClass)&&(y.removeClass=null),y.from&&!q(y.from)&&(y.from=null),y.to&&!q(y.to)&&(y.to=null),!p)return c(),w;if(a=[p.className,y.addClass,y.removeClass].join(" "),!W(a))return c(),w;var T=0<=["enter","move","leave"].indexOf(i),R=!O||u[0].hidden||M.get(p);a=!R&&A.get(p)||{};var I=!!a.state;if(R||I&&1==a.state||(R=!P(e,v,i)),R)return c(),w;if(T&&k(e),R={structural:T,element:e,event:i,addClass:y.addClass,removeClass:y.removeClass,close:c,options:y,runner:w},I){if(r("skip",e,R,a))return 2===a.state?(c(),w):(g(e,a,R),a.runner);if(r("cancel",e,R,a))if(2===a.state)a.runner.end();else{if(!a.structural)return g(e,a,R),a.runner;a.close()}else if(r("join",e,R,a)){if(2!==a.state)return $(e,T?i:null,y),i=R.event=a.event,y=g(e,a,R),a.runner;g(e,R,{})}}else g(e,R,{});if((I=R.structural)||(I="animate"===R.event&&0<Object.keys(R.options.to||{}).length||o(R)),!I)return c(),E(e),w;var L=(a.counter||0)+1;return R.counter=L,D(e,1,R),n.$$postDigest(function(){var t=A.get(p),n=!t,t=t||{},r=0<(e.parent()||[]).length&&("animate"===t.event||t.structural||o(t));n||t.counter!==L||!r?(n&&(G(e,y),f(e,y)),(n||T&&t.event!==i)&&(y.domOperation(),w.end()),r||E(e)):(i=!t.structural&&o(t,!0)?"setClass":t.event,D(e,2),t=h(e,i,t.options),t.done(function(t){c(!t),(t=A.get(p))&&t.counter===L&&E(b(e)),l(w,i,"close",{})}),w.setHost(t),l(w,i,"start",{}))}),w}function k(e){e=b(e).querySelectorAll("[data-ng-animate]"),F(e,function(e){var t=parseInt(e.getAttribute("data-ng-animate")),n=A.get(e);if(n)switch(t){case 2:n.runner.end();case 1:A.remove(e)}})}function E(e){e=b(e),e.removeAttribute("data-ng-animate"),A.remove(e)}function T(e,t){return b(e)===b(t)}function P(e,t,n){n=U(u[0].body);var i,r=T(e,n)||"HTML"===e[0].nodeName,o=T(e,a),s=!1,l=M.get(b(e));for((e=e.data("$ngAnimatePin"))&&(t=e);t&&t.length;){o||(o=T(t,a));var c=t[0];if(1!==c.nodeType)break;if(e=A.get(c)||{},!s){if(c=M.get(c),!0===c&&!1!==l){l=!0;break}!1===c&&(l=!1),s=e.structural}if((H(i)||!0===i)&&(e=t.data("$$ngAnimateChildren"),z(e)&&(i=e)),s&&!1===i)break;if(r||(r=T(t,n)),r&&o)break;t=o||!(e=t.data("$ngAnimatePin"))?t.parent():e}return(!s||i)&&!0!==l&&o&&r}function D(e,t,n){n=n||{},n.state=t,e=b(e),e.setAttribute("data-ng-animate",t),n=(t=A.get(e))?L(t,n):n,A.put(e,n)}var A=new c,M=new c,O=null,R=n.$watch(function(){return 0===v.totalPendingRequests},function(e){e&&(R(),n.$$postDigest(function(){n.$$postDigest(function(){null===O&&(O=!0)})}))}),I={},V=e.classNameFilter(),W=V?function(e){return V.test(e)}:function(){return!0},G=p(y),X=Node.prototype.contains||function(e){return this===e||!!(16&this.compareDocumentPosition(e))};return{on:function(e,t,n){t=l(t),I[e]=I[e]||[],I[e].push({node:t,callback:n})},off:function(e,t,n){function i(e,t,n){var i=l(t);return e.filter(function(e){return!(e.node===i&&(!n||e.callback===n))})}var r=I[e];r&&(I[e]=1===arguments.length?null:i(r,t,n))},pin:function(e,t){i(B(e),"element","not an element"),i(B(t),"parentElement","not an element"),e.data("$ngAnimatePin",t)},push:function(e,t,n,i){return n=n||{},n.domOperation=i,C(e,t,n)},enabled:function(e,t){var n=arguments.length;if(0===n)t=!!O;else if(B(e)){var i=b(e),r=M.get(i);1===n?t=!r:M.put(i,!t)}else t=O=!!e;return t}}}]}]).provider("$$animation",["$animateProvider",function(e){function t(e){return e.data("$$animationRunner")}var n=this.drivers=[];this.$get=["$$jqLite","$rootScope","$injector","$$AnimateRunner","$$HashMap","$$rAFScheduler",function(e,i,o,a,s,l){function u(e){function t(e){if(e.processed)return e;e.processed=!0;var n=e.domNode,o=n.parentNode;r.put(n,e);for(var a;o;){if(a=r.get(o)){a.processed||(a=t(a));break}o=o.parentNode}return(a||i).children.push(e),e}var n,i={children:[]},r=new s;for(n=0;n<e.length;n++){var o=e[n];r.put(o.domNode,e[n]={domNode:o.domNode,fn:o.fn,children:[]})}for(n=0;n<e.length;n++)t(e[n]);return function(e){var t,n=[],i=[];for(t=0;t<e.children.length;t++)i.push(e.children[t]);e=i.length;var r=0,o=[];for(t=0;t<i.length;t++){var a=i[t];0>=e&&(e=r,r=0,n.push(o),o=[]),o.push(a.fn),a.children.forEach(function(e){r++,i.push(e)}),e--}return o.length&&n.push(o),n}(i)}var c=[],h=p(e);return function(s,p,m){function g(e){e=e.hasAttribute("ng-animate-ref")?[e]:e.querySelectorAll("[ng-animate-ref]");var t=[];return F(e,function(e){var n=e.getAttribute("ng-animate-ref");n&&n.length&&t.push(e)}),t}function v(e){var t=[],n={};F(e,function(e,i){var r=b(e.element),o=0<=["enter","move"].indexOf(e.event),r=e.structural?g(r):[];if(r.length){var a=o?"to":"from";F(r,function(e){var t=e.getAttribute("ng-animate-ref");n[t]=n[t]||{},n[t][a]={animationID:i,element:U(e)}})}else t.push(e)});var i={},r={};return F(n,function(n,o){var a=n.from,s=n.to;if(a&&s){var l=e[a.animationID],u=e[s.animationID],c=a.animationID.toString();if(!r[c]){var p=r[c]={structural:!0,beforeStart:function(){l.beforeStart(),u.beforeStart()},close:function(){l.close(),u.close()},classes:$(l.classes,u.classes),from:l,to:u,anchors:[]};p.classes.length?t.push(p):(t.push(l),t.push(u))}r[c].anchors.push({out:a.element,"in":s.element})}else a=a?a.animationID:s.animationID,s=a.toString(),i[s]||(i[s]=!0,t.push(e[a]))}),t}function $(e,t){e=e.split(" "),t=t.split(" ");for(var n=[],i=0;i<e.length;i++){var r=e[i];if("ng-"!==r.substring(0,3))for(var o=0;o<t.length;o++)if(r===t[o]){n.push(r);break}}return n.join(" ")}function y(e){for(var t=n.length-1;t>=0;t--){var i=n[t];if(o.has(i)&&(i=o.get(i)(e)))return i}}function w(e,n){e.from&&e.to?(t(e.from.element).setHost(n),t(e.to.element).setHost(n)):t(e.element).setHost(n)}function x(){var e=t(s);!e||"leave"===p&&m.$$domOperationFired||e.end()}function S(t){s.off("$destroy",x),s.removeData("$$animationRunner"),h(s,m),f(s,m),m.domOperation(),T&&e.removeClass(s,T),s.removeClass("ng-animate"),k.complete(!t)}m=d(m);var C=0<=["enter","move","leave"].indexOf(p),k=new a({end:function(){S()},cancel:function(){S(!0)}});if(!n.length)return S(),k;s.data("$$animationRunner",k);var E=r(s.attr("class"),r(m.addClass,m.removeClass)),T=m.tempClasses;T&&(E+=" "+T,m.tempClasses=null);var P;return C&&(P="ng-"+p+"-prepare",e.addClass(s,P)),c.push({element:s,classes:E,event:p,structural:C,options:m,beforeStart:function(){s.addClass("ng-animate"),T&&e.addClass(s,T),P&&(e.removeClass(s,P),P=null)},close:S}),s.on("$destroy",x),1<c.length?k:(i.$$postDigest(function(){var e=[];F(c,function(n){t(n.element)?e.push(n):n.close()}),c.length=0;var n=v(e),i=[];F(n,function(e){i.push({domNode:b(e.from?e.from.element:e.element),fn:function(){e.beforeStart();var n,i=e.close;if(t(e.anchors?e.from.element||e.to.element:e.element)){var r=y(e);r&&(n=r.start)}n?(n=n(),n.done(function(e){i(!e)}),w(e,n)):i()}})}),l(u(i))}),k)}}]}]).provider("$animateCss",["$animateProvider",function(e){var t=P(),n=P();this.$get=["$window","$$jqLite","$$AnimateRunner","$timeout","$$forceReflow","$sniffer","$$rAFScheduler","$$animateQueue",function(e,i,r,s,l,u,c,g){function v(e,t){var n=e.parentNode;return(n.$$ngAnimateParentKey||(n.$$ngAnimateParentKey=++L))+"-"+e.getAttribute("class")+"-"+t}function $(r,o,s,l){var u;return 0<t.count(s)&&(u=n.get(s),u||(o=a(o,"-stagger"),i.addClass(r,o),u=C(e,r,l),u.animationDuration=Math.max(u.animationDuration,0),u.transitionDuration=Math.max(u.transitionDuration,0),i.removeClass(r,o),n.put(s,u))),u||{}}function S(e){U.push(e),c.waitUntilQuiet(function(){t.flush(),n.flush();for(var e=l(),i=0;i<U.length;i++)U[i](e);U.length=0})}function k(n,i,r){return i=t.get(r),i||(i=C(e,n,K),"infinite"===i.animationIterationCount&&(i.animationIterationCount=1)),t.put(r,i),n=i,r=n.animationDelay,i=n.transitionDelay,n.maxDelay=r&&i?Math.max(r,i):r||i,n.maxDuration=Math.max(n.animationDuration*n.animationIterationCount,n.transitionDuration),n}var P=p(i),L=0,U=[];return function(e,n){function l(){p()}function c(){p(!0)}function p(t){if(!(V||Y&&B)){V=!0,B=!1,q.$$skipPreparationClasses||i.removeClass(e,pe),i.removeClass(e,fe),w(z,!1),y(z,!1),F(re,function(e){z.style[e[0]]=""}),P(e,q),f(e,q),Object.keys(H).length&&F(H,function(e,t){e?z.style.setProperty(t,e):z.style.removeProperty(t)}),q.onDone&&q.onDone(),se&&se.length&&e.off(se.join(" "),U);var n=e.data("$$animateCss");n&&(s.cancel(n[0].timer),e.removeData("$$animateCss")),K&&K.complete(!t)}}function C(e){$e.blockTransition&&y(z,e),$e.blockKeyframeAnimation&&w(z,!!e)}function L(){return K=new r({end:l,cancel:c}),S(I),p(),{$$willAnimate:!1,start:function(){return K},end:l}}function U(e){e.stopPropagation();var t=e.originalEvent||e;e=t.$manualTimeStamp||Date.now(),t=parseFloat(t.elapsedTime.toFixed(3)),Math.max(e-ie,0)>=ee&&t>=te&&(Y=!0,p())}function _(){function t(){if(!V){if(C(!1),F(re,function(e){z.style[e[0]]=e[1]}),P(e,q),i.addClass(e,fe),$e.recalculateTimingStyles){if(de=z.className+" "+pe,he=v(z,de),ve=k(z,de,he),be=ve.maxDelay,Z=Math.max(be,0),te=ve.maxDuration,0===te)return void p();$e.hasTransitions=0<ve.transitionDuration,$e.hasAnimations=0<ve.animationDuration}if($e.applyAnimationDelay&&(be="boolean"!=typeof q.delay&&E(q.delay)?parseFloat(q.delay):be,Z=Math.max(be,0),ve.animationDelay=be,ye=[W,be+"s"],re.push(ye),z.style[ye[0]]=ye[1]),ee=1e3*Z,ne=1e3*te,q.easing){var t,r=q.easing;$e.hasTransitions&&(t=A+"TimingFunction",re.push([t,r]),z.style[t]=r),$e.hasAnimations&&(t=O+"TimingFunction",re.push([t,r]),z.style[t]=r)}ve.transitionDuration&&se.push(M),ve.animationDuration&&se.push(R),ie=Date.now();var o=ee+1.5*ne;t=ie+o;var r=e.data("$$animateCss")||[],a=!0;if(r.length){var l=r[0];(a=t>l.expectedEndTime)?s.cancel(l.timer):r.push(p)}a&&(o=s(n,o,!1),r[0]={timer:o,expectedEndTime:t},r.push(p),e.data("$$animateCss",r)),se.length&&e.on(se.join(" "),U),q.to&&(q.cleanupStyles&&D(H,z,Object.keys(q.to)),m(e,q))}}function n(){var t=e.data("$$animateCss");if(t){for(var n=1;n<t.length;n++)t[n]();e.removeData("$$animateCss")}}if(!V)if(z.parentNode){var r=function(e){if(Y)B&&e&&(B=!1,p());else if(B=!e,ve.animationDuration)if(e=w(z,B),B)re.push(e);else{var t=re,n=t.indexOf(e);e>=0&&t.splice(n,1)}},o=ge>0&&(ve.transitionDuration&&0===me.transitionDuration||ve.animationDuration&&0===me.animationDuration)&&Math.max(me.animationDelay,me.transitionDelay);o?s(t,Math.floor(o*ge*1e3),!1):t(),Q.resume=function(){r(!0)},Q.pause=function(){r(!1)}}else p()}var q=n||{};q.$$prepared||(q=d(N(q)));var H={},z=b(e);if(!z||!z.parentNode||!g.enabled())return L();var V,B,Y,K,Q,Z,ee,te,ne,ie,re=[],oe=e.attr("class"),ae=o(q),se=[];if(0===q.duration||!u.animations&&!u.transitions)return L();var le=q.event&&j(q.event)?q.event.join(" "):q.event,ue="",ce="";le&&q.structural?ue=a(le,"ng-",!0):le&&(ue=le),q.addClass&&(ce+=a(q.addClass,"-add")),q.removeClass&&(ce.length&&(ce+=" "),ce+=a(q.removeClass,"-remove")),q.applyClassesEarly&&ce.length&&P(e,q);var pe=[ue,ce].join(" ").trim(),de=oe+" "+pe,fe=a(pe,"-active"),oe=ae.to&&0<Object.keys(ae.to).length;if(!(0<(q.keyframeStyle||"").length||oe||pe))return L();var he,me;0<q.stagger?(ae=parseFloat(q.stagger),me={transitionDelay:ae,animationDelay:ae,transitionDuration:0,animationDuration:0}):(he=v(z,de),me=$(z,pe,he,J)),q.$$skipPreparationClasses||i.addClass(e,pe),q.transitionStyle&&(ae=[A,q.transitionStyle],x(z,ae),re.push(ae)),0<=q.duration&&(ae=0<z.style[A].length,ae=T(q.duration,ae),x(z,ae),re.push(ae)),q.keyframeStyle&&(ae=[O,q.keyframeStyle],x(z,ae),re.push(ae));var ge=me?0<=q.staggerIndex?q.staggerIndex:t.count(he):0;(le=0===ge)&&!q.skipBlocking&&y(z,9999);var ve=k(z,de,he),be=ve.maxDelay;Z=Math.max(be,0),te=ve.maxDuration;var $e={};if($e.hasTransitions=0<ve.transitionDuration,$e.hasAnimations=0<ve.animationDuration,$e.hasTransitionAll=$e.hasTransitions&&"all"==ve.transitionProperty,$e.applyTransitionDuration=oe&&($e.hasTransitions&&!$e.hasTransitionAll||$e.hasAnimations&&!$e.hasTransitions),$e.applyAnimationDuration=q.duration&&$e.hasAnimations,$e.applyTransitionDelay=E(q.delay)&&($e.applyTransitionDuration||$e.hasTransitions),$e.applyAnimationDelay=E(q.delay)&&$e.hasAnimations,$e.recalculateTimingStyles=0<ce.length,($e.applyTransitionDuration||$e.applyAnimationDuration)&&(te=q.duration?parseFloat(q.duration):te,$e.applyTransitionDuration&&($e.hasTransitions=!0,ve.transitionDuration=te,ae=0<z.style[A+"Property"].length,re.push(T(te,ae))),$e.applyAnimationDuration&&($e.hasAnimations=!0,
ve.animationDuration=te,re.push([G,te+"s"]))),0===te&&!$e.recalculateTimingStyles)return L();if(null!=q.delay){var ye;"boolean"!=typeof q.delay&&(ye=parseFloat(q.delay),Z=Math.max(ye,0)),$e.applyTransitionDelay&&re.push([X,ye+"s"]),$e.applyAnimationDelay&&re.push([W,ye+"s"])}return null==q.duration&&0<ve.transitionDuration&&($e.recalculateTimingStyles=$e.recalculateTimingStyles||le),ee=1e3*Z,ne=1e3*te,q.skipBlocking||($e.blockTransition=0<ve.transitionDuration,$e.blockKeyframeAnimation=0<ve.animationDuration&&0<me.animationDelay&&0===me.animationDuration),q.from&&(q.cleanupStyles&&D(H,z,Object.keys(q.from)),h(e,q)),$e.blockTransition||$e.blockKeyframeAnimation?C(te):q.skipBlocking||y(z,!1),{$$willAnimate:!0,end:l,start:function(){return V?void 0:(Q={end:l,cancel:c,resume:null,pause:null},K=new r(Q),S(_),K)}}}}]}]).provider("$$animateCssDriver",["$$animationProvider",function(e){e.drivers.push("$$animateCssDriver"),this.$get=["$animateCss","$rootScope","$$AnimateRunner","$rootElement","$sniffer","$$jqLite","$document",function(e,t,n,i,r,o,a){function s(e){return e.replace(/\bng-\S+\b/g,"")}function l(e,t){return _(e)&&(e=e.split(" ")),_(t)&&(t=t.split(" ")),e.filter(function(e){return-1===t.indexOf(e)}).join(" ")}function u(t,i,r){function o(e){var t={},n=b(e).getBoundingClientRect();return F(["width","height","top","left"],function(e){var i=n[e];switch(e){case"top":i+=f.scrollTop;break;case"left":i+=f.scrollLeft}t[e]=Math.floor(i)+"px"}),t}function a(){var t=s(r.attr("class")||""),n=l(t,p),t=l(p,t),n=e(c,{to:o(r),addClass:"ng-anchor-in "+n,removeClass:"ng-anchor-out "+t,delay:!0});return n.$$willAnimate?n:null}function u(){c.remove(),i.removeClass("ng-animate-shim"),r.removeClass("ng-animate-shim")}var c=U(b(i).cloneNode(!0)),p=s(c.attr("class")||"");i.addClass("ng-animate-shim"),r.addClass("ng-animate-shim"),c.addClass("ng-anchor"),h.append(c);var d;if(t=function(){var t=e(c,{addClass:"ng-anchor-out",delay:!0,from:o(i)});return t.$$willAnimate?t:null}(),!t&&(d=a(),!d))return u();var m=t||d;return{start:function(){function e(){i&&i.end()}var t,i=m.start();return i.done(function(){return i=null,!d&&(d=a())?(i=d.start(),i.done(function(){i=null,u(),t.complete()}),i):(u(),void t.complete())}),t=new n({end:e,cancel:e})}}}function c(e,t,i,r){var o=d(e,I),a=d(t,I),s=[];return F(r,function(e){(e=u(i,e.out,e["in"]))&&s.push(e)}),o||a||0!==s.length?{start:function(){function e(){F(t,function(e){e.end()})}var t=[];o&&t.push(o.start()),a&&t.push(a.start()),F(s,function(e){t.push(e.start())});var i=new n({end:e,cancel:e});return n.all(t,function(e){i.complete(e)}),i}}:void 0}function d(t){var n=t.element,i=t.options||{};return t.structural&&(i.event=t.event,i.structural=!0,i.applyClassesEarly=!0,"leave"===t.event&&(i.onDone=i.domOperation)),i.preparationClasses&&(i.event=S(i.event,i.preparationClasses)),t=e(n,i),t.$$willAnimate?t:null}if(!r.animations&&!r.transitions)return I;var f=a[0].body;t=b(i);var h=U(t.parentNode&&11===t.parentNode.nodeType||f.contains(t)?t:f);return p(o),function(e){return e.from&&e.to?c(e.from,e.to,e.classes,e.anchors):d(e)}}]}]).provider("$$animateJs",["$animateProvider",function(e){this.$get=["$injector","$$AnimateRunner","$$jqLite",function(t,n,i){function r(n){n=j(n)?n:n.split(" ");for(var i=[],r={},o=0;o<n.length;o++){var a=n[o],s=e.$$registeredAnimations[a];s&&!r[a]&&(i.push(t.get(s)),r[a]=!0)}return i}var o=p(i);return function(e,t,i,a){function s(){a.domOperation(),o(e,a)}function l(e,t,i,r,o){switch(i){case"animate":t=[t,r.from,r.to,o];break;case"setClass":t=[t,g,v,o];break;case"addClass":t=[t,g,o];break;case"removeClass":t=[t,v,o];break;default:t=[t,o]}if(t.push(r),e=e.apply(e,t))if(V(e.start)&&(e=e.start()),e instanceof n)e.done(o);else if(V(e))return e;return I}function u(e,t,i,r,o){var a=[];return F(r,function(r){var s=r[o];s&&a.push(function(){var r,o,a=!1,u=function(e){a||(a=!0,(o||I)(e),r.complete(!e))};return r=new n({end:function(){u()},cancel:function(){u(!0)}}),o=l(s,e,t,i,function(e){u(!1===e)}),r})}),a}function c(e,t,i,r,o){var a=u(e,t,i,r,o);if(0===a.length){var s,l;"beforeSetClass"===o?(s=u(e,"removeClass",i,r,"beforeRemoveClass"),l=u(e,"addClass",i,r,"beforeAddClass")):"setClass"===o&&(s=u(e,"removeClass",i,r,"removeClass"),l=u(e,"addClass",i,r,"addClass")),s&&(a=a.concat(s)),l&&(a=a.concat(l))}return 0!==a.length?function(e){var t=[];return a.length&&F(a,function(e){t.push(e())}),t.length?n.all(t,e):e(),function(e){F(t,function(t){e?t.cancel():t.end()})}}:void 0}var p=!1;3===arguments.length&&q(i)&&(a=i,i=null),a=d(a),i||(i=e.attr("class")||"",a.addClass&&(i+=" "+a.addClass),a.removeClass&&(i+=" "+a.removeClass));var h,m,g=a.addClass,v=a.removeClass,b=r(i);if(b.length){var $,y;"leave"==t?(y="leave",$="afterLeave"):(y="before"+t.charAt(0).toUpperCase()+t.substr(1),$=t),"enter"!==t&&"move"!==t&&(h=c(e,t,a,b,y)),m=c(e,t,a,b,$)}if(h||m){var w;return{$$willAnimate:!0,end:function(){return w?w.end():(p=!0,s(),f(e,a),w=new n,w.complete(!0)),w},start:function(){function t(t){p=!0,s(),f(e,a),w.complete(t)}if(w)return w;w=new n;var i,r=[];return h&&r.push(function(e){i=h(e)}),r.length?r.push(function(e){s(),e(!0)}):s(),m&&r.push(function(e){i=m(e)}),w.setHost({end:function(){p||((i||I)(void 0),t(void 0))},cancel:function(){p||((i||I)(!0),t(!0))}}),n.chain(r,t),w}}}}}]}]).provider("$$animateJsDriver",["$$animationProvider",function(e){e.drivers.push("$$animateJsDriver"),this.$get=["$$animateJs","$$AnimateRunner",function(e,t){function n(t){return e(t.element,t.event,t.classes,t.options)}return function(e){if(!e.from||!e.to)return n(e);var i=n(e.from),r=n(e.to);return i||r?{start:function(){function e(){return function(){F(n,function(e){e.end()})}}var n=[];i&&n.push(i.start()),r&&n.push(r.start()),t.all(n,function(e){o.complete(e)});var o=new t({end:e(),cancel:e()});return o}}:void 0}}]}])}(window,window.angular),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.async=e.async||{})}(this,function(e){"use strict";function t(e,t,n){var i=n.length;switch(i){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function n(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function i(e){var t=n(e)?gn.call(e):"";return t==fn||t==hn}function r(e){return!!e&&"object"==typeof e}function o(e){return"symbol"==typeof e||r(e)&&$n.call(e)==vn}function a(e){if("number"==typeof e)return e;if(o(e))return yn;if(n(e)){var t=i(e.valueOf)?e.valueOf():e;e=n(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(wn,"");var r=Sn.test(e);return r||Cn.test(e)?kn(e.slice(2),r?2:8):xn.test(e)?yn:+e}function s(e){if(!e)return 0===e?e:0;if(e=a(e),e===En||e===-En){var t=0>e?-1:1;return t*Tn}return e===e?e:0}function l(e){var t=s(e),n=t%1;return t===t?n?t-n:t:0}function u(e,n){if("function"!=typeof e)throw new TypeError(Pn);return n=Dn(void 0===n?e.length-1:l(n),0),function(){for(var i=arguments,r=-1,o=Dn(i.length-n,0),a=Array(o);++r<o;)a[r]=i[n+r];switch(n){case 0:return e.call(this,a);case 1:return e.call(this,i[0],a);case 2:return e.call(this,i[0],i[1],a)}var s=Array(n+1);for(r=-1;++r<n;)s[r]=i[r];return s[n]=a,t(e,this,s)}}function c(e){return u(function(t){var n=t.pop();e.call(this,t,n)})}function p(e){return u(function(t,n){var i=c(function(n,i){var r=this;return e(t,function(e,t){e.apply(r,n.concat([t]))},i)});return n.length?i.apply(this,n):i})}function d(){}function f(e){return function(){if(null!==e){var t=e;e=null,t.apply(this,arguments)}}}function h(e){return function(t){return null==t?void 0:t[e]}}function m(e){return"number"==typeof e&&e>-1&&e%1==0&&Mn>=e}function g(e){return null!=e&&m(An(e))&&!i(e)}function v(e){return On&&e[On]&&e[On]()}function b(e){return Rn(Object(e))}function $(e,t){return null!=e&&(Nn.call(e,t)||"object"==typeof e&&t in e&&null===b(e))}function y(e){return Ln(Object(e))}function w(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}function x(e){return r(e)&&g(e)}function S(e){return x(e)&&jn.call(e,"callee")&&(!qn.call(e,"callee")||_n.call(e)==Un)}function C(e){return"string"==typeof e||!Hn(e)&&r(e)&&Bn.call(e)==zn}function k(e){var t=e?e.length:void 0;return m(t)&&(Hn(e)||C(e)||S(e))?w(t,String):null}function E(e,t){return t=null==t?Wn:t,!!t&&("number"==typeof e||Gn.test(e))&&e>-1&&e%1==0&&t>e}function T(e){var t=e&&e.constructor,n="function"==typeof t&&t.prototype||Xn;return e===n}function P(e){var t=T(e);if(!t&&!g(e))return y(e);var n=k(e),i=!!n,r=n||[],o=r.length;for(var a in e)!$(e,a)||i&&("length"==a||E(a,o))||t&&"constructor"==a||r.push(a);return r}function D(e){var t,n=-1;if(g(e))return t=e.length,function(){return n++,t>n?{value:e[n],key:n}:null};var i=v(e);if(i)return function(){var e=i.next();return e.done?null:(n++,{value:e.value,key:n})};var r=P(e);return t=r.length,function(){n++;var i=r[n];return t>n?{value:e[i],key:i}:null}}function A(e){return function(){if(null===e)throw new Error("Callback was already called.");var t=e;e=null,t.apply(this,arguments)}}function M(e){return function(t,n,i){i=f(i||d),t=t||[];var r=D(t);if(0>=e)return i(null);var o=!1,a=0,s=!1;!function l(){if(o&&0>=a)return i(null);for(;e>a&&!s;){var t=r();if(null===t)return o=!0,void(0>=a&&i(null));a+=1,n(t.value,t.key,A(function(e){a-=1,e?(i(e),s=!0):l()}))}}()}}function O(e){return function(t,n,i,r){return e(M(n),t,i,r)}}function R(e,t,n,i){i=f(i||d),t=t||[];var r=[],o=0;e(t,function(e,t,i){var a=o++;n(e,function(e,t){r[a]=t,i(e)})},function(e){i(e,r)})}function I(e,t){return function(n,i,r){return e(n,t,i,r)}}function N(e){return c(function(t,i){var r;try{r=e.apply(this,t)}catch(o){return i(o)}n(r)&&"function"==typeof r.then?r.then(function(e){i(null,e)})["catch"](function(e){i(e.message?e:new Error(e))}):i(null,r)})}function L(e,t){for(var n=-1,i=e?e.length:0;++n<i&&t(e[n],n,e)!==!1;);return e}function U(e){return function(t,n,i){for(var r=-1,o=Object(t),a=i(t),s=a.length;s--;){var l=a[e?s:++r];if(n(o[l],l,o)===!1)break}return t}}function F(e,t){return e&&ti(e,t,P)}function j(){this.__data__=[]}function _(e,t){return e===t||e!==e&&t!==t}function q(e,t){for(var n=e.length;n--;)if(_(e[n][0],t))return n;return-1}function H(e){var t=this.__data__,n=q(t,e);if(0>n)return!1;var i=t.length-1;return n==i?t.pop():ii.call(t,n,1),!0}function z(e){var t=this.__data__,n=q(t,e);return 0>n?void 0:t[n][1]}function V(e){return q(this.__data__,e)>-1}function B(e,t){var n=this.__data__,i=q(n,e);return 0>i?n.push([e,t]):n[i][1]=t,this}function W(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function G(){this.__data__=new W}function X(e){return this.__data__["delete"](e)}function Y(e){return this.__data__.get(e)}function K(e){return this.__data__.has(e)}function J(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(n){}return t}function Q(e){return e&&e.Object===Object?e:null}function Z(e){return!!ui&&ui in e}function ee(e){if(null!=e){try{return ci.call(e)}catch(t){}try{return e+""}catch(t){}}return""}function te(e){if(!n(e)||Z(e))return!1;var t=i(e)||J(e)?gi:di;return t.test(ee(e))}function ne(e,t){return null==e?void 0:e[t]}function ie(e,t){var n=ne(e,t);return te(n)?n:void 0}function re(){this.__data__=vi?vi(null):{}}function oe(e){return this.has(e)&&delete this.__data__[e]}function ae(e){var t=this.__data__;if(vi){var n=t[e];return n===bi?void 0:n}return yi.call(t,e)?t[e]:void 0}function se(e){var t=this.__data__;return vi?void 0!==t[e]:xi.call(t,e)}function le(e,t){var n=this.__data__;return n[e]=vi&&void 0===t?Si:t,this}function ue(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function ce(){this.__data__={hash:new ue,map:new(Ci||W),string:new ue}}function pe(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}function de(e,t){var n=e.__data__;return pe(t)?n["string"==typeof t?"string":"hash"]:n.map}function fe(e){return de(this,e)["delete"](e)}function he(e){return de(this,e).get(e)}function me(e){return de(this,e).has(e)}function ge(e,t){return de(this,e).set(e,t),this}function ve(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function be(e,t){var n=this.__data__;return n instanceof W&&n.__data__.length==ki&&(n=this.__data__=new ve(n.__data__)),n.set(e,t),this}function $e(e){this.__data__=new W(e)}function ye(e){return this.__data__.set(e,Ei),this}function we(e){return this.__data__.has(e)}function xe(e){var t=-1,n=e?e.length:0;for(this.__data__=new ve;++t<n;)this.add(e[t])}function Se(e,t){for(var n=-1,i=e?e.length:0;++n<i;)if(t(e[n],n,e))return!0;return!1}function Ce(e,t,n,i,r,o){var a=r&Pi,s=e.length,l=t.length;if(s!=l&&!(a&&l>s))return!1;var u=o.get(e);if(u)return u==t;var c=-1,p=!0,d=r&Ti?new xe:void 0;for(o.set(e,t);++c<s;){var f=e[c],h=t[c];if(i)var m=a?i(h,f,c,t,e,o):i(f,h,c,e,t,o);if(void 0!==m){if(m)continue;p=!1;break}if(d){if(!Se(t,function(e,t){return d.has(t)||f!==e&&!n(f,e,i,r,o)?void 0:d.add(t)})){p=!1;break}}else if(f!==h&&!n(f,h,i,r,o)){p=!1;break}}return o["delete"](e),p}function ke(e){var t=-1,n=Array(e.size);return e.forEach(function(e,i){n[++t]=[i,e]}),n}function Ee(e){var t=-1,n=Array(e.size);return e.forEach(function(e){n[++t]=e}),n}function Te(e,t,n,i,r,o,a){switch(n){case zi:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case Hi:return!(e.byteLength!=t.byteLength||!i(new Ai(e),new Ai(t)));case Ri:case Ii:return+e==+t;case Ni:return e.name==t.name&&e.message==t.message;case Ui:return e!=+e?t!=+t:e==+t;case Fi:case _i:return e==t+"";case Li:var s=ke;case ji:var l=o&Oi;if(s||(s=Ee),e.size!=t.size&&!l)return!1;var u=a.get(e);return u?u==t:(o|=Mi,a.set(e,t),Ce(s(e),s(t),i,r,o,a));case qi:if(Bi)return Bi.call(e)==Bi.call(t)}return!1}function Pe(e,t,n,i,r,o){var a=r&Wi,s=P(e),l=s.length,u=P(t),c=u.length;if(l!=c&&!a)return!1;for(var p=l;p--;){var d=s[p];if(!(a?d in t:$(t,d)))return!1}var f=o.get(e);if(f)return f==t;var h=!0;o.set(e,t);for(var m=a;++p<l;){d=s[p];var g=e[d],v=t[d];if(i)var b=a?i(v,g,d,t,e,o):i(g,v,d,e,t,o);if(!(void 0===b?g===v||n(g,v,i,r,o):b)){h=!1;break}m||(m="constructor"==d)}if(h&&!m){var y=e.constructor,w=t.constructor;y!=w&&"constructor"in e&&"constructor"in t&&!("function"==typeof y&&y instanceof y&&"function"==typeof w&&w instanceof w)&&(h=!1)}return o["delete"](e),h}function De(e){return rr.call(e)}function Ae(e){return r(e)&&m(e.length)&&!!Nr[Ur.call(e)]}function Me(e,t,n,i,r,o){var a=Hn(e),s=Hn(t),l=_r,u=_r;a||(l=cr(e),l=l==jr?qr:l),s||(u=cr(t),u=u==jr?qr:u);var c=l==qr&&!J(e),p=u==qr&&!J(t),d=l==u;if(d&&!c)return o||(o=new $e),a||Ae(e)?Ce(e,t,n,i,r,o):Te(e,t,l,n,i,r,o);if(!(r&Fr)){var f=c&&zr.call(e,"__wrapped__"),h=p&&zr.call(t,"__wrapped__");if(f||h){var m=f?e.value():e,g=h?t.value():t;return o||(o=new $e),n(m,g,i,r,o)}}return d?(o||(o=new $e),Pe(e,t,n,i,r,o)):!1}function Oe(e,t,i,o,a){return e===t?!0:null==e||null==t||!n(e)&&!r(t)?e!==e&&t!==t:Me(e,t,Oe,i,o,a)}function Re(e,t,n,i){var r=n.length,o=r,a=!i;if(null==e)return!o;for(e=Object(e);r--;){var s=n[r];if(a&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++r<o;){s=n[r];var l=s[0],u=e[l],c=s[1];if(a&&s[2]){if(void 0===u&&!(l in e))return!1}else{var p=new $e;if(i)var d=i(u,c,l,e,t,p);if(!(void 0===d?Oe(c,u,i,Vr|Br,p):d))return!1}}return!0}function Ie(e){return e===e&&!n(e)}function Ne(e){for(var t=P(e),n=t.length;n--;){var i=t[n],r=e[i];t[n]=[i,r,Ie(r)]}return t}function Le(e,t){return function(n){return null==n?!1:n[e]===t&&(void 0!==t||e in Object(n))}}function Ue(e){var t=Ne(e);return 1==t.length&&t[0][2]?Le(t[0][0],t[0][1]):function(n){return n===e||Re(n,e,t)}}function Fe(e,t){if("function"!=typeof e||t&&"function"!=typeof t)throw new TypeError(Wr);var n=function(){var i=arguments,r=t?t.apply(this,i):i[0],o=n.cache;if(o.has(r))return o.get(r);var a=e.apply(this,i);return n.cache=o.set(r,a),a};return n.cache=new(Fe.Cache||ve),n}function je(e){if("string"==typeof e)return e;if(o(e))return Kr?Kr.call(e):"";var t=e+"";return"0"==t&&1/e==-Xr?"-0":t}function _e(e){return null==e?"":je(e)}function qe(e){return Hn(e)?e:Zr(e)}function He(e,t){if(Hn(e))return!1;var n=typeof e;return"number"==n||"symbol"==n||"boolean"==n||null==e||o(e)?!0:to.test(e)||!eo.test(e)||null!=t&&e in Object(t)}function ze(e){if("string"==typeof e||o(e))return e;var t=e+"";return"0"==t&&1/e==-no?"-0":t}function Ve(e,t){t=He(t,e)?[t]:qe(t);for(var n=0,i=t.length;null!=e&&i>n;)e=e[ze(t[n++])];return n&&n==i?e:void 0}function Be(e,t,n){var i=null==e?void 0:Ve(e,t);return void 0===i?n:i}function We(e,t){return null!=e&&t in Object(e)}function Ge(e,t,n){t=He(t,e)?[t]:qe(t);for(var i,r=-1,o=t.length;++r<o;){var a=ze(t[r]);if(!(i=null!=e&&n(e,a)))break;e=e[a]}if(i)return i;var o=e?e.length:0;return!!o&&m(o)&&E(a,o)&&(Hn(e)||C(e)||S(e))}function Xe(e,t){return null!=e&&Ge(e,t,We)}function Ye(e,t){return He(e)&&Ie(t)?Le(ze(e),t):function(n){var i=Be(n,e);return void 0===i&&i===t?Xe(n,e):Oe(t,i,void 0,io|ro)}}function Ke(e){return e}function Je(e){return function(t){return Ve(t,e)}}function Qe(e){return He(e)?h(ze(e)):Je(e)}function Ze(e){return"function"==typeof e?e:null==e?Ke:"object"==typeof e?Hn(e)?Ye(e[0],e[1]):Ue(e):Qe(e)}function et(e,t){return e&&F(e,Ze(t,3))}function tt(e,t,n){for(var i=e.length,r=t+(n?1:-1);n?r--:++r<i;){var o=e[r];if(o!==o)return r}return-1}function nt(e,t,n){if(t!==t)return tt(e,n);for(var i=n-1,r=e.length;++i<r;)if(e[i]===t)return i;return-1}function it(e,t,n){function i(e,t){$.push(function(){s(e,t)})}function r(){if(0===$.length&&0===g)return n(null,m);for(;$.length&&t>g;){var e=$.shift();e()}}function o(e,t){var n=b[e];n||(n=b[e]=[]),n.push(t)}function a(e){var t=b[e]||[];L(t,function(e){e()}),r()}function s(e,t){if(!v){var i=A(u(function(t,i){if(g--,i.length<=1&&(i=i[0]),t){var r={};et(m,function(e,t){r[t]=e}),r[e]=i,v=!0,b=[],n(t,r)}else m[e]=i,a(e)}));g++;var r=t[t.length-1];t.length>1?r(m,i):r(i)}}function l(){for(var e,t=0;y.length;)e=y.pop(),t++,L(c(e),function(e){--w[e]||y.push(e)});if(t!==h)throw new Error("async.auto cannot execute tasks due to a recursive dependency")}function c(t){var n=[];return et(e,function(e,i){Hn(e)&&nt(e,t,0)>=0&&n.push(i)}),n}"function"==typeof t&&(n=t,t=null),n=f(n||d);var p=P(e),h=p.length;if(!h)return n(null);t||(t=h);var m={},g=0,v=!1,b={},$=[],y=[],w={};et(e,function(t,n){if(!Hn(t))return i(n,[t]),void y.push(n);var r=t.slice(0,t.length-1),a=r.length;return 0===a?(i(n,t),void y.push(n)):(w[n]=a,void L(r,function(s){if(!e[s])throw new Error("async.auto task `"+n+"` has a non-existent dependency in "+r.join(", "));o(s,function(){a--,0===a&&i(n,t)})}))}),l(),r()}function rt(e,t){for(var n=-1,i=e?e.length:0,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}function ot(e,t){var n=-1,i=e.length;for(t||(t=Array(i));++n<i;)t[n]=e[n];return t}function at(e,t,n){var i=-1,r=e.length;0>t&&(t=-t>r?0:r+t),n=n>r?r:n,0>n&&(n+=r),r=t>n?0:n-t>>>0,t>>>=0;for(var o=Array(r);++i<r;)o[i]=e[i+t];return o}function st(e,t,n){var i=e.length;return n=void 0===n?i:n,!t&&n>=i?e:at(e,t,n)}function lt(e,t){for(var n=e.length;n--&&nt(t,e[n],0)>-1;);return n}function ut(e,t){for(var n=-1,i=e.length;++n<i&&nt(t,e[n],0)>-1;);return n}function ct(e){return e.match(So)}function pt(e,t,n){if(e=_e(e),e&&(n||void 0===t))return e.replace(Co,"");if(!e||!(t=je(t)))return e;var i=ct(e),r=ct(t),o=ut(i,r),a=lt(i,r)+1;return st(i,o,a).join("")}function dt(e){return pt(e.toString().match(ko)[2]).split(/\s*\,\s*/)}function ft(e,t){var n={};et(e,function(e,t){function i(t,n){var i=rt(r,function(e){return t[e]});i.push(n),e.apply(null,i)}var r;if(Hn(e))r=ot(e),e=r.pop(),n[t]=r.concat(r.length>0?i:e);else{if(0===e.length)throw new Error("autoInject task functions require explicit parameters.");1===e.length?n[t]=e:(r=dt(e),r.pop(),n[t]=r.concat(i))}}),it(n,t)}function ht(e){setTimeout(e,0)}function mt(e){return u(function(t,n){e(function(){t.apply(null,n)})})}function gt(e,t,n){function i(e,t,n,i){if(null!=i&&"function"!=typeof i)throw new Error("task callback must be a function");return e.started=!0,Hn(t)||(t=[t]),0===t.length&&e.idle()?Do(function(){e.drain()}):(L(t,function(t){var r={data:t,callback:i||d};n?e.tasks.unshift(r):e.tasks.push(r)}),void Do(e.process))}function r(e,t){return function(){o-=1;var n=!1,i=arguments;L(t,function(t){L(a,function(e,i){e!==t||n||(a.splice(i,1),n=!0)}),t.callback.apply(t,i),null!=i[0]&&e.error(i[0],t.data)}),o<=e.concurrency-e.buffer&&e.unsaturated(),e.tasks.length+o===0&&e.drain(),e.process()}}if(null==t)t=1;else if(0===t)throw new Error("Concurrency must not be zero");var o=0,a=[],s={tasks:[],concurrency:t,payload:n,saturated:d,unsaturated:d,buffer:t/4,empty:d,drain:d,error:d,started:!1,paused:!1,push:function(e,t){i(s,e,!1,t)},kill:function(){s.drain=d,s.tasks=[]},unshift:function(e,t){i(s,e,!0,t)},process:function(){for(;!s.paused&&o<s.concurrency&&s.tasks.length;){var t=s.payload?s.tasks.splice(0,s.payload):s.tasks.splice(0,s.tasks.length),n=rt(t,h("data"));0===s.tasks.length&&s.empty(),o+=1,a.push(t[0]),o===s.concurrency&&s.saturated();var i=A(r(s,t));e(n,i)}},length:function(){return s.tasks.length},running:function(){return o},workersList:function(){return a},idle:function(){return s.tasks.length+o===0},pause:function(){s.paused=!0},resume:function(){if(s.paused!==!1){s.paused=!1;for(var e=Math.min(s.concurrency,s.tasks.length),t=1;e>=t;t++)Do(s.process)}}};return s}function vt(e,t){return gt(e,1,t)}function bt(e,t,n,i){M(t)(e,n,i)}function $t(e,t,n,i){Ao(e,function(e,i,r){n(t,e,function(e,n){t=n,r(e)})},function(e){i(e,t)})}function yt(){var e=arguments;return u(function(t){var n=this,i=t[t.length-1];"function"==typeof i?t.pop():i=d,$t(e,t,function(e,t,i){t.apply(n,e.concat([u(function(e,t){i(e,t)})]))},function(e,t){i.apply(n,[e].concat(t))})})}function wt(){return yt.apply(null,Mo.call(arguments))}function xt(e,t,n,i){var r=[];e(t,function(e,t,i){n(e,function(e,t){r=r.concat(t||[]),i(e)})},function(e){i(e,r)})}function St(e){return function(t,n,i){return e(Oo,t,n,i)}}function Ct(e){return function(t,n,i){return e(Ao,t,n,i)}}function kt(e,t,n){return function(i,r,o,a){function s(e){a&&(e?a(e):a(null,n(!1)))}function l(e,i,r){return a?void o(e,function(i,s){a&&(i?(a(i),a=o=!1):t(s)&&(a(null,n(!0,e)),a=o=!1)),r()}):r()}arguments.length>3?(a=a||d,e(i,r,l,s)):(a=o,a=a||d,o=r,e(i,l,s))}}function Et(e,t){return t}function Tt(e){return u(function(t,n){t.apply(null,n.concat([u(function(t,n){"object"==typeof console&&(t?console.error&&console.error(t):console[e]&&L(n,function(t){console[e](t)}))})]))})}function Pt(e,t,n){n=n||d;var i=u(function(t,i){t?n(t):(i.push(r),e.apply(this,i))}),r=function(e,r){return e?n(e):r?void t(i):n(null)};e(r)}function Dt(e,t,n){var i=0;Pt(function(e){return i++<1?e(null,!0):void t.apply(this,arguments)},e,n)}function At(e,t,n){if(n=n||d,!e())return n(null);var i=u(function(r,o){return r?n(r):e.apply(this,o)?t(i):void n.apply(null,[null].concat(o))});t(i)}function Mt(e,t,n){var i=0;return At(function(){return++i<=1||t.apply(this,arguments)},e,n)}function Ot(e,t,n){return Mt(e,function(){return!t.apply(this,arguments)},n)}function Rt(e){return function(t,n,i){return e(t,i)}}function It(e,t,n,i){return M(t)(e,Rt(n),i)}function Nt(e){return c(function(t,n){var i=!0;t.push(function(){var e=arguments;i?Do(function(){n.apply(null,e)}):n.apply(null,e)}),e.apply(this,t),i=!1})}function Lt(e){return!e}function Ut(e,t,n,i){var r=[];e(t,function(e,t,i){n(e,function(n,o){n?i(n):(o&&r.push({index:t,value:e}),i())})},function(e){e?i(e):i(null,rt(r.sort(function(e,t){return e.index-t.index}),h("value")))})}function Ft(e,t){function n(e){return e?i(e):void r(n)}var i=A(t||d),r=Nt(e);n()}function jt(e){function t(n){function i(){return e.length&&e[n].apply(null,arguments),i.next()}return i.next=function(){return n<e.length-1?t(n+1):null},i}return t(0)}function _t(e,t,n,i){var r={};bt(e,t,function(e,t,i){n(e,t,function(e,n){return e?i(e):(r[t]=n,void i())})},function(e){i(e,r)})}function qt(e,t){return t in e}function Ht(e,t){var n=Object.create(null),i=Object.create(null);t=t||Ke;var r=c(function(r,o){var a=t.apply(null,r);qt(n,a)?Do(function(){o.apply(null,n[a])}):qt(i,a)?i[a].push(o):(i[a]=[o],e.apply(null,r.concat([u(function(e){n[a]=e;var t=i[a];delete i[a];for(var r=0,o=t.length;o>r;r++)t[r].apply(null,e)})])))});return r.memo=n,r.unmemoized=e,r}function zt(e,t,n){n=n||d;var i=g(t)?[]:{};e(t,function(e,t,n){e(u(function(e,r){r.length<=1&&(r=r[0]),i[t]=r,n(e)}))},function(e){n(e,i)})}function Vt(e,t,n){return zt(M(t),e,n)}function Bt(e,t){return gt(function(t,n){e(t[0],n)},t,1)}function Wt(e,t){function n(e,t){return e.priority-t.priority}function i(e,t,n){for(var i=-1,r=e.length-1;r>i;){var o=i+(r-i+1>>>1);n(t,e[o])>=0?i=o:r=o-1}return i}function r(e,t,r,o){if(null!=o&&"function"!=typeof o)throw new Error("task callback must be a function");return e.started=!0,Hn(t)||(t=[t]),0===t.length?Do(function(){e.drain()}):void L(t,function(t){var a={data:t,priority:r,callback:"function"==typeof o?o:d};e.tasks.splice(i(e.tasks,a,n)+1,0,a),Do(e.process)})}var o=Bt(e,t);return o.push=function(e,t,n){r(o,e,t,n)},delete o.unshift,o}function Gt(e,t){return function(n,i){if(null==n)return n;if(!g(n))return e(n,i);for(var r=n.length,o=t?r:-1,a=Object(n);(t?o--:++o<r)&&i(a[o],o,a)!==!1;);return n}}function Xt(e,t){var n=Hn(e)?L:Zo;return n(e,Ze(t,3))}function Yt(e,t){return t=f(t||d),Hn(e)?e.length?void Xt(e,function(e){e(t)}):t():t(new TypeError("First argument to race must be an array of functions"))}function Kt(e,t,n,i){var r=ea.call(e).reverse();$t(r,t,n,i)}function Jt(e){return c(function(t,n){return t.push(u(function(e,t){if(e)n(null,{error:e});else{var i=null;1===t.length?i=t[0]:t.length>1&&(i=t),n(null,{value:i})}})),e.apply(this,t)})}function Qt(e,t,n,i){Ut(e,t,function(e,t){n(e,function(e,n){e?t(e):t(null,!n)})},i)}function Zt(e){return e.map(Jt)}function en(e,t){return zt(Ao,e,t)}function tn(e){return function(){return e}}function nn(e,t,n){function i(e,t){if("object"==typeof t)e.times=+t.times||a,e.intervalFunc="function"==typeof t.interval?t.interval:tn(+t.interval||s);else{if("number"!=typeof t&&"string"!=typeof t)throw new Error("Invalid arguments for async.retry");e.times=+t||a}}function r(e){return function(n){t(function(t,i){n(!t||e,{err:t,result:i})})}}function o(e){return function(t){setTimeout(function(){t(null)},e)}}var a=5,s=0,l={times:a,intervalFunc:tn(s)};if(arguments.length<3&&"function"==typeof e?(n=t||d,t=e):(i(l,e),n=n||d),"function"!=typeof t)throw new Error("Invalid arguments for async.retry");for(var u=[],c=1;c<l.times+1;c++){var p=c==l.times;u.push(r(p));var f=l.intervalFunc(c);!p&&f>0&&u.push(o(f))}en(u,function(e,t){t=t[t.length-1],n(t.err,t.result)})}function rn(e,t){return t||(t=e,e=null),c(function(n,i){function r(e){t.apply(null,n.concat([e]))}e?nn(e,r,i):nn(r,i)})}function on(e,t,n){function i(e,t){var n=e.criteria,i=t.criteria;return i>n?-1:n>i?1:0}Kn(e,function(e,n){t(e,function(t,i){return t?n(t):void n(null,{value:e,criteria:i})})},function(e,t){return e?n(e):void n(null,rt(t.sort(i),h("value")))})}function an(e,t,n){function i(){s||(o.apply(null,arguments),clearTimeout(a))}function r(){var t=e.name||"anonymous",i=new Error('Callback function "'+t+'" timed out.');i.code="ETIMEDOUT",n&&(i.info=n),s=!0,o(i)}var o,a,s=!1;return c(function(n,s){o=s,a=setTimeout(r,t),e.apply(null,n.concat(i))})}function sn(e,t,n,i){for(var r=-1,o=la(sa((t-e)/(n||1)),0),a=Array(o);o--;)a[i?o:++r]=e,e+=n;return a}function ln(e,t,n,i){return Yn(sn(0,e,1),t,n,i)}function un(e,t,n,i){3===arguments.length&&(i=n,n=t,t=Hn(e)?[]:{}),Oo(e,function(e,i,r){n(t,e,i,r)},function(e){i(e,t)})}function cn(e){return function(){return(e.unmemoized||e).apply(null,arguments)}}function pn(e,t,n){return At(function(){return!e.apply(this,arguments)},t,n)}function dn(e,t){function n(r){if(i===e.length)return t.apply(null,[null].concat(r));var o=A(u(function(e,i){return e?t.apply(null,[e].concat(i)):void n(i)}));r.push(o);var a=e[i++];a.apply(null,r)}if(t=f(t||d),!Hn(e))return t(new Error("First argument to waterfall must be an array of functions"));if(!e.length)return t();var i=0;n([])}var fn="[object Function]",hn="[object GeneratorFunction]",mn=Object.prototype,gn=mn.toString,vn="[object Symbol]",bn=Object.prototype,$n=bn.toString,yn=NaN,wn=/^\s+|\s+$/g,xn=/^[-+]0x[0-9a-f]+$/i,Sn=/^0b[01]+$/i,Cn=/^0o[0-7]+$/i,kn=parseInt,En=1/0,Tn=1.7976931348623157e308,Pn="Expected a function",Dn=Math.max,An=h("length"),Mn=9007199254740991,On="function"==typeof Symbol&&Symbol.iterator,Rn=Object.getPrototypeOf,In=Object.prototype,Nn=In.hasOwnProperty,Ln=Object.keys,Un="[object Arguments]",Fn=Object.prototype,jn=Fn.hasOwnProperty,_n=Fn.toString,qn=Fn.propertyIsEnumerable,Hn=Array.isArray,zn="[object String]",Vn=Object.prototype,Bn=Vn.toString,Wn=9007199254740991,Gn=/^(?:0|[1-9]\d*)$/,Xn=Object.prototype,Yn=O(R),Kn=I(Yn,1/0),Jn=p(Kn),Qn=I(Yn,1),Zn=p(Qn),ei=u(function(e,t){return u(function(n){return e.apply(null,t.concat(n))})}),ti=U(),ni=Array.prototype,ii=ni.splice;W.prototype.clear=j,W.prototype["delete"]=H,W.prototype.get=z,W.prototype.has=V,W.prototype.set=B;var ri=Q("object"==typeof global&&global),oi=Q("object"==typeof self&&self),ai=Q("object"==typeof this&&this),si=ri||oi||ai||Function("return this")(),li=si["__core-js_shared__"],ui=function(){var e=/[^.]+$/.exec(li&&li.keys&&li.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),ci=Function.prototype.toString,pi=/[\\^$.*+?()[\]{}|]/g,di=/^\[object .+?Constructor\]$/,fi=Object.prototype,hi=Function.prototype.toString,mi=fi.hasOwnProperty,gi=RegExp("^"+hi.call(mi).replace(pi,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),vi=ie(Object,"create"),bi="__lodash_hash_undefined__",$i=Object.prototype,yi=$i.hasOwnProperty,wi=Object.prototype,xi=wi.hasOwnProperty,Si="__lodash_hash_undefined__";ue.prototype.clear=re,ue.prototype["delete"]=oe,ue.prototype.get=ae,ue.prototype.has=se,ue.prototype.set=le;var Ci=ie(si,"Map");ve.prototype.clear=ce,ve.prototype["delete"]=fe,ve.prototype.get=he,ve.prototype.has=me,ve.prototype.set=ge;var ki=200;$e.prototype.clear=G,$e.prototype["delete"]=X,$e.prototype.get=Y,$e.prototype.has=K,$e.prototype.set=be;var Ei="__lodash_hash_undefined__";xe.prototype.add=xe.prototype.push=ye,xe.prototype.has=we;var Ti=1,Pi=2,Di=si.Symbol,Ai=si.Uint8Array,Mi=1,Oi=2,Ri="[object Boolean]",Ii="[object Date]",Ni="[object Error]",Li="[object Map]",Ui="[object Number]",Fi="[object RegExp]",ji="[object Set]",_i="[object String]",qi="[object Symbol]",Hi="[object ArrayBuffer]",zi="[object DataView]",Vi=Di?Di.prototype:void 0,Bi=Vi?Vi.valueOf:void 0,Wi=2,Gi=ie(si,"DataView"),Xi=ie(si,"Promise"),Yi=ie(si,"Set"),Ki=ie(si,"WeakMap"),Ji="[object Map]",Qi="[object Object]",Zi="[object Promise]",er="[object Set]",tr="[object WeakMap]",nr="[object DataView]",ir=Object.prototype,rr=ir.toString,or=ee(Gi),ar=ee(Ci),sr=ee(Xi),lr=ee(Yi),ur=ee(Ki);(Gi&&De(new Gi(new ArrayBuffer(1)))!=nr||Ci&&De(new Ci)!=Ji||Xi&&De(Xi.resolve())!=Zi||Yi&&De(new Yi)!=er||Ki&&De(new Ki)!=tr)&&(De=function(e){var t=rr.call(e),n=t==Qi?e.constructor:void 0,i=n?ee(n):void 0;if(i)switch(i){case or:return nr;case ar:return Ji;case sr:return Zi;case lr:return er;case ur:return tr}return t});var cr=De,pr="[object Arguments]",dr="[object Array]",fr="[object Boolean]",hr="[object Date]",mr="[object Error]",gr="[object Function]",vr="[object Map]",br="[object Number]",$r="[object Object]",yr="[object RegExp]",wr="[object Set]",xr="[object String]",Sr="[object WeakMap]",Cr="[object ArrayBuffer]",kr="[object DataView]",Er="[object Float32Array]",Tr="[object Float64Array]",Pr="[object Int8Array]",Dr="[object Int16Array]",Ar="[object Int32Array]",Mr="[object Uint8Array]",Or="[object Uint8ClampedArray]",Rr="[object Uint16Array]",Ir="[object Uint32Array]",Nr={};Nr[Er]=Nr[Tr]=Nr[Pr]=Nr[Dr]=Nr[Ar]=Nr[Mr]=Nr[Or]=Nr[Rr]=Nr[Ir]=!0,Nr[pr]=Nr[dr]=Nr[Cr]=Nr[fr]=Nr[kr]=Nr[hr]=Nr[mr]=Nr[gr]=Nr[vr]=Nr[br]=Nr[$r]=Nr[yr]=Nr[wr]=Nr[xr]=Nr[Sr]=!1;
var Lr=Object.prototype,Ur=Lr.toString,Fr=2,jr="[object Arguments]",_r="[object Array]",qr="[object Object]",Hr=Object.prototype,zr=Hr.hasOwnProperty,Vr=1,Br=2,Wr="Expected a function";Fe.Cache=ve;var Gr,Xr=1/0,Yr=Di?Di.prototype:void 0,Kr=Yr?Yr.toString:void 0,Jr=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g,Qr=/\\(\\)?/g,Zr=Fe(function(e){var t=[];return _e(e).replace(Jr,function(e,n,i,r){t.push(i?r.replace(Qr,"$1"):n||e)}),t}),eo=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,to=/^\w*$/,no=1/0,io=1,ro=2,oo="\\ud800-\\udfff",ao="\\u0300-\\u036f\\ufe20-\\ufe23",so="\\u20d0-\\u20f0",lo="\\ufe0e\\ufe0f",uo="["+oo+"]",co="["+ao+so+"]",po="\\ud83c[\\udffb-\\udfff]",fo="(?:"+co+"|"+po+")",ho="[^"+oo+"]",mo="(?:\\ud83c[\\udde6-\\uddff]){2}",go="[\\ud800-\\udbff][\\udc00-\\udfff]",vo="\\u200d",bo=fo+"?",$o="["+lo+"]?",yo="(?:"+vo+"(?:"+[ho,mo,go].join("|")+")"+$o+bo+")*",wo=$o+bo+yo,xo="(?:"+[ho+co+"?",co,mo,go,uo].join("|")+")",So=RegExp(po+"(?="+po+")|"+xo+wo,"g"),Co=/^\s+|\s+$/g,ko=/^(function[^\(]*)?\(?\s*([^\)=]*)/m,Eo="function"==typeof setImmediate&&setImmediate,To="object"==typeof process&&"function"==typeof process.nextTick;Gr=Eo?setImmediate:To?process.nextTick:ht;var Po,Do=mt(Gr),Ao=I(bt,1),Mo=Array.prototype.reverse,Oo=I(bt,1/0),Ro=St(xt),Io=Ct(xt),No=u(function(e){var t=[null].concat(e);return c(function(e,n){return n.apply(this,t)})}),Lo=kt(Oo,Ke,Et),Uo=kt(bt,Ke,Et),Fo=kt(Ao,Ke,Et),jo=Tt("dir"),_o=I(It,1/0),qo=I(It,1),Ho=kt(bt,Lt,Lt),zo=I(Ho,1/0),Vo=I(Ho,1),Bo=O(Ut),Wo=I(Bo,1/0),Go=I(Bo,1),Xo=Tt("log"),Yo=I(_t,1/0),Ko=I(_t,1);Po=To?process.nextTick:Eo?setImmediate:ht;var Jo=mt(Po),Qo=I(Vt,1/0),Zo=Gt(F),ea=Array.prototype.slice,ta=O(Qt),na=I(ta,1/0),ia=I(ta,1),ra=kt(bt,Boolean,Ke),oa=I(ra,1/0),aa=I(ra,1),sa=Math.ceil,la=Math.max,ua=I(ln,1/0),ca=I(ln,1),pa={applyEach:Jn,applyEachSeries:Zn,apply:ei,asyncify:N,auto:it,autoInject:ft,cargo:vt,compose:wt,concat:Ro,concatSeries:Io,constant:No,detect:Lo,detectLimit:Uo,detectSeries:Fo,dir:jo,doDuring:Dt,doUntil:Ot,doWhilst:Mt,during:Pt,each:_o,eachLimit:It,eachOf:Oo,eachOfLimit:bt,eachOfSeries:Ao,eachSeries:qo,ensureAsync:Nt,every:zo,everyLimit:Ho,everySeries:Vo,filter:Wo,filterLimit:Bo,filterSeries:Go,forever:Ft,iterator:jt,log:Xo,map:Kn,mapLimit:Yn,mapSeries:Qn,mapValues:Yo,mapValuesLimit:_t,mapValuesSeries:Ko,memoize:Ht,nextTick:Jo,parallel:Qo,parallelLimit:Vt,priorityQueue:Wt,queue:Bt,race:Yt,reduce:$t,reduceRight:Kt,reflect:Jt,reflectAll:Zt,reject:na,rejectLimit:ta,rejectSeries:ia,retry:nn,retryable:rn,seq:yt,series:en,setImmediate:Do,some:oa,someLimit:ra,someSeries:aa,sortBy:on,timeout:an,times:ua,timesLimit:ln,timesSeries:ca,transform:un,unmemoize:cn,until:pn,waterfall:dn,whilst:At,all:zo,any:oa,forEach:_o,forEachSeries:qo,forEachLimit:It,forEachOf:Oo,forEachOfSeries:Ao,forEachOfLimit:bt,inject:$t,foldl:$t,foldr:Kt,select:Wo,selectLimit:Bo,selectSeries:Go,wrapSync:N};e["default"]=pa,e.applyEach=Jn,e.applyEachSeries=Zn,e.apply=ei,e.asyncify=N,e.auto=it,e.autoInject=ft,e.cargo=vt,e.compose=wt,e.concat=Ro,e.concatSeries=Io,e.constant=No,e.detect=Lo,e.detectLimit=Uo,e.detectSeries=Fo,e.dir=jo,e.doDuring=Dt,e.doUntil=Ot,e.doWhilst=Mt,e.during=Pt,e.each=_o,e.eachLimit=It,e.eachOf=Oo,e.eachOfLimit=bt,e.eachOfSeries=Ao,e.eachSeries=qo,e.ensureAsync=Nt,e.every=zo,e.everyLimit=Ho,e.everySeries=Vo,e.filter=Wo,e.filterLimit=Bo,e.filterSeries=Go,e.forever=Ft,e.iterator=jt,e.log=Xo,e.map=Kn,e.mapLimit=Yn,e.mapSeries=Qn,e.mapValues=Yo,e.mapValuesLimit=_t,e.mapValuesSeries=Ko,e.memoize=Ht,e.nextTick=Jo,e.parallel=Qo,e.parallelLimit=Vt,e.priorityQueue=Wt,e.queue=Bt,e.race=Yt,e.reduce=$t,e.reduceRight=Kt,e.reflect=Jt,e.reflectAll=Zt,e.reject=na,e.rejectLimit=ta,e.rejectSeries=ia,e.retry=nn,e.retryable=rn,e.seq=yt,e.series=en,e.setImmediate=Do,e.some=oa,e.someLimit=ra,e.someSeries=aa,e.sortBy=on,e.timeout=an,e.times=ua,e.timesLimit=ln,e.timesSeries=ca,e.transform=un,e.unmemoize=cn,e.until=pn,e.waterfall=dn,e.whilst=At,e.all=zo,e.allLimit=Ho,e.allSeries=Vo,e.any=oa,e.anyLimit=ra,e.anySeries=aa,e.find=Lo,e.findLimit=Uo,e.findSeries=Fo,e.forEach=_o,e.forEachSeries=qo,e.forEachLimit=It,e.forEachOf=Oo,e.forEachOfSeries=Ao,e.forEachOfLimit=bt,e.inject=$t,e.foldl=$t,e.foldr=Kt,e.select=Wo,e.selectLimit=Bo,e.selectSeries=Go,e.wrapSync=N}),!function(){"use strict";var e={TAB:9,ENTER:13,ESC:27,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40,SHIFT:16,CTRL:17,ALT:18,PAGE_UP:33,PAGE_DOWN:34,HOME:36,END:35,BACKSPACE:8,DELETE:46,COMMAND:91,MAP:{91:"COMMAND",8:"BACKSPACE",9:"TAB",13:"ENTER",16:"SHIFT",17:"CTRL",18:"ALT",19:"PAUSEBREAK",20:"CAPSLOCK",27:"ESC",32:"SPACE",33:"PAGE_UP",34:"PAGE_DOWN",35:"END",36:"HOME",37:"LEFT",38:"UP",39:"RIGHT",40:"DOWN",43:"+",44:"PRINTSCREEN",45:"INSERT",46:"DELETE",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",61:"=",65:"A",66:"B",67:"C",68:"D",69:"E",70:"F",71:"G",72:"H",73:"I",74:"J",75:"K",76:"L",77:"M",78:"N",79:"O",80:"P",81:"Q",82:"R",83:"S",84:"T",85:"U",86:"V",87:"W",88:"X",89:"Y",90:"Z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",106:"*",107:"+",109:"-",110:".",111:"/",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NUMLOCK",145:"SCROLLLOCK",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},isControl:function(t){var n=t.which;switch(n){case e.COMMAND:case e.SHIFT:case e.CTRL:case e.ALT:return!0}return!!t.metaKey},isFunctionKey:function(e){return e=e.which?e.which:e,e>=112&&123>=e},isVerticalMovement:function(t){return~[e.UP,e.DOWN].indexOf(t)},isHorizontalMovement:function(t){return~[e.LEFT,e.RIGHT,e.BACKSPACE,e.DELETE].indexOf(t)},toSeparator:function(t){var n={ENTER:"\n",TAB:"	",SPACE:" "}[t];return n?n:e[t]?void 0:t}};void 0===angular.element.prototype.querySelectorAll&&(angular.element.prototype.querySelectorAll=function(e){return angular.element(this[0].querySelectorAll(e))}),void 0===angular.element.prototype.closest&&(angular.element.prototype.closest=function(e){for(var t=this[0],n=t.matches||t.webkitMatchesSelector||t.mozMatchesSelector||t.msMatchesSelector;t;){if(n.bind(t)(e))return t;t=t.parentElement}return!1});var t=0,n=angular.module("ui.select",[]).constant("uiSelectConfig",{theme:"bootstrap",searchEnabled:!0,sortable:!1,placeholder:"",refreshDelay:1e3,closeOnSelect:!0,skipFocusser:!1,dropdownPosition:"auto",generateId:function(){return t++},appendToBody:!1}).service("uiSelectMinErr",function(){var e=angular.$$minErr("ui.select");return function(){var t=e.apply(this,arguments),n=t.message.replace(new RegExp("\nhttp://errors.angularjs.org/.*"),"");return new Error(n)}}).directive("uisTranscludeAppend",function(){return{link:function(e,t,n,i,r){r(e,function(e){t.append(e)})}}}).filter("highlight",function(){function e(e){return(""+e).replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}return function(t,n){return n&&t?(""+t).replace(new RegExp(e(n),"gi"),'<span class="ui-select-highlight">$&</span>'):t}}).factory("uisOffset",["$document","$window",function(e,t){return function(n){var i=n[0].getBoundingClientRect();return{width:i.width||n.prop("offsetWidth"),height:i.height||n.prop("offsetHeight"),top:i.top+(t.pageYOffset||e[0].documentElement.scrollTop),left:i.left+(t.pageXOffset||e[0].documentElement.scrollLeft)}}}]);n.directive("uiSelectChoices",["uiSelectConfig","uisRepeatParser","uiSelectMinErr","$compile","$window",function(e,t,n,i,r){return{restrict:"EA",require:"^uiSelect",replace:!0,transclude:!0,templateUrl:function(t){t.addClass("ui-select-choices");var n=t.parent().attr("theme")||e.theme;return n+"/choices.tpl.html"},compile:function(o,a){if(!a.repeat)throw n("repeat","Expected 'repeat' expression.");return function(o,a,s,l,u){var c=s.groupBy,p=s.groupFilter;if(l.parseRepeatAttr(s.repeat,c,p),l.disableChoiceExpression=s.uiDisableChoice,l.onHighlightCallback=s.onHighlight,l.dropdownPosition=s.position?s.position.toLowerCase():e.dropdownPosition,c){var d=a.querySelectorAll(".ui-select-choices-group");if(1!==d.length)throw n("rows","Expected 1 .ui-select-choices-group but got '{0}'.",d.length);d.attr("ng-repeat",t.getGroupNgRepeatExpression())}var f=a.querySelectorAll(".ui-select-choices-row");if(1!==f.length)throw n("rows","Expected 1 .ui-select-choices-row but got '{0}'.",f.length);f.attr("ng-repeat",l.parserResult.repeatExpression(c)).attr("ng-if","$select.open"),r.document.addEventListener&&f.attr("ng-mouseenter","$select.setActiveItem("+l.parserResult.itemName+")").attr("ng-click","$select.select("+l.parserResult.itemName+",$select.skipFocusser,$event)");var h=a.querySelectorAll(".ui-select-choices-row-inner");if(1!==h.length)throw n("rows","Expected 1 .ui-select-choices-row-inner but got '{0}'.",h.length);h.attr("uis-transclude-append",""),r.document.addEventListener||h.attr("ng-mouseenter","$select.setActiveItem("+l.parserResult.itemName+")").attr("ng-click","$select.select("+l.parserResult.itemName+",$select.skipFocusser,$event)"),i(a,u)(o),o.$watch("$select.search",function(e){e&&!l.open&&l.multiple&&l.activate(!1,!0),l.activeIndex=l.tagging.isActivated?-1:0,!s.minimumInputLength||l.search.length>=s.minimumInputLength?l.refresh(s.refresh):l.items=[]}),s.$observe("refreshDelay",function(){var t=o.$eval(s.refreshDelay);l.refreshDelay=void 0!==t?t:e.refreshDelay})}}}}]),n.controller("uiSelectCtrl",["$scope","$element","$timeout","$filter","uisRepeatParser","uiSelectMinErr","uiSelectConfig","$parse","$injector","$window",function(t,n,i,r,o,a,s,l,u,c){function p(e,t,n){if(e.findIndex)return e.findIndex(t,n);for(var i,r=Object(e),o=r.length>>>0,a=0;o>a;a++)if(i=r[a],t.call(n,i,a,r))return a;return-1}function d(){(g.resetSearchInput||void 0===g.resetSearchInput&&s.resetSearchInput)&&(g.search=v,g.selected&&g.items.length&&!g.multiple&&(g.activeIndex=p(g.items,function(e){return angular.equals(this,e)},g.selected)))}function f(e,t){var n,i,r=[];for(n=0;n<t.length;n++)for(i=0;i<e.length;i++)e[i].name==[t[n]]&&r.push(e[i]);return r}function h(t){var n=!0;switch(t){case e.DOWN:!g.open&&g.multiple?g.activate(!1,!0):g.activeIndex<g.items.length-1&&g.activeIndex++;break;case e.UP:!g.open&&g.multiple?g.activate(!1,!0):(g.activeIndex>0||0===g.search.length&&g.tagging.isActivated&&g.activeIndex>-1)&&g.activeIndex--;break;case e.TAB:(!g.multiple||g.open)&&g.select(g.items[g.activeIndex],!0);break;case e.ENTER:g.open&&(g.tagging.isActivated||g.activeIndex>=0)?g.select(g.items[g.activeIndex],g.skipFocusser):g.activate(!1,!0);break;case e.ESC:g.close();break;default:n=!1}return n}function m(){var e=n.querySelectorAll(".ui-select-choices-content"),t=e.querySelectorAll(".ui-select-choices-row");if(t.length<1)throw a("choices","Expected multiple .ui-select-choices-row but got '{0}'.",t.length);if(!(g.activeIndex<0)){var i=t[g.activeIndex],r=i.offsetTop+i.clientHeight-e[0].scrollTop,o=e[0].offsetHeight;r>o?e[0].scrollTop+=r-o:r<i.clientHeight&&(g.isGrouped&&0===g.activeIndex?e[0].scrollTop=0:e[0].scrollTop-=i.clientHeight-r)}}var g=this,v="";if(g.placeholder=s.placeholder,g.searchEnabled=s.searchEnabled,g.sortable=s.sortable,g.refreshDelay=s.refreshDelay,g.paste=s.paste,g.removeSelected=!1,g.closeOnSelect=!0,g.skipFocusser=!1,g.search=v,g.activeIndex=0,g.items=[],g.open=!1,g.focus=!1,g.disabled=!1,g.selected=void 0,g.dropdownPosition="auto",g.focusser=void 0,g.resetSearchInput=!0,g.multiple=void 0,g.disableChoiceExpression=void 0,g.tagging={isActivated:!1,fct:void 0},g.taggingTokens={isActivated:!1,tokens:void 0},g.lockChoiceExpression=void 0,g.clickTriggeredSelect=!1,g.$filter=r,g.$animate=function(){try{return u.get("$animate")}catch(e){return null}}(),g.searchInput=n.querySelectorAll("input.ui-select-search"),1!==g.searchInput.length)throw a("searchInput","Expected 1 input.ui-select-search but got '{0}'.",g.searchInput.length);g.isEmpty=function(){return angular.isUndefined(g.selected)||null===g.selected||""===g.selected||g.multiple&&0===g.selected.length},g.activate=function(e,r){if(!g.disabled&&!g.open){r||d(),t.$broadcast("uis:activate"),g.open=!0,g.activeIndex=g.activeIndex>=g.items.length?0:g.activeIndex,-1===g.activeIndex&&g.taggingLabel!==!1&&(g.activeIndex=0);var o=n.querySelectorAll(".ui-select-choices-content");g.$animate&&g.$animate.on&&g.$animate.enabled(o[0])?g.$animate.on("enter",o[0],function(t,n){"close"===n&&i(function(){g.focusSearchInput(e)})}):i(function(){g.focusSearchInput(e),!g.tagging.isActivated&&g.items.length>1&&m()})}},g.focusSearchInput=function(e){g.search=e||g.search,g.searchInput[0].focus()},g.findGroupByName=function(e){return g.groups&&g.groups.filter(function(t){return t.name===e})[0]},g.parseRepeatAttr=function(e,n,i){function r(e){var r=t.$eval(n);if(g.groups=[],angular.forEach(e,function(e){var t=angular.isFunction(r)?r(e):e[r],n=g.findGroupByName(t);n?n.items.push(e):g.groups.push({name:t,items:[e]})}),i){var o=t.$eval(i);angular.isFunction(o)?g.groups=o(g.groups):angular.isArray(o)&&(g.groups=f(g.groups,o))}g.items=[],g.groups.forEach(function(e){g.items=g.items.concat(e.items)})}function s(e){g.items=e}g.setItemsFn=n?r:s,g.parserResult=o.parse(e),g.isGrouped=!!n,g.itemProperty=g.parserResult.itemName;var u=g.parserResult.source,c=function(){var e=u(t);t.$uisSource=Object.keys(e).map(function(t){var n={};return n[g.parserResult.keyName]=t,n.value=e[t],n})};g.parserResult.keyName&&(c(),g.parserResult.source=l("$uisSource"+g.parserResult.filters),t.$watch(u,function(e,t){e!==t&&c()},!0)),g.refreshItems=function(e){e=e||g.parserResult.source(t);var n=g.selected;if(g.isEmpty()||angular.isArray(n)&&!n.length||!g.removeSelected)g.setItemsFn(e);else if(void 0!==e){var i=e.filter(function(e){return n.every(function(t){return!angular.equals(e,t)})});g.setItemsFn(i)}("auto"===g.dropdownPosition||"up"===g.dropdownPosition)&&t.calculateDropdownPos()},t.$watchCollection(g.parserResult.source,function(e){if(void 0===e||null===e)g.items=[];else{if(!angular.isArray(e))throw a("items","Expected an array but got '{0}'.",e);g.refreshItems(e),g.ngModel.$modelValue=null}})};var b;g.refresh=function(e){void 0!==e&&(b&&i.cancel(b),b=i(function(){t.$eval(e)},g.refreshDelay))},g.isActive=function(e){if(!g.open)return!1;var t=g.items.indexOf(e[g.itemProperty]),n=t==g.activeIndex;return!n||0>t&&g.taggingLabel!==!1||0>t&&g.taggingLabel===!1?!1:(n&&!angular.isUndefined(g.onHighlightCallback)&&e.$eval(g.onHighlightCallback),n)},g.isDisabled=function(e){if(g.open){var t,n=g.items.indexOf(e[g.itemProperty]),i=!1;return n>=0&&!angular.isUndefined(g.disableChoiceExpression)&&(t=g.items[n],i=!!e.$eval(g.disableChoiceExpression),t._uiSelectChoiceDisabled=i),i}},g.select=function(e,n,r){if(void 0===e||!e._uiSelectChoiceDisabled){if(!g.items&&!g.search&&!g.tagging.isActivated)return;if(!e||!e._uiSelectChoiceDisabled){if(g.tagging.isActivated){if(g.taggingLabel===!1)if(g.activeIndex<0){if(e=void 0!==g.tagging.fct?g.tagging.fct(g.search):g.search,!e||angular.equals(g.items[0],e))return}else e=g.items[g.activeIndex];else if(0===g.activeIndex){if(void 0===e)return;if(void 0!==g.tagging.fct&&"string"==typeof e){if(e=g.tagging.fct(e),!e)return}else"string"==typeof e&&(e=e.replace(g.taggingLabel,"").trim())}if(g.selected&&angular.isArray(g.selected)&&g.selected.filter(function(t){return angular.equals(t,e)}).length>0)return void g.close(n)}t.$broadcast("uis:select",e);var o={};o[g.parserResult.itemName]=e,i(function(){g.onSelectCallback(t,{$item:e,$model:g.parserResult.modelMapper(t,o)})}),g.closeOnSelect&&g.close(n),r&&"click"===r.type&&(g.clickTriggeredSelect=!0)}}},g.close=function(e){g.open&&(g.ngModel&&g.ngModel.$setTouched&&g.ngModel.$setTouched(),d(),g.open=!1,t.$broadcast("uis:close",e))},g.setFocus=function(){g.focus||g.focusInput[0].focus()},g.clear=function(e){g.select(void 0),e.stopPropagation(),i(function(){g.focusser[0].focus()},0,!1)},g.toggle=function(e){g.open?(g.close(),e.preventDefault(),e.stopPropagation()):g.activate()},g.isLocked=function(e,t){var n,i=g.selected[t];return i&&!angular.isUndefined(g.lockChoiceExpression)&&(n=!!e.$eval(g.lockChoiceExpression),i._uiSelectChoiceLocked=n),n};var $=null;g.sizeSearchInput=function(){var e=g.searchInput[0],n=g.searchInput.parent().parent()[0],r=function(){return n.clientWidth*!!e.offsetParent},o=function(t){if(0===t)return!1;var n=t-e.offsetLeft-10;return 50>n&&(n=t),g.searchInput.css("width",n+"px"),!0};g.searchInput.css("width","10px"),i(function(){null!==$||o(r())||($=t.$watch(r,function(e){o(e)&&($(),$=null)}))})},g.searchInput.on("keydown",function(n){var r=n.which;~[e.ENTER,e.ESC].indexOf(r)&&(n.preventDefault(),n.stopPropagation()),t.$apply(function(){var t=!1;if((g.items.length>0||g.tagging.isActivated)&&(h(r),g.taggingTokens.isActivated)){for(var o=0;o<g.taggingTokens.tokens.length;o++)g.taggingTokens.tokens[o]===e.MAP[n.keyCode]&&g.search.length>0&&(t=!0);t&&i(function(){g.searchInput.triggerHandler("tagged");var t=g.search.replace(e.MAP[n.keyCode],"").trim();g.tagging.fct&&(t=g.tagging.fct(t)),t&&g.select(t,!0)})}}),e.isVerticalMovement(r)&&g.items.length>0&&m(),(r===e.ENTER||r===e.ESC)&&(n.preventDefault(),n.stopPropagation())}),g.searchInput.on("paste",function(t){var n;if(n=window.clipboardData&&window.clipboardData.getData?window.clipboardData.getData("Text"):(t.originalEvent||t).clipboardData.getData("text/plain"),n=g.search+n,n&&n.length>0)if(g.taggingTokens.isActivated){var i=e.toSeparator(g.taggingTokens.tokens[0]),r=n.split(i||g.taggingTokens.tokens[0]);if(r&&r.length>0){var o=g.search;angular.forEach(r,function(e){var t=g.tagging.fct?g.tagging.fct(e):e;t&&g.select(t,!0)}),g.search=o||v,t.preventDefault(),t.stopPropagation()}}else g.paste&&(g.paste(n),g.search=v,t.preventDefault(),t.stopPropagation())}),g.searchInput.on("tagged",function(){i(function(){d()})}),t.$on("$destroy",function(){g.searchInput.off("keyup keydown tagged blur paste")}),angular.element(c).bind("resize",function(){g.sizeSearchInput()})}]),n.directive("uiSelect",["$document","uiSelectConfig","uiSelectMinErr","uisOffset","$compile","$parse","$timeout",function(e,t,n,i,r,o,a){return{restrict:"EA",templateUrl:function(e,n){var i=n.theme||t.theme;return i+(angular.isDefined(n.multiple)?"/select-multiple.tpl.html":"/select.tpl.html")},replace:!0,transclude:!0,require:["uiSelect","^ngModel"],scope:!0,controller:"uiSelectCtrl",controllerAs:"$select",compile:function(r,s){var l=/{(.*)}\s*{(.*)}/.exec(s.ngClass);if(l){var u="{"+l[1]+", "+l[2]+"}";s.ngClass=u,r.attr("ng-class",u)}return angular.isDefined(s.multiple)?r.append("<ui-select-multiple/>").removeAttr("multiple"):r.append("<ui-select-single/>"),s.inputId&&(r.querySelectorAll("input.ui-select-search")[0].id=s.inputId),function(r,s,l,u,c){function p(e){if(h.open){var t=!1;if(t=window.jQuery?window.jQuery.contains(s[0],e.target):s[0].contains(e.target),!t&&!h.clickTriggeredSelect){var n;if(h.skipFocusser)n=!0;else{var i=["input","button","textarea","select"],o=angular.element(e.target).controller("uiSelect");n=o&&o!==h,n||(n=~i.indexOf(e.target.tagName.toLowerCase()))}h.close(n),r.$digest()}h.clickTriggeredSelect=!1}}function d(){var t=i(s);v=angular.element('<div class="ui-select-placeholder"></div>'),v[0].style.width=t.width+"px",v[0].style.height=t.height+"px",s.after(v),b=s[0].style.width,e.find("body").append(s),s[0].style.position="absolute",s[0].style.left=t.left+"px",s[0].style.top=t.top+"px",s[0].style.width=t.width+"px"}function f(){null!==v&&(v.replaceWith(s),v=null,s[0].style.position="",s[0].style.left="",s[0].style.top="",s[0].style.width=b,h.setFocus())}var h=u[0],m=u[1];h.generatedId=t.generateId(),h.baseTitle=l.title||"Select box",h.focusserTitle=h.baseTitle+" focus",h.focusserId="focusser-"+h.generatedId,h.closeOnSelect=function(){return angular.isDefined(l.closeOnSelect)?o(l.closeOnSelect)():t.closeOnSelect}(),r.$watch("skipFocusser",function(){var e=r.$eval(l.skipFocusser);h.skipFocusser=void 0!==e?e:t.skipFocusser}),h.onSelectCallback=o(l.onSelect),h.onRemoveCallback=o(l.onRemove),h.limit=angular.isDefined(l.limit)?parseInt(l.limit,10):void 0,h.ngModel=m,h.choiceGrouped=function(e){return h.isGrouped&&e&&e.name},l.tabindex&&l.$observe("tabindex",function(e){h.focusInput.attr("tabindex",e),s.removeAttr("tabindex")}),r.$watch("searchEnabled",function(){var e=r.$eval(l.searchEnabled);h.searchEnabled=void 0!==e?e:t.searchEnabled}),r.$watch("sortable",function(){var e=r.$eval(l.sortable);h.sortable=void 0!==e?e:t.sortable}),l.$observe("disabled",function(){h.disabled=void 0!==l.disabled?l.disabled:!1}),l.$observe("resetSearchInput",function(){var e=r.$eval(l.resetSearchInput);h.resetSearchInput=void 0!==e?e:!0}),l.$observe("paste",function(){h.paste=r.$eval(l.paste)}),l.$observe("tagging",function(){if(void 0!==l.tagging){var e=r.$eval(l.tagging);h.tagging={isActivated:!0,fct:e!==!0?e:void 0}}else h.tagging={isActivated:!1,fct:void 0}}),l.$observe("taggingLabel",function(){void 0!==l.tagging&&(h.taggingLabel="false"===l.taggingLabel?!1:void 0!==l.taggingLabel?l.taggingLabel:"(new)")}),l.$observe("taggingTokens",function(){if(void 0!==l.tagging){var e=void 0!==l.taggingTokens?l.taggingTokens.split("|"):[",","ENTER"];h.taggingTokens={isActivated:!0,tokens:e}}}),angular.isDefined(l.autofocus)&&a(function(){h.setFocus()}),angular.isDefined(l.focusOn)&&r.$on(l.focusOn,function(){a(function(){h.setFocus()})}),e.on("click",p),r.$on("$destroy",function(){e.off("click",p)}),c(r,function(e){var t=angular.element("<div>").append(e),i=t.querySelectorAll(".ui-select-match");if(i.removeAttr("ui-select-match"),i.removeAttr("data-ui-select-match"),1!==i.length)throw n("transcluded","Expected 1 .ui-select-match but got '{0}'.",i.length);s.querySelectorAll(".ui-select-match").replaceWith(i);var r=t.querySelectorAll(".ui-select-choices");if(r.removeAttr("ui-select-choices"),r.removeAttr("data-ui-select-choices"),1!==r.length)throw n("transcluded","Expected 1 .ui-select-choices but got '{0}'.",r.length);s.querySelectorAll(".ui-select-choices").replaceWith(r)});var g=r.$eval(l.appendToBody);(void 0!==g?g:t.appendToBody)&&(r.$watch("$select.open",function(e){e?d():f()}),r.$on("$destroy",function(){f()}));var v=null,b="",$=null,y="direction-up";r.$watch("$select.open",function(){("auto"===h.dropdownPosition||"up"===h.dropdownPosition)&&r.calculateDropdownPos()});var w=function(e,t){e=e||i(s),t=t||i($),$[0].style.position="absolute",$[0].style.top=-1*t.height+"px",s.addClass(y)},x=function(e,t){s.removeClass(y),e=e||i(s),t=t||i($),$[0].style.position="",$[0].style.top=""};r.calculateDropdownPos=function(){if(h.open){if($=angular.element(s).querySelectorAll(".ui-select-dropdown"),0===$.length)return;$[0].style.opacity=0,a(function(){if("up"===h.dropdownPosition)w();else{s.removeClass(y);var t=i(s),n=i($),r=e[0].documentElement.scrollTop||e[0].body.scrollTop;t.top+t.height+n.height>r+e[0].documentElement.clientHeight?w(t,n):x(t,n)}$[0].style.opacity=1})}else{if(null===$||0===$.length)return;$[0].style.position="",$[0].style.top="",s.removeClass(y)}}}}}}]),n.directive("uiSelectMatch",["uiSelectConfig",function(e){return{restrict:"EA",require:"^uiSelect",replace:!0,transclude:!0,templateUrl:function(t){t.addClass("ui-select-match");var n=t.parent().attr("theme")||e.theme,i=t.parent().attr("multiple");return n+(i?"/match-multiple.tpl.html":"/match.tpl.html")},link:function(t,n,i,r){function o(e){r.allowClear=angular.isDefined(e)?""===e?!0:"true"===e.toLowerCase():!1}r.lockChoiceExpression=i.uiLockChoice,i.$observe("placeholder",function(t){r.placeholder=void 0!==t?t:e.placeholder}),i.$observe("allowClear",o),o(i.allowClear),r.multiple&&r.sizeSearchInput()}}}]),n.directive("uiSelectMultiple",["uiSelectMinErr","$timeout",function(t,n){return{restrict:"EA",require:["^uiSelect","^ngModel"],controller:["$scope","$timeout",function(e,t){var n,i=this,r=e.$select;angular.isUndefined(r.selected)&&(r.selected=[]),e.$evalAsync(function(){n=e.ngModel}),i.activeMatchIndex=-1,i.updateModel=function(){n.$setViewValue(Date.now()),i.refreshComponent()},i.refreshComponent=function(){r.refreshItems(),r.sizeSearchInput()},i.removeChoice=function(n){var o=r.selected[n];if(!o._uiSelectChoiceLocked){var a={};a[r.parserResult.itemName]=o,r.selected.splice(n,1),i.activeMatchIndex=-1,r.sizeSearchInput(),t(function(){r.onRemoveCallback(e,{$item:o,$model:r.parserResult.modelMapper(e,a)})}),i.updateModel()}},i.getPlaceholder=function(){return r.selected&&r.selected.length?void 0:r.placeholder}}],controllerAs:"$selectMultiple",link:function(i,r,o,a){function s(e){return angular.isNumber(e.selectionStart)?e.selectionStart:e.value.length}function l(t){function n(){switch(t){case e.LEFT:return~f.activeMatchIndex?c:a;case e.RIGHT:return~f.activeMatchIndex&&l!==a?u:(p.activate(),!1);case e.BACKSPACE:return~f.activeMatchIndex?(f.removeChoice(l),c):a;case e.DELETE:return~f.activeMatchIndex?(f.removeChoice(f.activeMatchIndex),l):!1}}var i=s(p.searchInput[0]),r=p.selected.length,o=0,a=r-1,l=f.activeMatchIndex,u=f.activeMatchIndex+1,c=f.activeMatchIndex-1,d=l;return i>0||p.search.length&&t==e.RIGHT?!1:(p.close(),d=n(),f.activeMatchIndex=p.selected.length&&d!==!1?Math.min(a,Math.max(o,d)):-1,!0)}function u(e){if(void 0===e||void 0===p.search)return!1;var t=e.filter(function(e){return void 0===p.search.toUpperCase()||void 0===e?!1:e.toUpperCase()===p.search.toUpperCase()}).length>0;return t}function c(e,t){var n=-1;if(angular.isArray(e))for(var i=angular.copy(e),r=0;r<i.length;r++)if(void 0===p.tagging.fct)i[r]+" "+p.taggingLabel===t&&(n=r);else{var o=i[r];angular.isObject(o)&&(o.isTag=!0),angular.equals(o,t)&&(n=r)}return n}var p=a[0],d=i.ngModel=a[1],f=i.$selectMultiple;p.multiple=!0,p.removeSelected=!0,p.focusInput=p.searchInput,d.$isEmpty=function(e){return!e||0===e.length},d.$parsers.unshift(function(){for(var e,t={},n=[],r=p.selected.length-1;r>=0;r--)t={},t[p.parserResult.itemName]=p.selected[r],e=p.parserResult.modelMapper(i,t),n.unshift(e);return n}),d.$formatters.unshift(function(e){var t,n=p.parserResult.source(i,{$select:{search:""}}),r={};if(!n)return e;var o=[],a=function(e,n){if(e&&e.length){for(var a=e.length-1;a>=0;a--){if(r[p.parserResult.itemName]=e[a],t=p.parserResult.modelMapper(i,r),p.parserResult.trackByExp){var s=/(\w*)\./.exec(p.parserResult.trackByExp),l=/\.([^\s]+)/.exec(p.parserResult.trackByExp);if(s&&s.length>0&&s[1]==p.parserResult.itemName&&l&&l.length>0&&t[l[1]]==n[l[1]])return o.unshift(e[a]),!0}if(angular.equals(t,n))return o.unshift(e[a]),!0}return!1}};if(!e)return o;for(var s=e.length-1;s>=0;s--)a(p.selected,e[s])||a(n,e[s])||o.unshift(e[s]);return o}),i.$watchCollection(function(){return d.$modelValue},function(e,t){t!=e&&(d.$modelValue=null,f.refreshComponent())}),d.$render=function(){if(!angular.isArray(d.$viewValue)){if(!angular.isUndefined(d.$viewValue)&&null!==d.$viewValue)throw t("multiarr","Expected model value to be array but got '{0}'",d.$viewValue);p.selected=[]}p.selected=d.$viewValue,f.refreshComponent(),i.$evalAsync()},i.$on("uis:select",function(e,t){p.selected.length>=p.limit||(p.selected.push(t),f.updateModel())}),i.$on("uis:activate",function(){f.activeMatchIndex=-1}),i.$watch("$select.disabled",function(e,t){t&&!e&&p.sizeSearchInput()}),p.searchInput.on("keydown",function(t){var n=t.which;i.$apply(function(){var i=!1;e.isHorizontalMovement(n)&&(i=l(n)),i&&n!=e.TAB&&(t.preventDefault(),t.stopPropagation())})}),p.searchInput.on("keyup",function(t){if(e.isVerticalMovement(t.which)||i.$evalAsync(function(){p.activeIndex=p.taggingLabel===!1?-1:0}),p.tagging.isActivated&&p.search.length>0){if(t.which===e.TAB||e.isControl(t)||e.isFunctionKey(t)||t.which===e.ESC||e.isVerticalMovement(t.which))return;if(p.activeIndex=p.taggingLabel===!1?-1:0,p.taggingLabel===!1)return;var n,r,o,a,s=angular.copy(p.items),l=angular.copy(p.items),d=!1,f=-1;if(void 0!==p.tagging.fct){if(o=p.$filter("filter")(s,{isTag:!0}),o.length>0&&(a=o[0]),s.length>0&&a&&(d=!0,s=s.slice(1,s.length),l=l.slice(1,l.length)),n=p.tagging.fct(p.search),l.some(function(e){return angular.equals(e,p.tagging.fct(p.search))})||p.selected.some(function(e){return angular.equals(e,n)}))return void i.$evalAsync(function(){p.activeIndex=0,p.items=s});n.isTag=!0}else{if(o=p.$filter("filter")(s,function(e){return e.match(p.taggingLabel)}),o.length>0&&(a=o[0]),r=s[0],void 0!==r&&s.length>0&&a&&(d=!0,s=s.slice(1,s.length),l=l.slice(1,l.length)),n=p.search+" "+p.taggingLabel,c(p.selected,p.search)>-1)return;if(u(l.concat(p.selected)))return void(d&&(s=l,i.$evalAsync(function(){p.activeIndex=0,p.items=s})));if(u(l))return void(d&&(p.items=l.slice(1,l.length)))}d&&(f=c(p.selected,n)),f>-1?s=s.slice(f+1,s.length-1):(s=[],s.push(n),s=s.concat(l)),i.$evalAsync(function(){p.activeIndex=0,p.items=s})}}),p.searchInput.on("blur",function(){n(function(){f.activeMatchIndex=-1})})}}}]),n.directive("uiSelectSingle",["$timeout","$compile",function(t,n){return{restrict:"EA",require:["^uiSelect","^ngModel"],link:function(i,r,o,a){var s=a[0],l=a[1];l.$parsers.unshift(function(e){var t,n={};return n[s.parserResult.itemName]=e,t=s.parserResult.modelMapper(i,n)}),l.$formatters.unshift(function(e){var t,n=s.parserResult.source(i,{$select:{search:""}}),r={};if(n){var o=function(n){return r[s.parserResult.itemName]=n,t=s.parserResult.modelMapper(i,r),t==e};if(s.selected&&o(s.selected))return s.selected;for(var a=n.length-1;a>=0;a--)if(o(n[a]))return n[a]}return e}),i.$watch("$select.selected",function(e){l.$viewValue!==e&&l.$setViewValue(e)}),l.$render=function(){s.selected=l.$viewValue},i.$on("uis:select",function(e,t){s.selected=t}),i.$on("uis:close",function(e,n){t(function(){s.focusser.prop("disabled",!1),n||s.focusser[0].focus()},0,!1)}),i.$on("uis:activate",function(){u.prop("disabled",!0)});var u=angular.element("<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />");n(u)(i),s.focusser=u,s.focusInput=u,r.parent().append(u),u.bind("focus",function(){i.$evalAsync(function(){s.focus=!0})}),u.bind("blur",function(){i.$evalAsync(function(){s.focus=!1})}),u.bind("keydown",function(t){return t.which===e.BACKSPACE?(t.preventDefault(),t.stopPropagation(),s.select(void 0),void i.$apply()):void(t.which===e.TAB||e.isControl(t)||e.isFunctionKey(t)||t.which===e.ESC||((t.which==e.DOWN||t.which==e.UP||t.which==e.ENTER||t.which==e.SPACE)&&(t.preventDefault(),t.stopPropagation(),s.activate()),i.$digest()))}),u.bind("keyup input",function(t){t.which===e.TAB||e.isControl(t)||e.isFunctionKey(t)||t.which===e.ESC||t.which==e.ENTER||t.which===e.BACKSPACE||(s.activate(u.val()),u.val(""),i.$digest())})}}}]),n.directive("uiSelectSort",["$timeout","uiSelectConfig","uiSelectMinErr",function(e,t,n){return{require:"^^uiSelect",link:function(t,i,r,o){if(null===t[r.uiSelectSort])throw n("sort","Expected a list to sort");var a=angular.extend({axis:"horizontal"},t.$eval(r.uiSelectSortOptions)),s=a.axis,l="dragging",u="dropping",c="dropping-before",p="dropping-after";t.$watch(function(){return o.sortable},function(e){e?i.attr("draggable",!0):i.removeAttr("draggable")}),i.on("dragstart",function(e){i.addClass(l),(e.dataTransfer||e.originalEvent.dataTransfer).setData("text",t.$index.toString())}),i.on("dragend",function(){i.removeClass(l)});var d,f=function(e,t){this.splice(t,0,this.splice(e,1)[0])},h=function(e){e.preventDefault();var t="vertical"===s?e.offsetY||e.layerY||(e.originalEvent?e.originalEvent.offsetY:0):e.offsetX||e.layerX||(e.originalEvent?e.originalEvent.offsetX:0);t<this["vertical"===s?"offsetHeight":"offsetWidth"]/2?(i.removeClass(p),i.addClass(c)):(i.removeClass(c),i.addClass(p))},m=function(t){t.preventDefault();var n=parseInt((t.dataTransfer||t.originalEvent.dataTransfer).getData("text"),10);e.cancel(d),d=e(function(){g(n)},20)},g=function(e){var n=t.$eval(r.uiSelectSort),o=n[e],a=null;a=i.hasClass(c)?e<t.$index?t.$index-1:t.$index:e<t.$index?t.$index:t.$index+1,f.apply(n,[e,a]),t.$apply(function(){t.$emit("uiSelectSort:change",{array:n,item:o,from:e,to:a})}),i.removeClass(u),
i.removeClass(c),i.removeClass(p),i.off("drop",m)};i.on("dragenter",function(){i.hasClass(l)||(i.addClass(u),i.on("dragover",h),i.on("drop",m))}),i.on("dragleave",function(e){e.target==i&&(i.removeClass(u),i.removeClass(c),i.removeClass(p),i.off("dragover",h),i.off("drop",m))})}}}]),n.service("uisRepeatParser",["uiSelectMinErr","$parse",function(e,t){var n=this;n.parse=function(n){var i;if(i=n.match(/^\s*(?:([\s\S]+?)\s+as\s+)?(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+(\s*[\s\S]+?)?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),!i)throw e("iexp","Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.",n);var r=i[5],o="";if(i[3]){r=i[5].replace(/(^\()|(\)$)/g,"");var a=i[5].match(/^\s*(?:[\s\S]+?)(?:[^\|]|\|\|)+([\s\S]*)\s*$/);a&&a[1].trim()&&(o=a[1],r=r.replace(o,""))}return{itemName:i[4]||i[2],keyName:i[3],source:t(r),filters:o,trackByExp:i[6],modelMapper:t(i[1]||i[4]||i[2]),repeatExpression:function(e){var t=this.itemName+" in "+(e?"$group.items":"$select.items");return this.trackByExp&&(t+=" track by "+this.trackByExp),t}}},n.getGroupNgRepeatExpression=function(){return"$group in $select.groups"}}])}(),angular.module("ui.select").run(["$templateCache",function(e){e.put("bootstrap/choices.tpl.html",'<ul class="ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu" role="listbox" ng-show="$select.open"><li class="ui-select-choices-group" id="ui-select-choices-{{ $select.generatedId }}"><div class="divider" ng-show="$select.isGrouped && $index > 0"></div><div ng-show="$select.isGrouped" class="ui-select-choices-group-label dropdown-header" ng-bind="$group.name"></div><div id="ui-select-choices-row-{{ $select.generatedId }}-{{$index}}" class="ui-select-choices-row" ng-class="{active: $select.isActive(this), disabled: $select.isDisabled(this)}" role="option"><a href="" class="ui-select-choices-row-inner"></a></div></li></ul>'),e.put("bootstrap/match-multiple.tpl.html",'<span class="ui-select-match"><span ng-repeat="$item in $select.selected"><span class="ui-select-match-item btn btn-default btn-xs" tabindex="-1" type="button" ng-disabled="$select.disabled" ng-click="$selectMultiple.activeMatchIndex = $index;" ng-class="{\'btn-primary\':$selectMultiple.activeMatchIndex === $index, \'select-locked\':$select.isLocked(this, $index)}" ui-select-sort="$select.selected"><span class="close ui-select-match-close" ng-hide="$select.disabled" ng-click="$selectMultiple.removeChoice($index)">&nbsp;&times;</span> <span uis-transclude-append=""></span></span></span></span>'),e.put("bootstrap/match.tpl.html",'<div class="ui-select-match" ng-hide="$select.open" ng-disabled="$select.disabled" ng-class="{\'btn-default-focus\':$select.focus}"><span tabindex="-1" class="btn btn-default form-control ui-select-toggle" aria-label="{{ $select.baseTitle }} activate" ng-disabled="$select.disabled" ng-click="$select.activate()" style="outline: 0;"><span ng-show="$select.isEmpty()" class="ui-select-placeholder text-muted">{{$select.placeholder}}</span> <span ng-hide="$select.isEmpty()" class="ui-select-match-text pull-left" ng-class="{\'ui-select-allow-clear\': $select.allowClear && !$select.isEmpty()}" ng-transclude=""></span> <i class="caret pull-right" ng-click="$select.toggle($event)"></i> <a ng-show="$select.allowClear && !$select.isEmpty()" aria-label="{{ $select.baseTitle }} clear" style="margin-right: 10px" ng-click="$select.clear($event)" class="btn btn-xs btn-link pull-right"><i class="glyphicon glyphicon-remove" aria-hidden="true"></i></a></span></div>'),e.put("bootstrap/select-multiple.tpl.html",'<div class="ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control" ng-class="{open: $select.open}"><div><div class="ui-select-match"></div><input type="text" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" class="ui-select-search input-xs" placeholder="{{$selectMultiple.getPlaceholder()}}" ng-disabled="$select.disabled" ng-hide="$select.disabled" ng-click="$select.activate()" ng-model="$select.search" role="combobox" aria-label="{{ $select.baseTitle }}" ondrop="return false;"></div><div class="ui-select-choices"></div></div>'),e.put("bootstrap/select.tpl.html",'<div class="ui-select-container ui-select-bootstrap dropdown" ng-class="{open: $select.open}"><div class="ui-select-match"></div><input type="text" autocomplete="off" tabindex="-1" aria-expanded="true" aria-label="{{ $select.baseTitle }}" aria-owns="ui-select-choices-{{ $select.generatedId }}" aria-activedescendant="ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}" class="form-control ui-select-search" placeholder="{{$select.placeholder}}" ng-model="$select.search" ng-show="$select.searchEnabled && $select.open"><div class="ui-select-choices"></div></div>'),e.put("select2/choices.tpl.html",'<ul class="ui-select-choices ui-select-choices-content select2-results"><li class="ui-select-choices-group" ng-class="{\'select2-result-with-children\': $select.choiceGrouped($group) }"><div ng-show="$select.choiceGrouped($group)" class="ui-select-choices-group-label select2-result-label" ng-bind="$group.name"></div><ul role="listbox" id="ui-select-choices-{{ $select.generatedId }}" ng-class="{\'select2-result-sub\': $select.choiceGrouped($group), \'select2-result-single\': !$select.choiceGrouped($group) }"><li role="option" id="ui-select-choices-row-{{ $select.generatedId }}-{{$index}}" class="ui-select-choices-row" ng-class="{\'select2-highlighted\': $select.isActive(this), \'select2-disabled\': $select.isDisabled(this)}"><div class="select2-result-label ui-select-choices-row-inner"></div></li></ul></li></ul>'),e.put("select2/match-multiple.tpl.html",'<span class="ui-select-match"><li class="ui-select-match-item select2-search-choice" ng-repeat="$item in $select.selected" ng-class="{\'select2-search-choice-focus\':$selectMultiple.activeMatchIndex === $index, \'select2-locked\':$select.isLocked(this, $index)}" ui-select-sort="$select.selected"><span uis-transclude-append=""></span> <a href="javascript:;" class="ui-select-match-close select2-search-choice-close" ng-click="$selectMultiple.removeChoice($index)" tabindex="-1"></a></li></span>'),e.put("select2/match.tpl.html",'<a class="select2-choice ui-select-match" ng-class="{\'select2-default\': $select.isEmpty()}" ng-click="$select.toggle($event)" aria-label="{{ $select.baseTitle }} select"><span ng-show="$select.isEmpty()" class="select2-chosen">{{$select.placeholder}}</span> <span ng-hide="$select.isEmpty()" class="select2-chosen" ng-transclude=""></span> <abbr ng-if="$select.allowClear && !$select.isEmpty()" class="select2-search-choice-close" ng-click="$select.clear($event)"></abbr> <span class="select2-arrow ui-select-toggle"><b></b></span></a>'),e.put("select2/select-multiple.tpl.html",'<div class="ui-select-container ui-select-multiple select2 select2-container select2-container-multi" ng-class="{\'select2-container-active select2-dropdown-open open\': $select.open, \'select2-container-disabled\': $select.disabled}"><ul class="select2-choices"><span class="ui-select-match"></span><li class="select2-search-field"><input type="text" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="combobox" aria-expanded="true" aria-owns="ui-select-choices-{{ $select.generatedId }}" aria-label="{{ $select.baseTitle }}" aria-activedescendant="ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}" class="select2-input ui-select-search" placeholder="{{$selectMultiple.getPlaceholder()}}" ng-disabled="$select.disabled" ng-hide="$select.disabled" ng-model="$select.search" ng-click="$select.activate()" style="width: 34px;" ondrop="return false;"></li></ul><div class="ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active" ng-class="{\'select2-display-none\': !$select.open}"><div class="ui-select-choices"></div></div></div>'),e.put("select2/select.tpl.html",'<div class="ui-select-container select2 select2-container" ng-class="{\'select2-container-active select2-dropdown-open open\': $select.open, \'select2-container-disabled\': $select.disabled, \'select2-container-active\': $select.focus, \'select2-allowclear\': $select.allowClear && !$select.isEmpty()}"><div class="ui-select-match"></div><div class="ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active" ng-class="{\'select2-display-none\': !$select.open}"><div class="select2-search" ng-show="$select.searchEnabled"><input type="text" autocomplete="off" autocorrect="false" autocapitalize="off" spellcheck="false" role="combobox" aria-expanded="true" aria-owns="ui-select-choices-{{ $select.generatedId }}" aria-label="{{ $select.baseTitle }}" aria-activedescendant="ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}" class="ui-select-search select2-input" ng-model="$select.search"></div><div class="ui-select-choices"></div></div></div>'),e.put("selectize/choices.tpl.html",'<div ng-show="$select.open" class="ui-select-choices ui-select-dropdown selectize-dropdown single"><div class="ui-select-choices-content selectize-dropdown-content"><div class="ui-select-choices-group optgroup" role="listbox"><div ng-show="$select.isGrouped" class="ui-select-choices-group-label optgroup-header" ng-bind="$group.name"></div><div role="option" class="ui-select-choices-row" ng-class="{active: $select.isActive(this), disabled: $select.isDisabled(this)}"><div class="option ui-select-choices-row-inner" data-selectable=""></div></div></div></div></div>'),e.put("selectize/match.tpl.html",'<div ng-hide="($select.open || $select.isEmpty())" class="ui-select-match" ng-transclude=""></div>'),e.put("selectize/select.tpl.html",'<div class="ui-select-container selectize-control single" ng-class="{\'open\': $select.open}"><div class="selectize-input" ng-class="{\'focus\': $select.open, \'disabled\': $select.disabled, \'selectize-focus\' : $select.focus}" ng-click="$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()"><div class="ui-select-match"></div><input type="text" autocomplete="off" tabindex="-1" class="ui-select-search ui-select-toggle" ng-click="$select.toggle($event)" placeholder="{{$select.placeholder}}" ng-model="$select.search" ng-hide="!$select.searchEnabled || ($select.selected && !$select.open)" ng-disabled="$select.disabled" aria-label="{{ $select.baseTitle }}"></div><div class="ui-select-choices"></div></div>')}]),function(e,t,n){"use strict";function i(e){var t={};e=e.split(",");var n;for(n=0;n<e.length;n++)t[e[n]]=!0;return t}function r(e,n){function i(e,i,a,s){if(i=t.lowercase(i),w[i])for(;v.last()&&x[v.last()];)r("",v.last());y[i]&&v.last()==i&&r("",i),(s=$[i]||!!s)||v.push(i);var l={};a.replace(p,function(e,t,n,i,r){l[t]=o(n||i||r||"")}),n.start&&n.start(i,l,s)}function r(e,i){var r,o=0;if(i=t.lowercase(i))for(o=v.length-1;o>=0&&v[o]!=i;o--);if(o>=0){for(r=v.length-1;r>=o;r--)n.end&&n.end(v[r]);v.length=o}}var a,s,v=[],b=e;for(v.last=function(){return v[v.length-1]};e;){if(s=!0,v.last()&&S[v.last()]?(e=e.replace(RegExp("(.*)<\\s*\\/\\s*"+v.last()+"[^>]*>","i"),function(e,t){return t=t.replace(h,"$1").replace(g,"$1"),n.chars&&n.chars(o(t)),""}),r("",v.last())):(0===e.indexOf("<!--")?(a=e.indexOf("--",4),a>=0&&e.lastIndexOf("-->",a)===a&&(n.comment&&n.comment(e.substring(4,a)),e=e.substring(a+3),s=!1)):m.test(e)?(a=e.match(m))&&(e=e.replace(a[0],""),s=!1):f.test(e)?(a=e.match(c))&&(e=e.substring(a[0].length),a[0].replace(c,r),s=!1):d.test(e)&&(a=e.match(u))&&(e=e.substring(a[0].length),a[0].replace(u,i),s=!1),s&&(a=e.indexOf("<"),s=0>a?e:e.substring(0,a),e=0>a?"":e.substring(a),n.chars&&n.chars(o(s)))),e==b)throw l("badparse",e);b=e}r()}function o(e){return T.innerHTML=e.replace(/</g,"&lt;"),T.innerText||T.textContent||""}function a(e){return e.replace(/&/g,"&amp;").replace(b,function(e){return"&#"+e.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}function s(e){var n=!1,i=t.bind(e,e.push);return{start:function(e,r,o){e=t.lowercase(e),!n&&S[e]&&(n=e),n||!0!==C[e]||(i("<"),i(e),t.forEach(r,function(e,n){var r=t.lowercase(n);!0!==E[r]||!0===k[r]&&!e.match(v)||(i(" "),i(n),i('="'),i(a(e)),i('"'))}),i(o?"/>":">"))},end:function(e){e=t.lowercase(e),n||!0!==C[e]||(i("</"),i(e),i(">")),e==n&&(n=!1)},chars:function(e){n||i(a(e))}}}var l=t.$$minErr("$sanitize"),u=/^<\s*([\w:-]+)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*>/,c=/^<\s*\/\s*([\w:-]+)[^>]*>/,p=/([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g,d=/^</,f=/^<\s*\//,h=/\x3c!--(.*?)--\x3e/g,m=/<!DOCTYPE([^>]*?)>/i,g=/<!\[CDATA\[(.*?)]]\x3e/g,v=/^((ftp|https?):\/\/|mailto:|tel:|#)/i,b=/([^\#-~| |!])/g,$=i("area,br,col,hr,img,wbr");e=i("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),n=i("rp,rt");var y=t.extend({},n,e),w=t.extend({},e,i("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")),x=t.extend({},n,i("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),S=i("script,style"),C=t.extend({},$,w,x,y),k=i("background,cite,href,longdesc,src,usemap"),E=t.extend({},k,i("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,span,start,summary,target,title,type,valign,value,vspace,width")),T=document.createElement("pre");t.module("ngSanitize",[]).value("$sanitize",function(e){var t=[];return r(e,s(t)),t.join("")}),t.module("ngSanitize").filter("linky",function(){var e=/((ftp|https?):\/\/|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>]/,n=/^mailto:/;return function(i,r){if(!i)return i;var o,a,l,u=i,c=[],p=s(c),d={};for(t.isDefined(r)&&(d.target=r);o=u.match(e);)a=o[0],o[2]==o[3]&&(a="mailto:"+a),l=o.index,p.chars(u.substr(0,l)),d.href=a,p.start("a",d),p.chars(o[0].replace(n,"")),p.end("a"),u=u.substring(l+o[0].length);return p.chars(u),c.join("")}})}(window,window.angular),angular.module("ui-notification",[]),angular.module("ui-notification").provider("Notification",function(){this.options={delay:5e3,startTop:10,startRight:10,verticalSpacing:10,horizontalSpacing:10,positionX:"right",positionY:"top",replaceMessage:!1,templateUrl:"angular-ui-notification.html",onClose:void 0,closeOnClick:!0,maxCount:0},this.setOptions=function(e){if(!angular.isObject(e))throw new Error("Options should be an object!");this.options=angular.extend({},this.options,e)},this.$get=["$timeout","$http","$compile","$templateCache","$rootScope","$injector","$sce","$q","$window",function(e,t,n,i,r,o,a,s,l){var u=this.options,c=u.startTop,p=u.startRight,d=u.verticalSpacing,f=u.horizontalSpacing,h=u.delay,m=[],g=!1,v=function(o,v){var b=s.defer();return"object"!=typeof o&&(o={message:o}),o.scope=o.scope?o.scope:r,o.template=o.templateUrl?o.templateUrl:u.templateUrl,o.delay=angular.isUndefined(o.delay)?h:o.delay,o.type=v||u.type||"",o.positionY=o.positionY?o.positionY:u.positionY,o.positionX=o.positionX?o.positionX:u.positionX,o.replaceMessage=o.replaceMessage?o.replaceMessage:u.replaceMessage,o.onClose=o.onClose?o.onClose:u.onClose,o.closeOnClick=null!==o.closeOnClick&&void 0!==o.closeOnClick?o.closeOnClick:u.closeOnClick,t.get(o.template,{cache:i}).success(function(t){function i(e){["-webkit-transition","-o-transition","transition"].forEach(function(t){h.css(t,e)})}var r=o.scope.$new();r.message=a.trustAsHtml(o.message),r.title=a.trustAsHtml(o.title),r.t=o.type.substr(0,1),r.delay=o.delay,r.onClose=o.onClose;var s=function(){for(var e=0,t=0,n=c,i=p,r=[],a=m.length-1;a>=0;a--){var s=m[a];if(o.replaceMessage&&a<m.length-1)s.addClass("killed");else{var l=parseInt(s[0].offsetHeight),h=parseInt(s[0].offsetWidth),g=r[s._positionY+s._positionX];v+l>window.innerHeight&&(g=c,t++,e=0);var v=n=g?0===e?g:g+d:c,b=i+t*(f+h);s.css(s._positionY,v+"px"),"center"==s._positionX?s.css("left",parseInt(window.innerWidth/2-h/2)+"px"):s.css(s._positionX,b+"px"),r[s._positionY+s._positionX]=v+l,u.maxCount>0&&m.length>u.maxCount&&0===a&&s.scope().kill(!0),e++}}},h=n(t)(r);h._positionY=o.positionY,h._positionX=o.positionX,h.addClass(o.type);var v=function(e){e=e.originalEvent||e,("click"===e.type||"opacity"===e.propertyName&&e.elapsedTime>=1)&&(r.onClose&&r.$apply(r.onClose(h)),h.remove(),m.splice(m.indexOf(h),1),r.$destroy(),s())};o.closeOnClick&&(h.addClass("clickable"),h.bind("click",v)),h.bind("webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd",v),angular.isNumber(o.delay)&&e(function(){h.addClass("killed")},o.delay),i("none"),angular.element(document.getElementsByTagName("body")).append(h);var $=-(parseInt(h[0].offsetHeight)+50);if(h.css(h._positionY,$+"px"),m.push(h),"center"==o.positionX){var y=parseInt(h[0].offsetWidth);h.css("left",parseInt(window.innerWidth/2-y/2)+"px")}e(function(){i("")}),r._templateElement=h,r.kill=function(t){t?(r.onClose&&r.$apply(r.onClose(r._templateElement)),m.splice(m.indexOf(r._templateElement),1),r._templateElement.remove(),r.$destroy(),e(s)):r._templateElement.addClass("killed")},e(s),g||(angular.element(l).bind("resize",function(){e(s)}),g=!0),b.resolve(r)}).error(function(e){throw new Error("Template ("+o.template+") could not be loaded. "+e)}),b.promise};return v.primary=function(e){return this(e,"primary")},v.error=function(e){return this(e,"error")},v.success=function(e){return this(e,"success")},v.info=function(e){return this(e,"info")},v.warning=function(e){return this(e,"warning")},v.clearAll=function(){angular.forEach(m,function(e){e.addClass("killed")})},v}]}),angular.module("ui-notification").run(["$templateCache",function(e){e.put("angular-ui-notification.html",'<div class="ui-notification"><h3 ng-show="title" ng-bind-html="title"></h3><div class="message" ng-bind-html="message"></div></div>')}]),!function(e,t){"object"==typeof module&&module.exports?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Spinner=t()}(this,function(){"use strict";function e(e,t){var n,i=document.createElement(e||"div");for(n in t)i[n]=t[n];return i}function t(e){for(var t=1,n=arguments.length;n>t;t++)e.appendChild(arguments[t]);return e}function n(e,t,n,i){var r=["opacity",t,~~(100*e),n,i].join("-"),o=.01+n/i*100,a=Math.max(1-(1-e)/t*(100-o),e),s=u.substring(0,u.indexOf("Animation")).toLowerCase(),l=s&&"-"+s+"-"||"";return d[r]||(c.insertRule("@"+l+"keyframes "+r+"{0%{opacity:"+a+"}"+o+"%{opacity:"+e+"}"+(o+.01)+"%{opacity:1}"+(o+t)%100+"%{opacity:"+e+"}100%{opacity:"+a+"}}",c.cssRules.length),d[r]=1),r}function i(e,t){var n,i,r=e.style;if(t=t.charAt(0).toUpperCase()+t.slice(1),void 0!==r[t])return t;for(i=0;i<p.length;i++)if(n=p[i]+t,void 0!==r[n])return n}function r(e,t){for(var n in t)e.style[i(e,n)||n]=t[n];return e}function o(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)void 0===e[i]&&(e[i]=n[i])}return e}function a(e,t){return"string"==typeof e?e:e[t%e.length]}function s(e){this.opts=o(e||{},s.defaults,f)}function l(){function n(t,n){return e("<"+t+' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">',n)}c.addRule(".spin-vml","behavior:url(#default#VML)"),s.prototype.lines=function(e,i){function o(){return r(n("group",{coordsize:c+" "+c,coordorigin:-u+" "+-u}),{width:c,height:c})}function s(e,s,l){t(d,t(r(o(),{rotation:360/i.lines*e+"deg",left:~~s}),t(r(n("roundrect",{arcsize:i.corners}),{width:u,height:i.scale*i.width,left:i.scale*i.radius,top:-i.scale*i.width>>1,filter:l}),n("fill",{color:a(i.color,e),opacity:i.opacity}),n("stroke",{opacity:0}))))}var l,u=i.scale*(i.length+i.width),c=2*i.scale*u,p=-(i.width+i.length)*i.scale*2+"px",d=r(o(),{position:"absolute",top:p,left:p});if(i.shadow)for(l=1;l<=i.lines;l++)s(l,-2,"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)");for(l=1;l<=i.lines;l++)s(l);return t(e,d)},s.prototype.opacity=function(e,t,n,i){var r=e.firstChild;i=i.shadow&&i.lines||0,r&&t+i<r.childNodes.length&&(r=r.childNodes[t+i],r=r&&r.firstChild,r=r&&r.firstChild,r&&(r.opacity=n))}}var u,c,p=["webkit","Moz","ms","O"],d={},f={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:"#000",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:"spinner",top:"50%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};if(s.defaults={},o(s.prototype,{spin:function(t){this.stop();var n=this,i=n.opts,o=n.el=e(null,{className:i.className});if(r(o,{position:i.position,width:0,zIndex:i.zIndex,left:i.left,top:i.top}),t&&t.insertBefore(o,t.firstChild||null),o.setAttribute("role","progressbar"),n.lines(o,n.opts),!u){var a,s=0,l=(i.lines-1)*(1-i.direction)/2,c=i.fps,p=c/i.speed,d=(1-i.opacity)/(p*i.trail/100),f=p/i.lines;!function h(){s++;for(var e=0;e<i.lines;e++)a=Math.max(1-(s+(i.lines-e)*f)%p*d,i.opacity),n.opacity(o,e*i.direction+l,a,i);n.timeout=n.el&&setTimeout(h,~~(1e3/c))}()}return n},stop:function(){var e=this.el;return e&&(clearTimeout(this.timeout),e.parentNode&&e.parentNode.removeChild(e),this.el=void 0),this},lines:function(i,o){function s(t,n){return r(e(),{position:"absolute",width:o.scale*(o.length+o.width)+"px",height:o.scale*o.width+"px",background:t,boxShadow:n,transformOrigin:"left",transform:"rotate("+~~(360/o.lines*c+o.rotate)+"deg) translate("+o.scale*o.radius+"px,0)",borderRadius:(o.corners*o.scale*o.width>>1)+"px"})}for(var l,c=0,p=(o.lines-1)*(1-o.direction)/2;c<o.lines;c++)l=r(e(),{position:"absolute",top:1+~(o.scale*o.width/2)+"px",transform:o.hwaccel?"translate3d(0,0,0)":"",opacity:o.opacity,animation:u&&n(o.opacity,o.trail,p+c*o.direction,o.lines)+" "+1/o.speed+"s linear infinite"}),o.shadow&&t(l,r(s("#000","0 0 4px #000"),{top:"2px"})),t(i,t(l,s(a(o.color,c),"0 0 1px rgba(0,0,0,.1)")));return i},opacity:function(e,t,n){t<e.childNodes.length&&(e.childNodes[t].style.opacity=n)}}),"undefined"!=typeof document){c=function(){var n=e("style",{type:"text/css"});return t(document.getElementsByTagName("head")[0],n),n.sheet||n.styleSheet}();var h=r(e("group"),{behavior:"url(#default#VML)"});!i(h,"transform")&&h.adj?l():u=i(h,"animation")}return s}),!function(e){"use strict";function t(e,t){return e.module("angularSpinner",[]).constant("SpinJSSpinner",t).provider("usSpinnerConfig",function(){var e={},t={};return{setDefaults:function(t){e=t||e},setTheme:function(e,n){t[e]=n},$get:function(){return{config:e,themes:t}}}}).factory("usSpinnerService",["$rootScope",function(e){var t={};return t.spin=function(t){e.$broadcast("us-spinner:spin",t)},t.stop=function(t){e.$broadcast("us-spinner:stop",t)},t}]).directive("usSpinner",["SpinJSSpinner","usSpinnerConfig",function(t,n){return{scope:!0,link:function(i,r,o){function a(){i.spinner&&i.spinner.stop()}i.spinner=null,i.key=e.isDefined(o.spinnerKey)?o.spinnerKey:!1,i.startActive=e.isDefined(o.spinnerStartActive)?i.$eval(o.spinnerStartActive):!i.key,i.spin=function(){i.spinner&&i.spinner.spin(r[0])},i.stop=function(){i.startActive=!1,a()},i.$watch(o.usSpinner,function(s){a(),s=e.extend({},n.config,n.themes[o.spinnerTheme],s),i.spinner=new t(s),i.key&&!i.startActive||o.spinnerOn||i.spinner.spin(r[0])},!0),o.spinnerOn&&i.$watch(o.spinnerOn,function(e){e?i.spin():i.stop()}),i.$on("us-spinner:spin",function(e,t){t===i.key&&i.spin()}),i.$on("us-spinner:stop",function(e,t){t===i.key&&i.stop()}),i.$on("$destroy",function(){i.stop(),i.spinner=null})}}}])}"object"==typeof module&&module.exports?module.exports=t(require("angular"),require("spin.js")):"function"==typeof define&&define.amd?define(["angular","spin"],t):t(e.angular,e.Spinner)}(this),angular.module("ProxyPrint",["Auth","ui.router","ngCookies","uiRouterStyles","ngFileUpload","angular-notification-icons","ui.bootstrap","rzModule","ngAnimate","ui.select","ngSanitize","infinite-scroll","ui-notification","angularSpinner"]).run(["$rootScope","$location","$cookieStore","$http","$state","$cookieStore",function(e,t,n,i,r,n){e.globals=n.get("globals")||{},e.globals.currentUser&&(i.defaults.headers.common.Authorization="Basic "+e.globals.currentUser.authdata),e.$on("$stateChangeError",function(e,t,i,o,a,s){switch(s){case"Canceled":r.go("consumer.mainpage",{consumerID:n.get("globals").currentUser.username})}})}]).config(["NotificationProvider",function(e){e.setOptions({delay:7e3,startTop:60,startRight:20,verticalSpacing:20,horizontalSpacing:20,positionX:"right",positionY:"top"})}]).config(["usSpinnerConfigProvider",function(e){e.setTheme("bigBlue",{color:"#3A6DB0",radius:30})}]),angular.module("Auth",[]),angular.module("ProxyPrint").config(["$stateProvider","$urlRouterProvider",function(e,t){t.when("","/"),t.otherwise("/404");var n=["/assets/css/frontpage.css","/assets/css/bootstrap.min.css","//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css","https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700,300italic,400italic,700italic","/assets/css/buttons.css"],i=["/assets/css/styles.css","/assets/css/bootstrap.min.css","//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css","/assets/css/angular-notification-icons.css","https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700,300italic,400italic,700italic","https://cdnjs.cloudflare.com/ajax/libs/ng-table/0.8.3/ng-table.min.css","/node_modules/hover.css/css/hover-min.css","/assets/css/buttons.css","/node_modules/angular-ui-notification/dist/angular-ui-notification.min.css","/assets/css/spinner.css"],r=["/assets/css/styles-pshop.css","/assets/css/bootstrap.min.css","//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css","https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700,300italic,400italic,700italic","/assets/css/buttons.css"],o=["/assets/css/styles-map.css","/assets/adminlte/bootstrap/css/bootstrap.min.css","https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css","https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css","/assets/adminlte/dist/css/AdminLTE.min.css","/assets/adminlte/dist/css/skins/skin-blue.min.css","/assets/css/spinner.css"],a=["/assets/adminlte/bootstrap/css/bootstrap.min.css","https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.5.0/css/font-awesome.min.css","https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css","/assets/adminlte/dist/css/AdminLTE.min.css","/assets/css/gradientpage.css","/node_modules/hover.css/css/hover-min.css"];e.state("notFound",{url:"/notfound",templateUrl:"/app/shared/views/404.html",data:{css:o}}).state("home",{url:"/",templateUrl:"/app/components/home/views/frontpage.html",controller:"LoginController",data:{css:n}}).state("register",{url:"/register",templateUrl:"/app/components/home/views/register.html",controller:"RegisterController",data:{css:a}}).state("printshop",{url:"/printshop",templateUrl:"/app/components/home/views/printshop.html",controller:"LoginController",data:{css:r}}).state("psregister",{url:"/psregister",templateUrl:"/app/components/home/views/printshop-register.html",controller:"PrintShopRegisterCtrl",data:{css:a}}).state("adminlogin",{url:"/adminlogin",templateUrl:"/app/components/admin/views/admin-login.html",controller:"LoginController",data:{css:a}}).state("consumer",{"abstract":!0,url:"/:consumerID",views:{"":{templateUrl:"/app/components/consumer/views/consumer-base.html",controller:"ConsumerController"}},data:{css:i},resolve:{notifications:["notificationsService",function(e){return e.getNotifications()}],consumerPendingRequests:["consumerPendingRequestsService",function(e){return e.getPendingRequests()}]}}).state("consumer.settings",{url:"/settings",templateUrl:"/app/components/consumer/views/consumer-settings.html",controller:"ConsumerSettingsCtrl",resolve:{consumer:["consumerService",function(e){return e.getConsumerInfo()}]}}).state("consumer.mainpage",{url:"/mainpage",templateUrl:"/app/components/consumer/views/consumer-mainpage.html"}).state("consumer.history",{url:"/history",templateUrl:"/app/components/consumer/views/consumer-history.html",controller:"ConsumerHistoryController",resolve:{consumerSatisfiedRequests:["consumerSatisfiedRequestsService",function(e){return e.getSatisfiedRequests()}]}}).state("consumer.printshoplist",{url:"/printshops",templateUrl:"/app/components/consumer/views/consumer-printshoplist.html",controller:"ConsumerPrintshopList",resolve:{printshops:["printshopService",function(e){return e.getAllPrintshops()}]}}).state("consumer.requestbudget",{url:"/requestbudget",templateUrl:"/app/components/consumer/views/consumer-files-specs.html",controller:"ConsumerSpecsController",resolve:{printingSchemas:["printingSchemaService","$cookieStore",function(e,t){return e.getPrintingSchemas(t.get("consumerID"))}],permission:["$q","requestHelperService",function(e,t){var n=e.defer();return t.getSubmittedFilesStatus()?n.resolve():n.reject("Canceled"),n.promise}]}}).state("consumer.printshopselection",{url:"/pshopselection",templateUrl:"/app/components/consumer/views/consumer-printshops-selection.html",controller:"ConsumerPrintShopsSelectionController",resolve:{printshopsList:["printShopListService",function(e){return e.getPrintShops()}],permission:["$q","requestHelperService",function(e,t){var n=e.defer();return t.getSpecsStatus()?n.resolve():n.reject("Canceled"),n.promise}]}}).state("consumer.budgetselection",{url:"/budgets",templateUrl:"/app/components/consumer/views/consumer-budget-selection.html",controller:"ConsumerBudgetSelectionCtrl",resolve:{budgets:["budgetService",function(e){return e.getBudgets()}],permission:["$q","requestHelperService",function(e,t){var n=e.defer();return t.getSelectedPrintShopsStatus()?n.resolve():n.reject("Canceled"),n.promise}]}}).state("consumer.printshop",{url:"/printshops/:printshopid",templateUrl:"/app/components/consumer/views/printshop-page.html",controller:"ConsumerPrintshopPageCtrl",resolve:{printshop:["printshopService","$stateParams",function(e,t){return e.getPrintshop(t.printshopid)}],reviews:["reviewsService","$stateParams",function(e,t){return e.getPrintshopReviews(t.printshopid)}]}}).state("employee",{"abstract":!0,url:"/employee/:username",views:{"":{templateUrl:"/app/components/printshop/employee/views/employee-base.html",controller:"EmployeeBaseCtrl"}},data:{css:o}}).state("employee.pending",{url:"/pending",templateUrl:"/app/components/printshop/employee/views/employee-requests-pending.html",controller:"PendingRequestsCtrl",resolve:{pendingPrintRequests:["pendingPrintRequestsService",function(e){return e.getPendingRequests()}]}}).state("employee.consult",{url:"/pending/:requestid",templateUrl:"/app/components/printshop/employee/views/employee-request-consult.html",controller:"ConsultRequestCtrl",resolve:{pendingPrintRequest:["pendingPrintRequestsService","$stateParams",function(e,t){return e.getRequest(t.requestid)}]}}).state("employee.satisfied",{url:"/satisfied",templateUrl:"/app/components/printshop/employee/views/employee-requests-satisfied.html",controller:"SatisfiedRequestsCtrl",resolve:{satisfiedPrintRequest:["satisfiedPrintRequestsService",function(e){return e.getSatisfiedRequests()}]}}).state("employee.history",{url:"/history",templateUrl:"/app/components/printshop/employee/views/employee-requests-history.html",controller:"HistoryRequestsCtrl",resolve:{historyPrintRequests:["historyPrintRequestsService",function(e){return e.getHistoryRequests()}]}}).state("employee.historyconsult",{url:"/history/:requestid",templateUrl:"/app/components/printshop/employee/views/employee-historyrequest-consult.html",controller:"ConsultHistoryRequestCtrl",resolve:{historyPrintRequest:["pendingPrintRequestsService","$stateParams",function(e,t){return e.getRequest(t.requestid)}]}}).state("manager",{"abstract":!0,url:"/manager/:username",views:{"":{templateUrl:"/app/components/printshop/manager/views/manager-base.html",controller:"ManagerBaseCtrl"}},data:{css:o}}).state("manager.mainpage",{
url:"/mainpage",templateUrl:"/app/components/printshop/manager/views/manager-printshop-page.html",controller:"ManagerPrintshopPageCtrl",resolve:{printshop:["managerPrintshopService",function(e){return e.getPrintshop()}],reviews:["managerPrintshopService","$stateParams",function(e,t){return e.getPrintshopReviews(t.printshopid)}]}}).state("manager.stats",{url:"/stats",templateUrl:"/app/components/printshop/manager/views/manager-stats.html",controller:"ManagerStatsCtrl",resolve:{stats:["pshopStatsService",function(e){return e.getStats()}]}}).state("manager.pricetable",{url:"/pricetable",templateUrl:"/app/components/printshop/manager/views/pricetable/manager-pricetable.html",controller:"ManagerPriceTableCtrl",resolve:{priceTable:["priceTableService",function(e){return e.getPriceTable()}]}}).state("manager.employees",{url:"/employees",templateUrl:"/app/components/printshop/manager/views/manager-employees.html",controller:"ManagerEmployeesCtrl",resolve:{employeesList:["employeesService",function(e){return e.getEmployeesList()}]}}).state("admin",{"abstract":!0,url:"/admin/:username",views:{"":{templateUrl:"/app/components/admin/views/admin-base.html",controller:"AdminBaseCtrl"}},data:{css:o}}).state("admin.requests",{url:"/requests",templateUrl:"/app/components/admin/views/admin-pending-requests.html",controller:"AdminPendingRequestsCtrl",resolve:{pendingRequests:["pendingRequestsService",function(e){return e.getPendingRequests()}]}}).state("admin.request",{url:"/requests/:requestid",templateUrl:"/app/components/admin/views/admin-request.html",controller:"AdminPendingRequestDetailCtrl",resolve:{pendingRequest:["pendingRequestsService",function(e){return e.getCurrentRequest()}]}}).state("admin.printshops",{url:"/printshops",templateUrl:"/app/components/admin/views/admin-printshops.html",controller:"AdminPrintShopsCtrl",resolve:{printshops:["printshopService",function(e){return e.getAllPrintshops()}]}})}]),angular.module("ProxyPrint").factory("backendURLService",["$http","$cookieStore",function(e,t){var n,i={};return e({method:"GET",url:"/config"}).then(function(e){console.log(e.data),n=e.data,t.put("baseURL",n)},function(e){}),i.getBaseURL=function(){return t.get("baseURL")},i}]),angular.module("ProxyPrint").factory("paginationService",function(){var e={};return e.getNew=function(e){e=void 0===e?5:e;var t={numPages:1,perPage:e,page:0};return t.prevPage=function(){t.page>0&&(t.page-=1)},t.nextPage=function(){t.page<t.numPages-1&&(t.page+=1)},t.toPageId=function(e){e>=0&&e<=t.numPages-1&&(t.page=e)},t},e}).filter("startFrom",function(){return function(e,t){return void 0===e?e:e.slice(+t)}}).filter("range",function(){return function(e,t){t=parseInt(t);for(var n=0;t>n;n++)e.push(n);return e}}),angular.module("ProxyPrint").factory("toasterService",["Notification",function(e){return{notify:function(t){e(t)},notifyError:function(t){e.error(t)},notifySuccess:function(t){e.success(t)},notifyInfo:function(t){e.info(t)},notifyWarning:function(t){e.warning(t)}}}]),angular.module("ProxyPrint").controller("AdminBaseCtrl",["$scope","$cookieStore","authenticationService","$state",function(e,t,n,i){e.admin=t.get("globals").currentUser,e.balance=t.get("platformBalance"),e.logout=function(){n.ClearCredentials(),i.go("adminlogin")},e.navigation={requests:"active",printshops:""},e.navigate=function(t){for(var n in e.navigation)e.navigation[n]="";e.navigation[t]="active"}}]);var app=angular.module("ProxyPrint");app.controller("AdminPendingRequestsCtrl",["$rootScope","$scope","$state","$http","pendingRequests","pendingRequestsService","$uibModal","paginationService",function(e,t,n,i,r,o,a,s){t.pendingRequests=r.data,t.paginationOn=!0,t.pagination=s.getNew(10),t.pagination.numPages=Math.ceil(t.pendingRequests.length/t.pagination.perPage),t.lookAtRequest=function(e){o.setCurrentRequest(t.pendingRequests[e]),n.go("admin.request",{requestid:e})}}]),app.controller("RequestModalController",["$scope","$uibModalInstance","$state","index","text",function(e,t,n,i,r){e.index=i,e.text=r,e.performAction=function(){t.close(e.index)},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("AdminPendingRequestDetailCtrl",["$scope","$state","$http","pendingRequest","$uibModal","pendingRequestsService",function(e,t,n,i,r,o){e.request=i,e.showSuccess=!1,e.accept=function(){console.log("Send accept to server...");o.acceptRequest(e.request.id).then(function(n){n.success&&(e.showSuccess=!0,t.go("admin.printshops"))})},e.openAcceptModal=function(t){var n=r.open({animation:!0,templateUrl:"app/components/admin/views/request-modal.html",controller:"RequestModalController",size:"sm",resolve:{index:function(){return e.index},text:function(){return t}}});n.result.then(function(t){e.showSuccess=!0,o.acceptRequest(e.request.id)})},e.openRejectModal=function(t){var n=r.open({animation:!0,templateUrl:"app/components/admin/views/admin-request-reject-modal.html",controller:"RegisterRequestCancelModalController",size:"md",resolve:{index:function(){return e.index},text:function(){return t}}});n.result.then(function(t){e.showReject=!0,o.rejectRequest(e.request.id,t)})}}]),app.controller("RegisterRequestCancelModalController",["$scope","$uibModalInstance",function(e,t){e.performAction=function(){t.close(e.motive)},e.closeModal=function(){t.dismiss("cancel")}}]);var app=angular.module("ProxyPrint");app.controller("AdminPrintShopsCtrl",["$scope","printshops","paginationService",function(e,t,n){console.log(t.data),e.printshops=t.data,e.filterPShops=function(t){return t.name.match(e.searchInput)||t.address.match(e.searchInput)},e.paginationOn=!0,e.pagination=n.getNew(10),e.pagination.numPages=Math.ceil(e.printshops.length/e.pagination.perPage)}]);var app=angular.module("ProxyPrint");app.factory("pendingRequestsService",["$http","backendURLService",function(e,t){var n={};return n.currentRequest={},n.getPendingRequests=function(){return e.get(t.getBaseURL()+"requests/pending").success(function(e){return console.log(e),e})},n.acceptRequest=function(t){var n="http://localhost:8080/request/accept/"+t;return e.post(n).success(function(e){return e})},n.rejectRequest=function(t,n){var i="http://localhost:8080/request/reject/"+t;return e.post(i,n).success(function(e){return e})},n.setCurrentRequest=function(e){n.currentRequest=e},n.getCurrentRequest=function(){return n.currentRequest},n}]),angular.module("Auth").factory("authenticationService",["Base64","$http","$cookieStore","$rootScope","$timeout","backendURLService",function(e,t,n,i,r,o){var a={};return a.Login=function(e,n,i){var r=$.param({username:e,password:n});t({method:"POST",url:o.getBaseURL()+"login",data:r,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e){i(e)})},a.Register=function(e,n,i,r,a){var s=$.param({name:e,email:n,username:i,password:r,latitude:"0",longitude:"0"});t({method:"POST",url:o.getBaseURL()+"consumer/register",data:s,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e){a(e)})},a.LoginEmployee=function(e,n,i){var r=$.param({username:e,password:n});t({method:"POST",url:o.getBaseURL()+"employee/login",data:r,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e){i(e)})},a.RegisterEmployee=function(e,n,i,r,a){var s=$.param({name:e,email:n,username:i,password:r,latitude:"0",longitude:"0"});t({method:"POST",url:o.getBaseURL()+"employee/register",data:s,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e){a(e)})},a.SetCredentials=function(r,o){var a=e.encode(r+":"+o);i.globals={currentUser:{username:r,password:o,authdata:a}},t.defaults.headers.common.Authorization="Basic "+a,t.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",n.put("globals",i.globals)},a.ClearCredentials=function(){i.globals={},n.remove("globals"),t.defaults.headers.common.Authorization="Basic "},a}]).factory("Base64",function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:function(t){var n,i,r,o,a,s="",l="",u="",c=0;do n=t.charCodeAt(c++),i=t.charCodeAt(c++),l=t.charCodeAt(c++),r=n>>2,o=(3&n)<<4|i>>4,a=(15&i)<<2|l>>6,u=63&l,isNaN(i)?a=u=64:isNaN(l)&&(u=64),s=s+e.charAt(r)+e.charAt(o)+e.charAt(a)+e.charAt(u),n=i=l="",r=o=a=u="";while(c<t.length);return s},decode:function(t){var n,i,r,o,a,s="",l="",u="",c=0,p=/[^A-Za-z0-9\+\/\=]/g;p.exec(t)&&console.log("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");do r=e.indexOf(t.charAt(c++)),o=e.indexOf(t.charAt(c++)),a=e.indexOf(t.charAt(c++)),u=e.indexOf(t.charAt(c++)),n=r<<2|o>>4,i=(15&o)<<4|a>>2,l=(3&a)<<6|u,s+=String.fromCharCode(n),64!=a&&(s+=String.fromCharCode(i)),64!=u&&(s+=String.fromCharCode(l)),n=i=l="",r=o=a=u="";while(c<t.length);return s}}}),angular.module("Auth").controller("LoginController",["$scope","$rootScope","$location","authenticationService","$state","$cookieStore",function(e,t,n,i,r,o){i.ClearCredentials(),e.login=function(){e.dataLoading=!0,i.Login(e.username,e.password,function(t){if(t.success){if(console.log(t.user),"ROLE_MANAGER"==t.user.roles[0])i.SetCredentials(e.username,e.password),o.put("printShopID",t.user.printShop.id),o.put("printShopName",t.user.printShop.name),r.go("manager.mainpage",{username:e.username});else if("ROLE_EMPLOYEE"==t.user.roles[0])i.SetCredentials(e.username,e.password),o.put("printShopName",t.user.printShop.name),r.go("employee.pending",{username:e.username});else if("ROLE_USER"==t.user.roles[0])o.put("consumerID",t.user.id),o.put("consumerName",t.user.name),o.put("consumerBalance",t.user.balance),t.externalURL&&o.put("externalURL",t.externalURL),i.SetCredentials(e.username,e.password),r.go("consumer.mainpage",{consumerID:e.username});else if("ROLE_ADMIN"==t.user.roles[0])return i.SetCredentials(e.username,e.password),o.put("platformBalance",t.user.balance),void r.go("admin.requests",{username:e.username})}else e.error="Dados de login inválidos!",e.dataLoading=!1})}}]),angular.module("Auth").controller("PrintShopRegisterCtrl",["$scope","$rootScope","$http","$location","authenticationService","$state","$cookieStore","backendURLService","toasterService",function(e,t,n,i,r,o,a,s,l){function u(e,t){e=e||"Ferrol, Galicia, Spain",geocoder=new google.maps.Geocoder,geocoder&&geocoder.geocode({address:e},function(e,n){n==google.maps.GeocoderStatus.OK&&t(e[0])})}r.ClearCredentials(),e.register=function(){e.dataLoading=!0;var t={managerUsername:e.managerUsername,managerName:e.managerName,managerEmail:e.managerEmail,managerPassword:e.managerPassword,pShopAddress:e.pShopAddress,pShopNIF:e.pShopNIF,pShopName:e.pShopName};u(e.pShopAddress,function(e){t.pShopLatitude=e.geometry.location.lat(),t.pShopLongitude=e.geometry.location.lng(),n.post(s.getBaseURL()+"request/register",t).success(function(e){l.notifySuccess("Pedido registado! Será notificado via email em breve. Obrigado!"),i.path("/printshop")})})}}]),angular.module("Auth").controller("RegisterController",["$scope","$rootScope","$location","authenticationService","$state","$cookieStore",function(e,t,n,i,r,o){i.ClearCredentials(),e.register=function(){e.dataLoading=!0,i.Register(e.name,e.email,e.username,e.password,function(t){t.success?(i.SetCredentials(e.username,e.password),r.go("consumer.mainpage",{consumerID:e.username})):(e.error=t.message,e.dataLoading=!1)})}}]),angular.module("ProxyPrint").controller("ConsumerController",["$scope","$rootScope","$cookieStore","authenticationService","fileTransferService","$state","notifications","backendURLService","consumerPendingRequests","consumerPendingRequestsService","$uibModal","notificationsService","usSpinnerService","requestHelperService","consumerService",function(e,t,n,i,r,o,a,s,l,u,c,p,d,f,h){function m(e){var t,n;for(n=0,t=0;t<e.length;t++)e[t].read||n++;return n}console.log(s.getBaseURL());var g=null;e.isGeoLocationActive=!1,navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(t){g={latitude:t.coords.latitude,longitude:t.coords.longitude},n.put("coords",g),e.isGeoLocationActive=!0}),null===g&&(g={latitude:41.560501,longitude:-8.39725},n.put("coords",g)),e.pdfFiles=[],e.consumer=n.get("globals").currentUser,e.balance=n.get("consumerBalance");var v=new Audio("assets/audio/notifications.mp3"),b=new Audio("assets/audio/coin.mp3");e.spinneractive=!1,t.$on("us-spinner:spin",function(t,n){e.spinneractive=!0}),t.$on("us-spinner:stop",function(t,n){e.spinneractive=!1});var $=new EventSource(s.getBaseURL()+"/consumer/subscribe?username="+e.consumer.username+"&password="+e.consumer.password,{withCredentials:!0});e.notifications=a.data,e.newNotifications=m(e.notifications);var y=function(t){e.$apply(function(){var i=JSON.parse(t.data),r=new Date(i.timestamp);i.day=r.getDate()+"/"+r.getMonth()+"/"+r.getFullYear(),i.hour=r.getHours()+":"+("0"+r.getMinutes()).slice(-2),i.read=!1,e.notifications.unshift(i),e.newNotifications+=1,console.log(i),v.play(),i.message.match(/O seu carregamento de [0-9]+(\.[0-9]{1,2})? € via PayPal foi confirmado. Obrigado!/)&&(b.play(),h.getConsumerBalance().success(function(e){n.put("consumerBalance",e.balance),o.reload()}))})};e.readNotification=function(t){p.readNotification(e.notifications[t].id),e.notifications[t].read=!0,e.newNotifications-=1},e.removeNotification=function(t){e.notifications[t].read||(e.newNotifications-=1),p.deleteNotification(e.notifications[t].id),e.notifications.splice(t,1)},e.removeAllNotifications=function(){p.deleteAllNotifications(e.consumer.username),e.notifications=[],e.newNotifications=0},e.markAllRead=function(){var t;for(p.readAllNotifications(e.consumer.username),t=0;t<e.notifications.length;t++)e.notifications[t].read=!0;e.newNotifications=0},$.addEventListener("message",y,!1),e.zeroNotifications=function(){e.notifications=0},e.logout=function(){i.ClearCredentials(),$location.path("/")},e.pendingRequests=l.data.printrequests,e.addFiles=function(t){if(t&&t.length){var n;for(n=0;n<t.length;n++)e.pdfFiles.push(t[n])}},e.uploadFiles=function(){d.spin("consumer-spinner"),e.pdfFiles&&e.pdfFiles.length&&(r.setFiles(e.pdfFiles),f.setSubmittedFilesStatus(!0),o.go("consumer.requestbudget"))},e.resetRequest=function(){e.pdfFiles=[]},e.openRejectModal=function(t,n){var i=c.open({animation:!0,templateUrl:"app/components/consumer/views/cancel-modal.html",controller:"RequestCancelModalController",size:"md",resolve:{text:function(){return t},requestid:function(){return n}}});i.result.then(function(t){u.rejectRequest(t,e.onCancelSuccessCallback,e.onCancelErroCallback)})},e.onCancelSuccessCallback=function(t){e.openSuccessModal("O pedido foi cancelado com sucesso!"),o.reload()},e.onCancelErroCallback=function(t){e.openSuccessModal("Ocorreu um erro a alterar o estado do pedido!"),o.reload()},e.openSuccessModal=function(e){c.open({animation:!0,templateUrl:"app/components/consumer/views/success-modal.html",controller:"SuccessModalController",size:"sm",resolve:{text:function(){return e}}})}}]),angular.module("ProxyPrint").controller("SuccessModalController",["$scope","$uibModalInstance","text",function(e,t,n){e.text=n,e.performAction=function(){t.close()},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("RequestCancelModalController",["$scope","$uibModalInstance","text","requestid",function(e,t,n,i){e.text=n,e.id=i,e.performAction=function(){t.close(e.id)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("ConsumerBudgetSelectionCtrl",["$scope","$cookieStore","$state","budgets","printShopListService","fileTransferService","budgetService","backendURLService","usSpinnerService","$uibModal","toasterService",function(e,t,n,i,r,o,a,s,l,u,c){e.budgets=i.budgets,e.printRequestID=i.printRequestID,e.selectedPrintShops=r.getSelectedPrintShops();var p=o.getProcessedFiles().files;e.submitedFiles=[];for(var d in p){var f=p[d];f.name=d,e.submitedFiles.push(f)}e.amount=0,e.selectedPrintShopName="",i.externalURL?e.payPalCallbackUrl=i.externalURL+"paypal/ipn/":e.payPalCallbackUrl=s.getBaseURL()+"paypal/ipn/",console.log(e.payPalCallbackUrl),e.noBudgetsFlag=!0,e.budgetsCounter=0;for(var h in e.budgets)isNaN(e.budgets[h])?e.selectedPrintShops[h].budget=e.budgets[h]:(e.selectedPrintShops[h].hasBudget=!0,e.selectedPrintShops[h].budget=parseFloat(e.budgets[h]).toFixed(2),e.budgetsCounter++,e.noBudgetsFlag=!1);l.stop("consumer-spinner"),console.log("$scope.noBudgetsFlag: "+e.noBudgetsFlag),console.log("Number of budgets: "+e.budgetsCounter),e.noBudgetsFlag?c.notifyWarning("Infelizmente nenhuma das reprografias selectionadas consegue atender o seu pedido. Por favor volte atrás e tente selecionar outras reprografias."):c.notifyInfo("Fantástico! "+e.budgetsCounter+" reprografia(s) pode(m) atender o seu pedido! Agora só tem de escolher uma delas."),e.finishPrintRequest=function(){console.log(e.printRequestID),console.log(e.theChosenOne),null!==e.theChosenOne&&e.theChosenOne>0?(e.amount=parseFloat(e.budgets[e.theChosenOne]).toFixed(2),e.payPalCallbackUrl+=e.printRequestID,e.selectedPrintShopName=e.selectedPrintShops[e.theChosenOne].name,console.log(e.payPalCallbackUrl),e.submitParams={printRequestID:e.printRequestID,printshopID:e.theChosenOne,budget:parseFloat(e.budgets[e.theChosenOne]),paymentMethod:""}):c.notifyWarning("Por favor uma escolha de entre as reprografias.")},e.pay=function(){l.spin("consumer-spinner"),e.openPaymentMethodSelectionModal("Escolha o método de pagamento",e.amount,e.payPalCallbackUrl,e.selectedPrintShopName,e.submitParams)},e.openPaymentMethodSelectionModal=function(e,t,n,i,r){u.open({animation:!0,templateUrl:"app/components/consumer/views/consumer-payment-method-selection.html",controller:"PaymentMethodSelectionCtrl",size:"sm",resolve:{text:function(){return e},amount:function(){return t},callbackURL:function(){return n},pshopName:function(){return i},submitParams:function(){return r}}})}}]),app.controller("PaymentMethodSelectionCtrl",["$scope","$state","toasterService","$uibModalInstance","text","amount","callbackURL","pshopName","submitParams","budgetService","usSpinnerService","$cookieStore",function(e,t,n,i,r,o,a,s,l,u,c,p){function d(e,t){if(amountParts=t.split("."),ip=parseInt(amountParts[0]),fp=parseInt(amountParts[1]),e.integerPart-=ip,tmp=e.fractionalPart-fp,tmp<=0)for(;tmp<=0;)e.integerPart--,e.fractionalPart=tmp+100,tmp+=100;else e.fractionalPart=tmp;return e}console.log("callbackURL: "+a),e.text=r,e.amount=o,e.payPalCallbackUrl=a,e.pshopName=s,e.submitParams=l,e.isMethodSelected=!1,e.paymentMethodDisplayString="",c.stop("consumer-spinner"),e.chooseProxyPrint=function(){e.submitParams.paymentMethod="PROXYPRINT_PAYMENT",e.paymentMethodDisplayString="ProxyPrint",e.isMethodSelected=!0},e.choosePayPal=function(){e.submitParams.paymentMethod="PAYPAL_PAYMENT",e.paymentMethodDisplayString="serviço externo PayPal",e.isMethodSelected=!0},e.cancel=function(){i.dismiss("cancel")},e.confirmPayment=function(){"PROXYPRINT_PAYMENT"===e.submitParams.paymentMethod?e.payViaProxyPrint():e.payViaProxyPrint()},e.payViaProxyPrint=function(){c.spin("consumer-spinner"),u.submitPrintRequest(e.submitParams.printRequestID,e.submitParams).success(function(r){if(console.log(r),r.success===!0){var o=d(p.get("consumerBalance"),e.amount);p.put("consumerBalance",o),console.log(o),n.notifySuccess("Pedido submetido com sucesso. Iremos notificá-lo assim que tudo estiver pronto. Obrigado!")}else n.notifyWarning("Infelizmente não possuí saldo suficiente para pagar o pedido.");t.go("consumer.mainpage",{},{reload:!0}),i.dismiss("cancel"),c.stop("consumer-spinner")}).error(function(e){console.log(e),n.notifyError("Pedimos desculpa mas foi impossível de processar o seu pedido. Por favor tente mais tarde."),t.go("consumer.mainpage",{},{reload:!0}),i.dismiss("cancel"),c.stop("consumer-spinner")})},e.payViaPayPal=function(){c.spin("consumer-spinner"),u.submitPrintRequest(e.submitParams.printRequestID,e.submitParams).success(function(e){e.success===!0?n.notifySuccess("Assim que efetuar o pagamento no PayPal iremos registar o seu pedido. Obrigado!"):n.notifyWarning("Infelizmente não conseguimos processar o seu pedido."),t.go("consumer.mainpage",{},{reload:!0}),i.dismiss("cancel"),c.stop("consumer-spinner")}).error(function(e){n.notifyError("Pedimos desculpa mas foi impossível de processar o seu pedido. Por favor tente mais tarde."),t.go("consumer.mainpage",{},{reload:!0}),i.dismiss("cancel"),c.stop("consumer-spinner")})},e.showPayPalConfirmButton=function(){return"PAYPAL_PAYMENT"===e.submitParams.paymentMethod},e.showProxyPrintConfirmButton=function(){return"PROXYPRINT_PAYMENT"===e.submitParams.paymentMethod}}]),angular.module("ProxyPrint").controller("ConsumerHistoryController",["$scope","consumerSatisfiedRequests","consumerSatisfiedRequestsService",function(e,t,n){e.requests=t.data.satisfiedrequests}]),angular.module("ProxyPrint").controller("ConsumerPrintshopList",["$scope","$state","printshops",function(e,t,n){e.printshops=n.data,console.log(e.printshops),e.limit=5,e.loadPrintshop=function(e){t.go("consumer.printshop",{printshopid:e})},e.loadMore=function(){var t=e.limit+5;e.limit=t>e.printshops.length?e.printshops.length:t}}]),angular.module("ProxyPrint").controller("ConsumerPrintshopPageCtrl",["$scope","printshop","reviews","printshopService","$uibModal","reviewsService","$cookieStore","$state","toasterService",function(e,t,n,i,r,o,a,s,l){e.limit=5,e.loadMore=function(){var t=e.limit+5;e.limit=t>e.printshop.reviews.length?e.printshop.reviews.length:t},e.printshop={id:t.data.id,name:t.data.name,address:t.data.address,rating:t.data.avgRating,latitude:t.data.latitude,longitude:t.data.longitude,reviews:n.data};var u=new google.maps.Map(document.getElementById("map-canvas"),{zoom:15,center:new google.maps.LatLng(e.printshop.latitude,e.printshop.longitude),mapTypeId:google.maps.MapTypeId.TERRAIN,minZoom:2});marker=new google.maps.Marker({position:new google.maps.LatLng(e.printshop.latitude,e.printshop.longitude),title:"Character",map:u}),e.displayPricetable=function(){var t=r.open({animation:!0,templateUrl:"app/components/consumer/views/display-pricetable-modal.html",controller:"DisplayPricetableCtrl",size:"md",resolve:{pricetable:["printshopService",function(t){return t.getPrintshopPricetable(e.printshop.id)}]}});t.result.then(function(){s.go("consumer.printshop")})},e.reviewPrintshop=function(){var e=r.open({animation:!0,templateUrl:"app/components/consumer/views/review-printshop-modal.html",controller:"ReviewPrintshopCtrl",size:"md"});e.result.then(function(e){addReview(e),s.go("consumer.printshop")})},addReview=function(t){o.addReview(e.printshop.id,t).success(function(){t.username=a.get("consumerName"),e.printshop.reviews.unshift(t),l.notifySuccess("A avaliação foi inserida!")}).error(function(){l.notifyError("Ocorreu um erro! A avalição não foi criada.")})}}]),angular.module("ProxyPrint").controller("DisplayPricetableCtrl",["$scope","$uibModalInstance","pricetable","priceTableService",function(e,t,n,i){e.pricetable=n.data,e.getPresentationStringForCovers=function(e){return i.getPresentationStringForCovers(e)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("ReviewPrintshopCtrl",["$scope","$uibModalInstance",function(e,t){e.score=1,e.reviewPrintshop=function(){var n=new Object;n.description=e.content,n.rating=e.score,t.close(n)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("ConsumerPrintShopsSelectionController",["$scope","printShopListService","printshopsList","fileTransferService","$cookieStore","budgetService","$state","usSpinnerService","requestHelperService","toasterService",function(e,t,n,i,r,o,a,s,l,u){function c(e,t){for(var n=e.length;n--;)e[n]===t&&e.splice(n,1)}function p(e,t){return e.distance<t.distance?-1:e.distance>t.distance?1:0}e.printshops=[];for(var d in n.data.printshops){var f=n.data.printshops[d];f.distance=Math.round(100*d)/100,e.printshops.push(f)}e.selectedPrintShops=[],e.printShopsOptions=e.printshops;var h=i.getProcessedFiles().files;e.submitedFiles=[];for(var m in h){var g=h[m];g.name=m,e.submitedFiles.push(g)}e.totalSelectedPrintShops=0,e.maxSelectionAllowed=5,e.showDistance=!1,e.pshopNames={},s.stop("consumer-spinner"),e.distanceSlider={value:0,options:{floor:0,ceil:120,showSelectionBar:!0,translate:function(t){return e.showDistance===!0&&(e.printShopsOptions=e.printshops.filter(function(e){return e.distance<=t})),t+"km"}}},e.addPrintShop=function(t){t&&e.totalSelectedPrintShops<5&&(e.selectedPrintShops.push(t),c(e.printshops,t),e.totalSelectedPrintShops++)},e.formatPrinShopForOption=function(t){return t?e.isGeoLocationActive?t.name+"  ("+t.distance+"km)":t.name:void 0},e.removePrintShop=function(t){e.printshops.push(e.selectedPrintShops[t]),e.selectedPrintShops.splice(t,1),e.totalSelectedPrintShops--,e.printshops.sort(p)},e.proceedRequest=function(){for(var n={},r=[],a=0;a<e.selectedPrintShops.length;a++)e.pshopNames[e.selectedPrintShops[a].id]=e.selectedPrintShops[a].name,n[e.selectedPrintShops[a].id]=e.selectedPrintShops[a],r.push(e.selectedPrintShops[a].id);t.setSelectedPrintShops(n);var l=i.getProcessedFiles();null!==l&&(s.spin("consumer-spinner"),l.printshops=r,o.getMeBudgetsForThis(e.budgetSuccessCallback,e.budgetErrorCallback,l,i.getFiles()))},e.budgetSuccessCallback=function(){l.setSelectedPrintShopsStatus(!0),a.go("consumer.budgetselection")},e.budgetErrorCallback=function(e){s.stop("consumer-spinner"),u.notifyWarning("Os orçamentos não puderam se efetuados. Por favor tente mais tarde."),console.log(e)}}]),angular.module("ProxyPrint").controller("ConsumerSettingsCtrl",["$scope","$cookieStore","consumer","toasterService","consumerService","authenticationService","backendURLService","$uibModal",function(e,t,n,i,r,o,a,s){e.consumer=n.data.consumer,console.log(e.consumer),e.email=e.consumer.email,e.name=e.consumer.name,e.username=e.consumer.username,e.password=e.consumer.password,e.newPassword=e.consumer.password,e.callbackURL=a.getBaseURL(),t.get("externalURL")&&(e.callbackURL=t.get("externalURL")),e.callbackURL+="paypal/ipn/consumer/"+e.consumer.id,console.log(e.callbackURL),e.consumerHasChanged=function(){return e.email===e.consumer.email&&e.name===e.consumer.name&&e.username===e.consumer.username&&e.password===e.consumer.password&&e.password===e.newPassword},e.updateConsumer=function(){e.password!==e.newPassword?i.notifyWarning("Por favor certifica-se que confirma a password corretamente."):(e.consumer.email=e.email,e.consumer.name=e.name,e.consumer.username=e.username,e.consumer.password=e.newPassword,console.log(e.consumer),r.updateConsumer(e.consumer).success(function(n){n.success&&(t.put("consumerName",e.consumer.name),o.ClearCredentials(),o.SetCredentials(e.consumer.username,e.consumer.password),i.notifySuccess("Os seus dados foram atualizados com sucesso"))}))},e.passwordType="password",e.newPasswordType="password",e.changePasswordType=function(t){0===t?"password"===e.passwordType?e.passwordType="text":e.passwordType="password":"password"===e.newPasswordType?e.newPasswordType="text":e.newPasswordType="password"},e.amount=1,e.loadUpMoney=function(){e.amount?e.openPaymentMethodSelectionModal("Tem a certeza que pretende confirmar o carregamento via PayPal?",e.amount,e.callbackURL):i.notifyWarning("Por favor introduza uma quantia válida.")},e.openPaymentMethodSelectionModal=function(e,t,n){s.open({animation:!0,templateUrl:"app/components/consumer/views/consumer-confirm-load-money-modal.html",controller:"PayPalLoadUpConfirmationCtrl",size:"sm",resolve:{text:function(){return e},amount:function(){return t},callbackURL:function(){return n}}})}}]),app.controller("PayPalLoadUpConfirmationCtrl",["$scope","$state","toasterService","$uibModalInstance","text","amount","callbackURL","$cookieStore",function(e,t,n,i,r,o,a,s){console.log("callbackURL: "+a),e.text=r,e.amount=o,e.payPalCallbackUrl=a,e.cancel=function(){i.dismiss("cancel")},e.confirmPayment=function(){n.notifySuccess("Assim que efetuar o pagamento no PayPal iremos atualizar o seu saldo. Obrigado!"),i.dismiss("cancel"),t.go("consumer.mainpage",{},{reload:!0})}}]),angular.module("ProxyPrint").controller("ConsumerSpecsController",["$scope","$uibModal","$log","fileTransferService","specMarshallService","printingSchemas","printingSchemaService","$cookieStore","$state","toasterService","usSpinnerService","requestHelperService",function(e,t,n,i,r,o,a,s,l,u,c,p){e.lastItem=null,e.lastFile=null,e.specs=o.data.pschemas.filter(function(e){return!e.deleted}),e.files=i.getFiles,e.all=[],c.stop("consumer-spinner"),e.helpSpecModal=function(){t.open({animation:!0,templateUrl:"app/components/consumer/views/help-modal.html",controller:"HelpController",size:"lg",resolve:{files:function(){return e.files()}}})},e.addToAll=function(t,n){var i=e.files();return interval="Completo",init=end=0,t.pages=interval,t.from=init,t.to=end,angular.forEach(i,function(e){e.specs.push(t)}),t},e.addPageModal=function(n,r){e.lastItem=r,e.lastFile=n;var o=t.open({animation:!0,templateUrl:"app/components/consumer/views/pagerange-modal.html",controller:"PageRangeController",size:"md",resolve:{pages:["$q",function(t){c.spin("consumer-spinner");var n=t.defer();return i.countPages(e.lastFile,function(e){n.resolve(e.pages)}),n.promise}]}});return o.result.then(function(t){var n,i=t[0],r=t[1],o=t[2];"enc"==o?n=i+" - "+r:(n="Completo",i=r=0);var a=e.files(),s=a.indexOf(e.lastFile),l=a[s].specs.indexOf(e.lastItem);l>-1&&(a[s].specs[l].pages=n,a[s].specs[l].from=i,a[s].specs[l].to=r)},function(){e.remove(e.lastFile,e.lastItem)}),r},e.remove=function(t,n){var i=e.files(),r=i.indexOf(t),o=i[r].specs.indexOf(n);o>-1&&i[r].specs.splice(o,1)},e.queueNumber=function(){var t=0;return angular.forEach(e.files(),function(e){0!==e.specs.length&&t++}),t},e.cancel=function(){e.remove(e.lastFile,e.lastItem),e.showModal=!1},e.submit=function(t,n,i){var r;i?(r="Completo",t=0,n=0):r=t+" - "+n;var o=e.files(),a=o.indexOf(e.lastFile),s=o[a].specs.indexOf(e.lastItem);s>-1&&(o[a].specs[s].pages=r),e.showModal=!1},e.queueNumber=function(){var t=0;return angular.forEach(e.files(),function(e){0!==e.specs.length&&t++}),t},e.addRequestModal=function(){var n=t.open({animation:!0,templateUrl:"app/components/consumer/views/request-modal.html",controller:"SendRequestController",size:"md",resolve:{files:function(){return e.files()}}});n.result.then(function(){c.spin("consumer-spinner"),i.ProcessFiles(e.files())})},e.addSpecModal=function(){var e=t.open({animation:!0,templateUrl:"app/components/consumer/views/spec-modal.html",controller:"AddSpecificationController",size:"md"});e.result.then(function(e){addPrintingSchema(e)})},e.editSpecModal=function(n){var i=t.open({animation:!0,templateUrl:"app/components/consumer/views/edit-spec-modal.html",controller:"EditSpecificationController",size:"md",resolve:{schema:function(){return e.specs[n]},id:function(){return e.specs[n].id}}});i.result.then(function(e){editPrintingSchema(e)})},addPrintingSchema=function(t){var n=r.marshallSpecification(t);console.log(n),null===e.specs?(n.fakeID=1,e.specs=[]):n.fakeID=e.specs.length+1,a.addPrintingSchema(n,s.get("consumerID")).success(function(t){n.id=t.id,e.specs.push(n),u.notifySuccess("A especificação foi inserida!")}).error(function(){u.notifyError("Ocorreu um erro! A especificação não foi inserida.")})},editPrintingSchema=function(t){var n=r.marshallEditedSpecification(t);a.editPrintingSchema(t.id,n,s.get("consumerID")).success(function(){n.fakeID=t.fakeID,n.id=t.id,e.specs[t.fakeID-1]=n,u.notifySuccess("A especificação foi editada com sucesso!")}).error(function(){u.notifyError("Ocorreu um erro! A especificação não foi editada.")})},e.removePrintingSchema=function(t){a.deletePrintingSchema(e.specs[t].id,s.get("consumerID")).success(function(){e.specs.splice(t,1),u.notifySuccess("A especificação foi removida!")}).error(function(){u.notifyError("Ocorreu um erro! A especificação não foi removida.")})}}]),angular.module("ProxyPrint").controller("AddSpecificationController",["$scope","$uibModalInstance",function(e,t){
e.performAction=function(){var n=[];n.push(e.name),n.push(e.format),n.push(e.sides),n.push(e.colors),n.push(e.content),e.cover&&n.push(e.cover+","+e.format),n.push(e.bindings),t.close(n)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("SendRequestController",["$scope","$uibModalInstance","files",function(e,t,n){e.files=n,e.performAction=function(){t.close()},e.closeModal=function(){t.dismiss()}}]),angular.module("ProxyPrint").controller("PageRangeController",["$scope","$uibModalInstance","pages","usSpinnerService",function(e,t,n,i){e.pageLimit=n,i.stop("consumer-spinner"),e.performAction=function(){var n=[];n.push(e.init),n.push(e.end),n.push(e.content),t.close(n)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("EditSpecificationController",["$scope","$uibModalInstance","schema","id","specMarshallService",function(e,t,n,i,r){e.schema=r.unmarshallSpecification(n),e.schema.id=i,e.schema.fakeID=n.fakeID,e.performAction=function(){t.close(e.schema)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("HelpController",["$scope","$uibModalInstance",function(e,t){e.performAction=function(){t.close()},e.closeModal=function(){t.dismiss()}}]),angular.module("ProxyPrint").directive("dndDraggable",["$parse","$timeout","dndDropEffectWorkaround","dndDragTypeWorkaround",function(e,t,n,i){return function(r,o,a){o.attr("draggable","true"),a.dndDisableIf&&r.$watch(a.dndDisableIf,function(e){o.attr("draggable",!e)}),o.on("dragstart",function(s){return s=s.originalEvent||s,"false"==o.attr("draggable")?!0:(s.dataTransfer.setData("Text",angular.toJson(r.$eval(a.dndDraggable))),s.dataTransfer.effectAllowed=a.dndEffectAllowed||"move",o.addClass("dndDragging"),t(function(){o.addClass("dndDraggingSource")},0),n.dropEffect="none",i.isDragging=!0,i.dragType=a.dndType?r.$eval(a.dndType):void 0,s._dndHandle&&s.dataTransfer.setDragImage&&s.dataTransfer.setDragImage(o[0],0,0),e(a.dndDragstart)(r,{event:s}),void s.stopPropagation())}),o.on("dragend",function(s){s=s.originalEvent||s;var l=n.dropEffect;r.$apply(function(){switch(l){case"move":e(a.dndMoved)(r,{event:s});break;case"copy":e(a.dndCopied)(r,{event:s});break;case"none":e(a.dndCanceled)(r,{event:s})}e(a.dndDragend)(r,{event:s,dropEffect:l})}),o.removeClass("dndDragging"),t(function(){o.removeClass("dndDraggingSource")},0),i.isDragging=!1,s.stopPropagation()}),o.on("click",function(t){a.dndSelected&&(t=t.originalEvent||t,r.$apply(function(){e(a.dndSelected)(r,{event:t})}),t.stopPropagation())}),o.on("selectstart",function(){this.dragDrop&&this.dragDrop()})}}]).directive("dndList",["$parse","$timeout","dndDropEffectWorkaround","dndDragTypeWorkaround",function(e,t,n,i){return function(r,o,a){function s(e,t,n){var i=v?e.offsetX||e.layerX:e.offsetY||e.layerY,r=v?t.offsetWidth:t.offsetHeight,o=v?t.offsetLeft:t.offsetTop;return o=n?o:0,o+r/2>i}function l(){var e;return angular.forEach(o.children(),function(t){var n=angular.element(t);n.hasClass("dndPlaceholder")&&(e=n)}),e||angular.element("<li class='dndPlaceholder'></li>")}function u(){return Array.prototype.indexOf.call(g.children,m)}function c(e){if(!i.isDragging&&!b)return!1;if(!f(e.dataTransfer.types))return!1;if(a.dndAllowedTypes&&i.isDragging){var t=r.$eval(a.dndAllowedTypes);if(angular.isArray(t)&&-1===t.indexOf(i.dragType))return!1}return!a.dndDisableIf||!r.$eval(a.dndDisableIf)}function p(){return h.remove(),o.removeClass("dndDragover"),!0}function d(t,n,o,a){return e(t)(r,{event:n,index:o,item:a||void 0,external:!i.isDragging,type:i.isDragging?i.dragType:void 0})}function f(e){if(!e)return!0;for(var t=0;t<e.length;t++)if("Text"===e[t]||"text/plain"===e[t])return!0;return!1}var h=l(),m=h[0],g=o[0];h.remove();var v=a.dndHorizontalList&&r.$eval(a.dndHorizontalList),b=a.dndExternalSources&&r.$eval(a.dndExternalSources);o.on("dragenter",function(e){return e=e.originalEvent||e,c(e)?void e.preventDefault():!0}),o.on("dragover",function(e){if(e=e.originalEvent||e,!c(e))return!0;if(m.parentNode!=g&&o.append(h),e.target!==g){for(var t=e.target;t.parentNode!==g&&t.parentNode;)t=t.parentNode;t.parentNode===g&&t!==m&&(s(e,t)?g.insertBefore(m,t):g.insertBefore(m,t.nextSibling))}else if(s(e,m,!0))for(;m.previousElementSibling&&(s(e,m.previousElementSibling,!0)||0===m.previousElementSibling.offsetHeight);)g.insertBefore(m,m.previousElementSibling);else for(;m.nextElementSibling&&!s(e,m.nextElementSibling,!0);)g.insertBefore(m,m.nextElementSibling.nextElementSibling);return a.dndDragover&&!d(a.dndDragover,e,u())?p():(o.addClass("dndDragover"),e.preventDefault(),e.stopPropagation(),!1)}),o.on("drop",function(e){if(e=e.originalEvent||e,!c(e))return!0;e.preventDefault();var t,i=e.dataTransfer.getData("Text")||e.dataTransfer.getData("text/plain");try{t=JSON.parse(i)}catch(o){return p()}var s=u();return a.dndDrop&&(t=d(a.dndDrop,e,s,t),!t)?p():(t!==!0&&r.$apply(function(){r.$eval(a.dndList).splice(s,0,t)}),d(a.dndInserted,e,s,t),"none"===e.dataTransfer.dropEffect?"copy"===e.dataTransfer.effectAllowed||"move"===e.dataTransfer.effectAllowed?n.dropEffect=e.dataTransfer.effectAllowed:n.dropEffect=e.ctrlKey?"copy":"move":n.dropEffect=e.dataTransfer.dropEffect,p(),e.stopPropagation(),!1)}),o.on("dragleave",function(e){e=e.originalEvent||e,o.removeClass("dndDragover"),t(function(){o.hasClass("dndDragover")||h.remove()},100)})}}]).factory("dndDragTypeWorkaround",function(){return{}}).factory("dndDropEffectWorkaround",function(){return{}}),angular.module("ProxyPrint").directive("modal",function(){return{template:'<div class="modal fade" data-backdrop="static" data-keyboard="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h4 class="modal-title">{{ title }}</h4></div><div class="modal-body" ng-transclude></div></div></div></div>',restrict:"E",transclude:!0,replace:!0,scope:!0,link:function(e,t,n){e.title=n.title,e.$watch(n.visible,function(e){1==e?$(t).modal("show"):$(t).modal("hide")}),$(t).on("shown.bs.modal",function(){e.$apply(function(){e.$parent[n.visible]=!0})}),$(t).on("hidden.bs.modal",function(){e.$apply(function(){e.$parent[n.visible]=!1})})}}}),angular.module("ProxyPrint").directive("starRating",function(){return{restrict:"A",template:'<ul class="rating"><li ng-repeat="star in stars" ng-class="star" ng-click="toggle($index)">★</li></ul>',scope:{ratingValue:"=",max:"=",onRatingSelected:"&",readOnly:"@"},link:function(e,t,n){var i=function(){e.stars=[];for(var t=0;t<e.max;t++)e.stars.push({filled:t<e.ratingValue})};e.toggle=function(t){"true"!=e.readOnly&&(e.ratingValue=t+1,e.onRatingSelected({rating:t+1}))},e.$watch("ratingValue",function(e,t){t&&i()})}}});var app=angular.module("ProxyPrint");app.factory("budgetService",["$http","backendURLService","$cookieStore","printShopListService","Upload","$timeout",function(e,t,n,i,r,o){var a={};return a.getMeBudgetsForThis=function(e,i,o,a){o=new Blob([JSON.stringify(o)],{type:"application/json"}),r.upload({url:t.getBaseURL()+"consumer/budget",data:{printRequest:o,files:a}}).then(function(t){console.log(t),n.put("budgets",t.data),e()},function(e){console.log("Response: "+JSON.stringify(e.data)),i(e.data)})},a.submitPrintRequest=function(n,i){var r=t.getBaseURL()+"consumer/printrequest/"+n+"/submit";return console.log(r),console.log(i),e.post(r,i)},a.getBudgets=function(){return n.get("budgets")},a}]);var app=angular.module("ProxyPrint");app.factory("consumerPendingRequestsService",["$http","backendURLService",function(e,t){var n={};return n.getPendingRequests=function(){return e.get(t.getBaseURL()+"consumer/requests").success(function(e){return e})},n.rejectRequest=function(n,i,r){var o=t.getBaseURL()+"consumer/requests/cancel/"+n;return e["delete"](o).success(function(e){e.success?i(e):r(e)})},n}]);var app=angular.module("ProxyPrint");app.factory("consumerSatisfiedRequestsService",["$http","backendURLService",function(e,t){var n={};n.getSatisfiedRequests=function(){return e.get(t.getBaseURL()+"consumer/satisfied").success(function(e){return i(e)})};var i=function(e){for(var t=0;t<e.satisfiedrequests.length;t++)"LIFTED"==e.satisfiedrequests[t].printrequest.status?e.satisfiedrequests[t].printrequest.status="Levantado":"FINISHED"==e.satisfiedrequests[t].printrequest.status&&(e.satisfiedrequests[t].printrequest.status="Aguarda levantamento");return e};return n}]),angular.module("ProxyPrint").factory("consumerService",["$http","backendURLService",function(e,t){var n={};return n.getConsumerInfo=function(n){return e.get(t.getBaseURL()+"consumer/info").success(function(e){return e})},n.updateConsumer=function(n){return e.put(t.getBaseURL()+"consumer/info/update",n).success(function(e){return e})},n.getConsumerBalance=function(){return e.get(t.getBaseURL()+"consumer/balance").success(function(e){return e})},n}]),angular.module("ProxyPrint").factory("fileTransferService",["Upload","$timeout","backendURLService","$cookieStore","$state","requestHelperService",function(e,t,n,i,r,o){var a={};a.processedFiles={},a.processedFiles.files={};var s=function(e,t){var n=new FileReader;n.onload=function(n){var i=n.target.result;PDFJS.getDocument(i).then(function(n){var i=n.numPages;t({name:e.name,pages:i,specs:e.specs})})},n.onerror=function(e){console.error("File could not be read! Code "+e.target.error.code),t()},n.readAsArrayBuffer(e)};return a.countPages=function(e,t){return pages=s(e,t)},a.ProcessFiles=function(e,t){for(var n=[],l=async.queue(s,1),u=0;u<e.length;u++){var c=e[u];n.push(c.name),c.$error||l.push(e[u],function(e){a.processedFiles.files[e.name]={specs:e.specs,pages:e.pages}})}i.put("uploadedFilesNames",n),l.drain=function(){console.log("All files are now loaded!"),o.setSpecsStatus(!0),r.go("consumer.printshopselection")}},a.setFiles=function(e){angular.forEach(e,function(e){e.specs=[]}),a.files=e},a.getFiles=function(){return a.files},a.getProcessedFiles=function(){return a.processedFiles},a}]),angular.module("ProxyPrint").factory("notificationsService",["$http","backendURLService",function(e,t){function n(e){var t=new Date(e.timestamp);return e.day=t.getDate()+"/"+t.getMonth()+"/"+t.getFullYear(),e.hour=t.getHours()+":"+t.getMinutes(),e.read=e.readStatus,e}var i={};return i.getNotifications=function(i){return e.get(t.getBaseURL()+"consumer/notifications").success(function(e){var t=new Array;for(var i in e)t.unshift(n(e[i]));return t})},i.deleteNotification=function(n){return e["delete"](t.getBaseURL()+"notifications/"+n).success(function(e){return e})},i.deleteAllNotifications=function(n){return e["delete"](t.getBaseURL()+"consumer/"+n+"/notifications").success(function(e){return e})},i.readNotification=function(n){return e.put(t.getBaseURL()+"notifications/"+n).success(function(e){return e})},i.readAllNotifications=function(n){return e.put(t.getBaseURL()+"consumer/"+n+"/notifications").success(function(e){return e})},i}]),angular.module("ProxyPrint").factory("printingSchemaService",["$http","backendURLService",function(e,t){var n={};return n.getPrintingSchemas=function(n){return e.get(t.getBaseURL()+"consumer/"+n+"/printingschemas").success(function(e){return setFakeIDs(e.pschemas)})},n.addPrintingSchema=function(n,i){return e.post(t.getBaseURL()+"consumer/"+i+"/printingschemas",n)},n.deletePrintingSchema=function(n,i){return e["delete"](t.getBaseURL()+"consumer/"+i+"/printingschemas/"+n)},n.editPrintingSchema=function(n,i,r){return e.put(t.getBaseURL()+"consumer/"+r+"/printingschemas/"+n,i)},setFakeIDs=function(e){var t,n;for(n=e.length,t=0;t<e.length;t++)e[t].fakeID=t+1;return e},n}]);var app=angular.module("ProxyPrint");app.factory("printShopListService",["Upload","$timeout","$http","backendURLService","$cookieStore",function(e,t,n,i,r){var o={};return o.getPrintShops=function(){var e=r.get("coords");return n.get(i.getBaseURL()+"printshops/nearest",{params:{latitude:e.latitude,longitude:e.longitude}}).success(function(e){return e.printshops}).error(function(e){return null})},o.getPrintShopsStatic=function(){return printshops=[{id:1,name:"Impressões Jerónimo",address:"Avenida Dr. Filipe Veríssimo, 19 Lourimé",price:3,distance:1},{id:2,name:"Copy & Paste",address:"Rua Augusto Semedo, 1086 Barrada",price:4,distance:2},{id:3,name:"Print4U",address:"Alameda Ana Fernandes, Porto",price:5,distance:3},{id:4,name:"Impressões Jerónimo I",address:"Avenida Dr. Filipe Veríssimo, 19 Lourimé",price:3,distance:10},{id:5,name:"Impressões Jerónimo II",address:"Avenida Dr. Filipe Veríssimo, 19 Lourimé",price:3,distance:15},{id:6,name:"Impressões Jerónimo II",address:"Avenida Dr. Filipe Veríssimo, 19 Lourimé",price:3,distance:30},{id:7,name:"Impressões Jerónimo III",address:"Avenida Dr. Filipe Veríssimo, 19 Lourimé",price:3,distance:35},{id:8,name:"Impressões Jerónimo IV",address:"Avenida Dr. Filipe Veríssimo, 19 Lourimé",price:3,distance:120}],printshops},o.getSelectedPrintShops=function(){return r.get("selectedPrintShops")},o.setSelectedPrintShops=function(e){r.put("selectedPrintShops",e)},o}]),angular.module("ProxyPrint").factory("printshopService",["$http","backendURLService",function(e,t){var n={};return n.getAllPrintshops=function(){return e.get(t.getBaseURL()+"printshops").success(function(e){return e})},n.getPrintshop=function(n){return e.get(t.getBaseURL()+"printshops/"+n).success(function(e){return e})},n.getPrintshopPricetable=function(n){return e.get(t.getBaseURL()+"printshops/"+n+"/pricetable").success(function(e){return e})},n}]),angular.module("ProxyPrint").factory("requestHelperService",function(){var e={};return e.submittedFiles=!1,e.choseSpecs=!1,e.selectedPrintshops=!1,e.getSubmittedFilesStatus=function(){return e.submittedFiles},e.setSubmittedFilesStatus=function(t){e.submittedFiles=t},e.getSpecsStatus=function(){return e.choseSpecs},e.setSpecsStatus=function(t){e.choseSpecs=t},e.getSelectedPrintShopsStatus=function(){return e.selectedPrintshops},e.setSelectedPrintShopsStatus=function(t){e.selectedPrintshops=t},e.resetRequest=function(){e.sbumittedFiles=e.choseSpecs=e.selectedPrintshops=!1},e}),angular.module("ProxyPrint").factory("reviewsService",["$http","backendURLService",function(e,t){var n={};return n.getPrintshopReviews=function(n){return e.get(t.getBaseURL()+"printshops/"+n+"/reviews").success(function(e){return e})},n.addReview=function(n,i){return e.post(t.getBaseURL()+"printshops/"+n+"/reviews",{rating:i.rating,review:i.description})},n}]),angular.module("ProxyPrint").factory("specMarshallService",[function(){var e={};return e.marshallSpecification=function(e){var t={};return t.name=e[0],t.paperSpecs="PAPER,"+e[3]+","+e[1]+","+e[2],e[4]?e[5]||e[6]?(t.coverSpecs="COVER,"+e[5],t.bindingSpecs="BINDING,"+e[6]+","+e[1]):(t.bindingSpecs="BINDING,STAPLING,0,0",t.coverSpecs=""):t.bindingSpecs=t.coverSpecs="",t},e.marshallEditedSpecification=function(e){var t={};return console.log(e),t.name=e.name,t.paperSpecs="PAPER,"+e.colors+","+e.format+","+e.sides,null===e.content?t.bindingSpecs=t.coverSpecs="":"stapled"==e.content?(t.bindingSpecs="BINDING,STAPLING,0,0",t.coverSpecs=""):(t.coverSpecs="COVER,"+e.coverSpecs+","+e.format,t.bindingSpecs="BINDING,"+e.bindingSpecs),t},e.unmarshallSpecification=function(e){console.log(e);var t={};t.name=e.name;var n=e.paperSpecs.split(",");if(t.format=n[2],t.sides=n[3],t.colors=n[1],""!==e.bindingSpecs){var i=e.bindingSpecs.split(",");"STAPLING"==i[1]?t.content="stapled":t.content="enc",t.bindingSpecs=i[1]}if(""!==e.coverSpecs){var r=e.coverSpecs.split(",");t.coverSpecs=r[1]}return t},e}]);var app=angular.module("ProxyPrint");app.factory("historyPrintRequestsService",["$http","backendURLService",function(e,t){var n={};return n.getHistoryRequests=function(){return e.get(t.getBaseURL()+"printshops/history").success(function(e){return e})},n}]);var app=angular.module("ProxyPrint");app.factory("pendingPrintRequestsService",["$http","backendURLService","$state",function(e,t,n){var i={};i.currentRequest={},i.getPendingRequests=function(){return e.get(t.getBaseURL()+"printshops/requests").success(function(e){return r(e)})};var r=function(e){for(var t=0;t<e.printrequest.length;t++)"PENDING"==e.printrequest[t].status?e.printrequest[t].status="Pedido pendente":"IN_PROGRESS"==e.printrequest[t].status?e.printrequest[t].status="A ser atendido":"FINISHED"==e.printrequest[t].status&&(e.printrequest[t].status="Finalizado");return e};return i.acceptRequest=function(n,i,r){var o=t.getBaseURL()+"printshops/requests/"+n;return e.post(o).success(function(e){e.success?i(e):r(e)})},i.rejectRequest=function(n,i,r,o){var a=t.getBaseURL()+"printshops/requests/cancel/"+n;return console.log(i),e.post(a,i).success(function(e){e.success?r(e):o(e)})},i.getRequest=function(i,r,o){var a=t.getBaseURL()+"printshops/requests/"+i;return e.get(a).success(function(e){return e.success?e:(n.go("employee.pending"),void n.reload())})},i}]);var app=angular.module("ProxyPrint");app.factory("satisfiedPrintRequestsService",["$http","backendURLService",function(e,t){var n={};return n.getSatisfiedRequests=function(){return e.get(t.getBaseURL()+"printshops/satisfied").success(function(e){return e})},n.getUpRequest=function(n,i,r){var o=t.getBaseURL()+"printshops/requests/"+n;return e.post(o).success(function(e){e.success?i(e,n):r(e,n)})},n}]);var app=angular.module("ProxyPrint");app.controller("ConsultHistoryRequestCtrl",["$scope","historyPrintRequest","$uibModal","pendingPrintRequestsService","$state","$http","$window","backendURLService",function(e,t,n,i,r,o,a,s){e.request=t.data.printrequest,console.log(e.request),e.isDataLoading=!1,e.$watch("$scope.request.status",function(){"LIFTED"==e.request.status&&(e.message="Pedido finalizado")}),e.files=t.data.printrequest.documents}]);var app=angular.module("ProxyPrint");app.controller("ConsultRequestCtrl",["$scope","pendingPrintRequest","$uibModal","pendingPrintRequestsService","$state","$http","$window","backendURLService",function(e,t,n,i,r,o,a,s){e.request=t.data.printrequest,e.isDataLoading=!1,e.$watch("$scope.request.status",function(){"PENDING"==e.request.status?e.message="Pedido pendente":"IN_PROGRESS"==e.request.status?e.message="A ser atendido":"FINISHED"==e.request.status&&(e.message="Finalizado")}),e.download=function(e){o.get(s.getBaseURL()+"/documents/"+e,{responseType:"arraybuffer"}).success(function(e){var t=new Blob([e],{type:"application/pdf"}),n=URL.createObjectURL(t);a.open(n)})},e.onCancelSuccessCallback=function(t){e.isDataLoading=!1,r.go("employee.pending"),e.openSuccessModal("O pedido foi cancelado com sucesso!")},e.onChangeStatusErroCallback=function(t){e.isDataLoading=!1,r.go("employee.pending"),e.openSuccessModal("Ocorreu um erro a alterar o estado do pedido!")},e.openRejectModal=function(t){var r=n.open({animation:!0,templateUrl:"app/components/printshop/employee/views/reject-modal.html",controller:"PrintRequestCancelModalController",size:"md"});r.result.then(function(t){e.isDataLoading=!0,i.rejectRequest(e.request.id,t,e.onCancelSuccessCallback,e.onChangeStatusErroCallback)})},e.openAcceptModal=function(t){var r=n.open({animation:!0,templateUrl:"app/components/printshop/employee/views/request-modal.html",controller:"PrintRequestModalController",size:"sm",resolve:{text:function(){return t}}});r.result.then(function(){e.isDataLoading=!0,i.acceptRequest(e.request.id,e.onChangeStatusSuccessCallback,e.onChangeStatusErroCallback)})},e.onChangeStatusSuccessCallback=function(t){e.request.status=t.newStatus,r.reload(),"PENDING"==e.request.status?e.message="Pedido pendente.":"IN_PROGRESS"==e.request.status?e.message="A ser atendido.":"FINISHED"==e.request.status&&(e.message="Finalizado"),e.isDataLoading=!0,e.openSuccessModal("Pedido passará agora para o estado: "+e.message)},e.openSuccessModal=function(e){n.open({animation:!0,templateUrl:"app/components/printshop/employee/views/success-modal.html",controller:"PrintRequestModalController",size:"sm",resolve:{text:function(){return e}}})},e.files=t.data.printrequest.documents}]),app.controller("PrintRequestModalController",["$scope","$uibModalInstance","text",function(e,t,n){e.text=n,e.performAction=function(){t.close()},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("PrintRequestCancelModalController",["$scope","$uibModalInstance",function(e,t){e.performAction=function(){t.close(e.motive)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("EmployeeBaseCtrl",["$scope","$cookieStore","authenticationService","$state",function(e,t,n,i){e.employee=t.get("globals").currentUser,e.printShopName=t.get("printShopName"),e.logout=function(){n.ClearCredentials(),i.go("printshop")},e.navigation={pending:"active",satisfied:"",history:""},e.navigate=function(t){for(var n in e.navigation)e.navigation[n]="";e.navigation[t]="active"}}]),angular.module("ProxyPrint").controller("HistoryRequestsCtrl",["$scope","historyPrintRequests","historyPrintRequestsService","paginationService","$state",function(e,t,n,i,r){e.historyRequests=t.data.historyrequests,console.log(e.historyRequests),e.paginationOn=!0,e.pagination=i.getNew(10),e.pagination.numPages=Math.ceil(e.historyRequests.length/e.pagination.perPage),e.filterRequests=function(t){return t.consumer.name.match(e.requestSearch)},e.lookAtRequest=function(e){r.go("employee.historyconsult",{requestid:e.id})}}]),angular.module("ProxyPrint").controller("PendingRequestsCtrl",["$scope","pendingPrintRequests","pendingPrintRequestsService","$state","paginationService",function(e,t,n,i,r){e.pendingRequests=t.data.printrequest,e.paginationOn=!0,e.pagination=r.getNew(10),e.pagination.numPages=Math.ceil(e.pendingRequests.length/e.pagination.perPage),e.lookAtRequest=function(e){i.go("employee.consult",{requestid:e.id})}}]),angular.module("ProxyPrint").controller("SatisfiedRequestsCtrl",["$scope","satisfiedPrintRequest","$uibModal","satisfiedPrintRequestsService","$state","paginationService",function(e,t,n,i,r,o){e.satisfiedRequests=t.data.satisfiedrequests,e.isDataLoading=!1,e.paginationOn=!0,e.pagination=o.getNew(10),e.pagination.numPages=Math.ceil(e.satisfiedRequests.length/e.pagination.perPage),e.liftRequest=function(t,r){var o=n.open({animation:!0,templateUrl:"app/components/printshop/employee/views/request-modal.html",controller:"LiftRequestModalController",size:"sm",resolve:{text:function(){return r},id:function(){return t}}});o.result.then(function(t){e.isDataLoading=!0,i.getUpRequest(t,e.onChangeStatusSuccessCallback,e.onChangeStatusErroCallback)})},e.onChangeStatusErroCallback=function(t,n){e.isDataLoading=!1,e.openSuccessModal("Ocorreu um erro a alterar o estado do pedido!")},e.onChangeStatusSuccessCallback=function(t,n){e.isDataLoading=!1,r.go("employee.history"),e.navigate("history"),e.openSuccessModal("Pedido número "+n+" levantado com sucesso!",n)},e.filterRequests=function(t){return t.consumer.name.match(e.requestSearch)},e.openSuccessModal=function(e,t){n.open({animation:!0,templateUrl:"app/components/printshop/employee/views/success-modal.html",controller:"LiftRequestModalController",size:"sm",resolve:{text:function(){return e},id:function(){return t}}})}}]),app.controller("LiftRequestModalController",["$scope","$uibModalInstance","text","id",function(e,t,n,i){e.text=n,e.requestID=i,e.performAction=function(){t.close(e.requestID)},e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("ManagerBaseCtrl",["$scope","$state","authenticationService","$cookieStore",function(e,t,n,i){e.manager=i.get("globals").currentUser,e.printShopName=i.get("printShopName"),e.logout=function(){n.ClearCredentials(),t.go("printshop")},e.navigation={mainpage:"active",stats:"",pricetable:"",employees:""},e.navigate=function(t){for(var n in e.navigation)e.navigation[n]="";e.navigation[t]="active"}}]);var app=angular.module("ProxyPrint");app.controller("ManagerEmployeesCtrl",["$scope","$state","employeesList","employeesService","$uibModal","paginationService",function(e,t,n,i,r,o){e.employees=n.data.employees,e.paginationOn=!0,e.pagination=o.getNew(10),e.pagination.numPages=Math.ceil(e.employees.length/e.pagination.perPage),e.filterEmployees=function(t){return t.name.match(e.employeeSearch)||t.username.match(e.employeeSearch)},e.newEmployee=function(){e.employees||(e.employees=[]),e.openNewEmployeeModal("Novo registo de funcionário(a)")},e.openNewEmployeeModal=function(t){var n=r.open({animation:!0,templateUrl:"app/components/printshop/manager/views/employees/new-employee-modal.html",controller:"NewEmployeeCtrl",size:"md",resolve:{text:function(){return t}}});n.result.then(function(t){i.addEmployee(i.getCurrentEmployee(),e.newEmployeeSuccessCallback,e.newEmployeeErrorCallback)})},e.newEmployeeSuccessCallback=function(t){var n=i.getCurrentEmployee();n.id=t.id,e.employees.push(n),e.messageModal("Novo(a) funcionário(a) adicionado com sucesso!")},e.newEmployeeErrorCallback=function(t){t.message?e.messageModal("Impossível adicionar empregado. Motivo: "+t.message+". Por favor tente mais tarde."):e.messageModal("Impossível adicionar empregado. Por favor tente mais tarde.")},e.editEmployee=function(t){i.setCurrentIndex(t),i.setCurrentEmployee(e.employees[t]),e.openEditEmployeeModal("Edição de registo de funcionário(a)")},e.openEditEmployeeModal=function(t){var n=r.open({animation:!0,templateUrl:"app/components/printshop/manager/views/employees/edit-employee-modal.html",controller:"EditEmployeeCtrl",size:"md",resolve:{text:function(){return t}}});n.result.then(function(t){i.editEmployee(i.getCurrentEmployee(),e.editEmployeeSuccessCallback,e.editEmployeeErrorCallback)})},e.editEmployeeSuccessCallback=function(t){var n=i.getCurrentEmployee();e.employees[i.getCurrentIndex()]=n,e.messageModal("Funcionário(a) editado(a) com sucesso")},e.editEmployeeErrorCallback=function(t){t.message?e.messageModal("Impossível editar empregado. Motivo: "+t.message+". Por favor tente mais tarde."):e.messageModal("Impossível editar empregado. Por favor tente mais tarde.")},e.confirmDelete=function(t){i.setCurrentIndex(t),e.openConfirmDeleteModal("Tem a certeza que pertende eliminar este funcionário?")},e.openConfirmDeleteModal=function(t){var n=r.open({animation:!0,templateUrl:"app/components/printshop/manager/views/employees/delete-employee-modal.html",controller:"ConfirmDeleteModalCtrl",size:"sm",resolve:{index:function(){return e.index},text:function(){return t}}});n.result.then(function(t){t=i.getCurrentIndex(),i.deleteEmployee(e.employees[t].id,e.deleteSuccessCallback,e.deleteErrorCallback)})},e.deleteSuccessCallback=function(t){index=i.getCurrentIndex(),e.employees.splice(index,1),e.messageModal("Empregado removido com sucesso")},e.deleteErrorCallback=function(t){e.messageModal("Foi impossível remover o empregado. Por favor tente mais tarde")},e.messageModal=function(e){r.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/message-modal.html",controller:"MessageModal",size:"sm",resolve:{text:function(){return e}}})}}]),app.controller("NewEmployeeCtrl",["$scope","$uibModalInstance","text","employeesService",function(e,t,n,i){e.text=n,e.addEmployee=function(){var n={name:e.name,username:e.username,password:e.password};i.setCurrentEmployee(n),t.close()},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("EditEmployeeCtrl",["$scope","$uibModalInstance","text","employeesService",function(e,t,n,i){e.text=n;var r=i.getCurrentEmployee();e.id=r.id,e.name=r.name,e.username=r.username,e.password=r.password,e.editEmployee=function(){var n={id:e.id,name:e.name,username:e.username,password:e.password};i.setCurrentEmployee(n),t.close()},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("ConfirmDeleteModalCtrl",["$scope","$uibModalInstance","index","text",function(e,t,n,i){e.index=n,e.text=i,e.confirmDeleteRow=function(){t.close(e.index)},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("MessageModal",["$scope","$uibModalInstance","text",function(e,t,n){e.text=n,e.closeModal=function(){t.dismiss("cancel")}}]);var app=angular.module("ProxyPrint");app.controller("ManagerPriceTableCtrl",["$scope","$uibModal","priceTableService","priceTable",function(e,t,n,i){function r(e,t){for(var n=[],i=[],r=0;r<e.length;r++)n[e[r]]=!0;for(var r=0;r<t.length;r++)n[t[r]]?delete n[t[r]]:n[t[r]]=!0;for(var o in n)i.push(o);return i}e.priceTable=i.data,e.staplingPrice=e.priceTable.stapling,e.priceTable.stapling>0?e.isStaplingFree=!1:e.isStaplingFree=!0,e.newEntryPrintCopyModal=function(t){n.setCurrentTable(t),e.priceTable.printcopy[n.getCurrentTable()]||(e.priceTable.printcopy[n.getCurrentTable()]=[]),e.openNewEntryPrintCopyModal("Nova entrada em impressões e cópias a preto e branco.")},e.openNewEntryPrintCopyModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/new-printcopy-row-modal.html",controller:"NewPrintCopyEntryCtrl",size:"md",resolve:{text:function(){return i}}});r.result.then(function(t){e.priceTable.printcopy[n.getCurrentTable()].push(n.getNewEntry()),e.messageModal("Nova linha adicionada com sucesso!")})},e.editRowPaper=function(t,i){n.setCurrentTable(t),n.setCurrentRowIndex(i),n.setCurrentEntry(e.priceTable.printcopy[t][i]),e.openEditPrintCopyEntryCtrl("Editar entrada em impressões e cópias a preto e branco.")},e.openEditPrintCopyEntryCtrl=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/edit-printcopy-row-modal.html",controller:"EditPrintCopyEntryCtrl",size:"md",resolve:{text:function(){return i}}});r.result.then(function(t){e.priceTable.printcopy[n.getCurrentTable()][n.getCurrentRowIndex()]=n.getNewEntry(),e.messageModal("Linha editada com sucesso!")})},e.confirmDelete=function(t,i){n.setCurrentTable(t),n.setCurrentRowIndex(i),e.openConfirmDeleteModal("Tem a certeza que pertende apagar esta linha do preçário?")},e.openConfirmDeleteModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/delete-row-modal.html",controller:"ConfirmDeleteModalCtrl",size:"sm",resolve:{index:function(){return e.index},text:function(){return i}}});r.result.then(function(t){t=n.getCurrentRowIndex();var i=n.deletePaperRow(e.priceTable.printcopy[n.getCurrentTable()][t]);i.success?(e.priceTable.printcopy[n.getCurrentTable()].splice(t,1),e.messageModal("O item foi removido.")):e.messageModal("Foi impossível remover o item desejado. Por favor tente mais tarde.")})},e.newEntryRingsModal=function(t){n.setCurrentTable(t),n.setCurrentRingType(t),e.priceTable.rings[n.getCurrentTable()]||(e.priceTable.rings[n.getCurrentTable()]=[]),e.openNewRingsEntryModal("Nova entrada em encadernações, tabela de "+n.getPresentationStringForRings(t)+".")},e.openNewRingsEntryModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/new-rings-row-modal.html",controller:"NewRingsEntryCtrl",size:"md",resolve:{text:function(){return i}}});r.result.then(function(t){e.priceTable.rings[n.getCurrentTable()].push(n.getNewEntry()),e.messageModal("Nova linha adicionada com sucesso!")})},e.editRowRings=function(t,i){n.setCurrentRingType(t),n.setCurrentTable(t),n.setCurrentRowIndex(i),n.setCurrentEntry(e.priceTable.rings[t][i]),e.openEditRingsEntryModal("Editar entrada em encadernações, tabela de "+n.getPresentationStringForRings(t)+".")},e.openEditRingsEntryModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/edit-rings-row-modal.html",controller:"EditRingsEntryCtrl",size:"md",resolve:{text:function(){return i}}});r.result.then(function(t){e.priceTable.rings[n.getCurrentTable()][n.getCurrentRowIndex()]=n.getNewEntry(),e.messageModal("Item editado com sucesso!")})},e.confirmRingDelete=function(t,i){n.setCurrentTable(t),n.setCurrentRowIndex(i),e.openConfirmRingDeleteModal("Tem a certeza que pertende apagar esta linha do preçário?")},e.openConfirmRingDeleteModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/delete-row-modal.html",
controller:"ConfirmDeleteModalCtrl",size:"sm",resolve:{index:function(){return e.index},text:function(){return i}}});r.result.then(function(t){t=n.getCurrentRowIndex();var i=n.deleteRingRow(e.priceTable.rings[n.getCurrentTable()][t]);i.success?(e.priceTable.rings[n.getCurrentTable()].splice(t,1),e.messageModal("O item foi removido.")):e.messageModal("Foi impossível remover o item desejado. Por favor tente mais tarde.")})},e.getPresentationStringForCovers=function(e){return n.getPresentationStringForCovers(e)},e.totalCoversTypes=3,e.sizeOfCoversTable=function(){if(!e.priceTable.covers)return 0;var t=0;for(var n in e.priceTable.covers)t++;return t},e.newEntryCoverModal=function(){e.priceTable.covers||(e.priceTable.covers=[]);var t=n.getAllCoverOptions(),i=[];for(var o in e.priceTable.covers)i.push(o);var a=r(t,i);n.setCoversOptions(a),e.openNewCoverEntryModal("Nova entrada em capas de encadernação.")},e.openNewCoverEntryModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/new-cover-row-modal.html",controller:"NewCoverEntryCtrl",size:"md",resolve:{text:function(){return i}}});r.result.then(function(t){e.priceTable.covers[n.getNewEntry().coverType]=n.getNewEntry(),e.messageModal("Nova linha adicionada com sucesso!")})},e.editRowCover=function(t){n.setCurrentEntry(e.priceTable.covers[t]),e.openEditCoverEntryModal("Editar entrada em capas de encadernação, "+n.getPresentationStringForCovers(t)+".")},e.openEditCoverEntryModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/edit-cover-row-modal.html",controller:"EditCoverEntryCtrl",size:"md",resolve:{text:function(){return i}}});r.result.then(function(t){e.priceTable.covers[n.getNewEntry().coverType]=n.getNewEntry(),e.messageModal("Item editado com sucesso!")})},e.confirmCoverDelete=function(t){n.setCurrentTable(t),e.openConfirmCoverDeleteModal("Tem a certeza que pertende apagar esta linha do preçário?")},e.openConfirmCoverDeleteModal=function(i){var r=t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/delete-row-modal.html",controller:"ConfirmDeleteModalCtrl",size:"sm",resolve:{index:function(){return e.index},text:function(){return i}}});r.result.then(function(t){var i=n.deleteCoverRow(e.priceTable.covers[n.getCurrentTable()]);i.success?(delete e.priceTable.covers[n.getCurrentTable()],e.messageModal("O item foi removido.")):e.messageModal("Foi impossível remover o item desejado. Por favor tente mais tarde.")})},e.editStaplingValue=function(t){0===t?(e.isStaplingFree=!0,n.editStaplingValue(0),e.priceTable.stapling=0,e.messageModal("Agrafar passa agora a ser grátis.")):-1==t?e.isStaplingFree=!1:(e.isStaplingFree=!1,n.editStaplingValue(e.staplingPrice),e.messageModal("Agrafar tem agora um novo preço de "+e.staplingPrice+" €."))},e.messageModal=function(e){t.open({animation:!0,templateUrl:"app/components/printshop/manager/views/pricetable/modals/message-modal.html",controller:"MessageModal",size:"sm",resolve:{text:function(){return e}}})}}]),app.controller("NewPrintCopyEntryCtrl",["$scope","$uibModalInstance","text","priceTableService",function(e,t,n,i){e.text=n,e.addNewEntry=function(){var n={infLim:e.infLim,supLim:e.supLim,priceA4SIMPLEX:e.priceA4SIMPLEX,priceA4DUPLEX:e.priceA4DUPLEX,priceA3SIMPLEX:e.priceA3SIMPLEX,priceA3DUPLEX:e.priceA3DUPLEX,colors:i.getCurrentTable()};i.addNewPaperRow(n),t.close()},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("EditPrintCopyEntryCtrl",["$scope","$uibModalInstance","text","priceTableService",function(e,t,n,i){e.text=n;var r=i.getCurrentEntry();e.infLim=r.infLim,e.supLim=r.supLim,e.priceA4SIMPLEX=parseFloat(r.priceA4SIMPLEX),e.priceA4DUPLEX=parseFloat(r.priceA4DUPLEX),e.priceA3SIMPLEX=parseFloat(r.priceA3SIMPLEX),e.priceA3DUPLEX=parseFloat(r.priceA3DUPLEX),e.editEntry=function(){var n={infLim:e.infLim,supLim:e.supLim,priceA4SIMPLEX:e.priceA4SIMPLEX,priceA4DUPLEX:e.priceA4DUPLEX,priceA3SIMPLEX:e.priceA3SIMPLEX,priceA3DUPLEX:e.priceA3DUPLEX,colors:i.getCurrentTable()};i.editPaperRow(n),t.close()},e.closeModal=function(){t.dismiss("cancel")},e.itemHasChanged=function(){return e.infLim===r.infLim&&e.supLim===r.supLim&&e.priceA4SIMPLEX===parseFloat(r.priceA4SIMPLEX)&&e.priceA4DUPLEX===parseFloat(r.priceA4DUPLEX)&&e.priceA3SIMPLEX===parseFloat(r.priceA3SIMPLEX)&&e.priceA3DUPLEX===parseFloat(r.priceA3DUPLEX)}}]),app.controller("NewRingsEntryCtrl",["$scope","$uibModalInstance","text","priceTableService",function(e,t,n,i){e.text=n,e.addNewEntry=function(){var n={ringType:i.getCurrentRingType(),infLim:e.infLim,supLim:e.supLim,price:e.price};i.addNewRingsRow(n),t.close()},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("EditRingsEntryCtrl",["$scope","$uibModalInstance","text","priceTableService",function(e,t,n,i){e.text=n;var r=i.getCurrentEntry();e.infLim=r.infLim,e.supLim=r.supLim,e.price=parseFloat(r.price),e.editEntry=function(){var n={ringType:i.getCurrentRingType(),infLim:e.infLim,supLim:e.supLim,price:e.price};i.editRingsRow(n),t.close()},e.closeModal=function(){t.dismiss("cancel")},e.itemHasChanged=function(){return e.infLim===r.infLim&&e.supLim===r.supLim&&e.price===parseFloat(r.price)}}]),app.controller("NewCoverEntryCtrl",["$scope","$uibModalInstance","text","priceTableService",function(e,t,n,i){e.text=n,e.covers=i.getCoversOptions(),e.getPresentationStringForCovers=function(e){return i.getPresentationStringForCovers(e)},e.addNewEntry=function(n){var r={coverType:e.selectedCoverType,priceA4:e.priceA4,priceA3:e.priceA3};console.log(r),i.addNewCoverRow(r),t.close()},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("EditCoverEntryCtrl",["$scope","$uibModalInstance","text","priceTableService",function(e,t,n,i){e.text=n;var r=i.getCurrentEntry();e.selectedCoverType=r.coverType,e.priceA4=parseFloat(r.priceA4),e.priceA3=parseFloat(r.priceA3),e.getPresentationStringForCovers=function(e){return i.getPresentationStringForCovers(e)},e.editEntry=function(){var n={coverType:e.selectedCoverType,priceA4:e.priceA4,priceA3:e.priceA3};i.editCoverRow(n),t.close()},e.closeModal=function(){t.dismiss("cancel")},e.itemHasChanged=function(){return e.priceA3===parseFloat(r.priceA3)&&e.priceA4===parseFloat(r.priceA4)}}]),app.controller("ConfirmDeleteModalCtrl",["$scope","$uibModalInstance","index","text",function(e,t,n,i){e.index=n,e.text=i,e.confirmDeleteRow=function(){t.close(e.index)},e.closeModal=function(){t.dismiss("cancel")}}]),app.controller("MessageModal",["$scope","$uibModalInstance","text",function(e,t,n){e.text=n,e.closeModal=function(){t.dismiss("cancel")}}]),angular.module("ProxyPrint").controller("ManagerPrintshopPageCtrl",["$scope","printshop","reviews","$cookieStore",function(e,t,n,i){console.log(t.data.printshop),console.log(n.data),i.put("pshopBalance",t.data.printshop.balance),e.data=t.data.printshop,e.printshop={name:e.data.name,address:e.data.address,rating:e.data.avgRating,latitude:e.data.latitude,longitude:e.data.longitude,reviews:n.data};var r=new google.maps.Map(document.getElementById("map-canvas"),{zoom:15,center:new google.maps.LatLng(e.printshop.latitude,e.printshop.longitude),mapTypeId:google.maps.MapTypeId.TERRAIN,minZoom:2});marker=new google.maps.Marker({position:new google.maps.LatLng(e.printshop.latitude,e.printshop.longitude),title:"Character",map:r})}]),angular.module("ProxyPrint").controller("ManagerStatsCtrl",["$scope","$cookieStore","stats",function(e,t,n){e.balance=t.get("pshopBalance"),e.stats=n.data}]);var app=angular.module("ProxyPrint");app.factory("employeesService",["$http","$cookieStore","backendURLService",function(e,t,n){var i={};return i.currentIndex="",i.currentEmployee={},i.getEmployeesList=function(){var i=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/employees";return e.get(i).success(function(e){return e})},i.addEmployee=function(r,o,a){i.currentEmployee=r;var s=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/employees";return e.post(s,r).success(function(e){return e.success?void o(e):a(e)})},i.editEmployee=function(r,o,a){i.currentEmployee=r;var s=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/employees";return e.put(s,r).success(function(e){return e.success?void o(e):a(e)})},i.deleteEmployee=function(i,r,o){var a=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/employees/"+i;return e["delete"](a).success(function(e){e.success?r(e):o(e)})},i.setCurrentIndex=function(e){i.currentIndex=e},i.getCurrentIndex=function(){return i.currentIndex},i.setCurrentEmployee=function(e){i.currentEmployee=e},i.getCurrentEmployee=function(){return i.currentEmployee},i}]),angular.module("ProxyPrint").factory("managerPrintshopService",["$http","backendURLService","$cookieStore",function(e,t,n){var i={};return i.getPrintshop=function(){return e.get(t.getBaseURL()+"printshop").success(function(e){return e})},i.getPrintshopReviews=function(i){return e.get(t.getBaseURL()+"printshops/"+n.get("printShopID")+"/reviews").success(function(e){return e})},i}]);var app=angular.module("ProxyPrint");app.factory("priceTableService",["$http","$cookieStore","backendURLService",function(e,t,n){var i={};return i.currentTable="",i.currentRingType="",i.currentRowIndex=-1,i.newEntry={},i.currentEntry={},i.coversOptions=[],i.getPriceTable=function(){var i=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable";return e.get(i).success(function(e){return e})},i.addNewPaperRow=function(r){i.newEntry=r;var o=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/papers";return e.post(o,r).success(function(e){return e})},i.deletePaperRow=function(i){var r=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/deletepaper";return e.post(r,i).success(function(e){return e})},i.editPaperRow=function(r){i.newEntry=r;var o=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/papers";return e.put(o,r).success(function(e){return e})},i.addNewRingsRow=function(r){i.newEntry=r;var o=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/rings";return e.post(o,r).success(function(e){return e})},i.editRingsRow=function(r){i.newEntry=r;var o=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/rings";return e.put(o,r).success(function(e){return e})},i.deleteRingRow=function(i){var r=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/deletering";return e.post(r,i).success(function(e){return e})},i.addNewCoverRow=function(r){i.newEntry=r;var o=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/covers";return e.post(o,r).success(function(e){return e})},i.editCoverRow=function(r){i.newEntry=r;var o=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/covers";return e.put(o,r).success(function(e){return e})},i.deleteCoverRow=function(i){var r=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/deletecover";return e.post(r,i).success(function(e){return e})},i.editStaplingValue=function(i){var r=n.getBaseURL()+"printshops/"+t.get("printShopID")+"/pricetable/editstapling";return e.put(r,i.toString()).success(function(e){return e})},i.setCurrentTable=function(e){i.currentTable=e},i.getCurrentTable=function(){return i.currentTable},i.getNewEntry=function(){return i.newEntry},i.setCurrentRowIndex=function(e){i.currentRowIndex=e},i.getCurrentRowIndex=function(){return i.currentRowIndex},i.setCurrentRingType=function(e){i.currentRingType=e},i.getCurrentRingType=function(){return i.currentRingType},i.getCurrentEntry=function(){return i.currentEntry},i.setCurrentEntry=function(e){i.currentEntry=e},i.getCoversOptions=function(){return i.coversOptions},i.getAllCoverOptions=function(){var e=["CRISTAL_ACETATE","PVC_TRANSPARENT","PVC_OPAQUE"];return e},i.setCoversOptions=function(e){i.coversOptions=e},i.getPresentationStringForRings=function(e){return"PLASTIC"==e?"Argolas de Plástico":"SPIRAL"==e?"Argolas Espiral":"WIRE"==e?"Argolas de Arame":""},i.getKeyForCoverPresentationString=function(e){return"Argolas de Plástico"==e?"PLASTIC":"Argolas Espiral"==e?"SPIRAL":"Argolas de Arame"==e?"WIRE":""},i.getPresentationStringForCovers=function(e){return"CRISTAL_ACETATE"==e?"Acetato de Cristal":"PVC_TRANSPARENT"==e?"PVC Transparente Fosco":"PVC_OPAQUE"==e?"PVC Opaco":""},i.getKeyForCoverPresentationString=function(e){return"Acetato de Cristal"==e?"CRISTAL_ACETATE":"PVC Transparente Fosco"==e?"PVC_TRANSPARENT":"PVC Opaco"==e?"PVC_OPAQUE":""},i}]);var app=angular.module("ProxyPrint");app.factory("pshopStatsService",["$http","backendURLService",function(e,t){var n={};return n.getStats=function(){var n=t.getBaseURL()+"printshops/stats";return e.get(n).success(function(e){return e})},n}]);
//# sourceMappingURL=data:application/json;base64,
